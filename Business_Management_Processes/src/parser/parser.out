Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    NEW_NODE
    SOD
    SENIORITY
    BOD

Grammar

Rule 0     S' -> prog
Rule 1     prog -> begin
Rule 2     prog -> begin before
Rule 3     begin -> TASKS COLON task_node
Rule 4     begin -> USERS COLON user_node
Rule 5     before -> BEFORE COLON task_node_pair
Rule 6     task_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 7     task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA task_node_pair
Rule 8     task_node -> NODE end
Rule 9     task_node -> NODE COMMA task_node
Rule 10    task_node -> NODE task_option
Rule 11    user_node -> NODE end
Rule 12    user_node -> NODE COMMA user_node
Rule 13    user_node -> NODE user_option
Rule 14    task_option -> OPTION task_option
Rule 15    task_option -> OPTION COMMA task_node
Rule 16    task_option -> OPTION end
Rule 17    user_option -> OPTION user_option
Rule 18    user_option -> OPTION COMMA user_node
Rule 19    user_option -> OPTION end
Rule 20    end -> END
Rule 21    end -> END begin

Terminals, with rules where they appear

BEFORE               : 5
BOD                  : 
COLON                : 3 4 5
COMMA                : 6 7 7 9 12 15 18
END                  : 6 20 21
LPAREN               : 6 7
NEW_NODE             : 
NODE                 : 6 6 7 7 8 9 10 11 12 13
OPTION               : 14 15 16 17 18 19
RPAREN               : 6 7
SENIORITY            : 
SOD                  : 
TASKS                : 3
USERS                : 4
error                : 

Nonterminals, with rules where they appear

before               : 2
begin                : 1 2 21
end                  : 8 11 16 19
prog                 : 0
task_node            : 3 9 15
task_node_pair       : 5 7
task_option          : 10 14
user_node            : 4 12 18
user_option          : 13 17

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . begin
    (2) prog -> . begin before
    (3) begin -> . TASKS COLON task_node
    (4) begin -> . USERS COLON user_node

    TASKS           shift and go to state 2
    USERS           shift and go to state 3

    prog                           shift and go to state 4
    begin                          shift and go to state 1

state 1

    (1) prog -> begin .
    (2) prog -> begin . before
    (5) before -> . BEFORE COLON task_node_pair

    $end            reduce using rule 1 (prog -> begin .)
    BEFORE          shift and go to state 5

    before                         shift and go to state 6

state 2

    (3) begin -> TASKS . COLON task_node

    COLON           shift and go to state 7


state 3

    (4) begin -> USERS . COLON user_node

    COLON           shift and go to state 8


state 4

    (0) S' -> prog .



state 5

    (5) before -> BEFORE . COLON task_node_pair

    COLON           shift and go to state 9


state 6

    (2) prog -> begin before .

    $end            reduce using rule 2 (prog -> begin before .)


state 7

    (3) begin -> TASKS COLON . task_node
    (8) task_node -> . NODE end
    (9) task_node -> . NODE COMMA task_node
    (10) task_node -> . NODE task_option

    NODE            shift and go to state 10

    task_node                      shift and go to state 11

state 8

    (4) begin -> USERS COLON . user_node
    (11) user_node -> . NODE end
    (12) user_node -> . NODE COMMA user_node
    (13) user_node -> . NODE user_option

    NODE            shift and go to state 12

    user_node                      shift and go to state 13

state 9

    (5) before -> BEFORE COLON . task_node_pair
    (6) task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (7) task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA task_node_pair

    LPAREN          shift and go to state 14

    task_node_pair                 shift and go to state 15

state 10

    (8) task_node -> NODE . end
    (9) task_node -> NODE . COMMA task_node
    (10) task_node -> NODE . task_option
    (20) end -> . END
    (21) end -> . END begin
    (14) task_option -> . OPTION task_option
    (15) task_option -> . OPTION COMMA task_node
    (16) task_option -> . OPTION end

    COMMA           shift and go to state 18
    END             shift and go to state 19
    OPTION          shift and go to state 17

    task_option                    shift and go to state 20
    end                            shift and go to state 16

state 11

    (3) begin -> TASKS COLON task_node .

    BEFORE          reduce using rule 3 (begin -> TASKS COLON task_node .)
    $end            reduce using rule 3 (begin -> TASKS COLON task_node .)


state 12

    (11) user_node -> NODE . end
    (12) user_node -> NODE . COMMA user_node
    (13) user_node -> NODE . user_option
    (20) end -> . END
    (21) end -> . END begin
    (17) user_option -> . OPTION user_option
    (18) user_option -> . OPTION COMMA user_node
    (19) user_option -> . OPTION end

    COMMA           shift and go to state 23
    END             shift and go to state 19
    OPTION          shift and go to state 22

    user_option                    shift and go to state 24
    end                            shift and go to state 21

state 13

    (4) begin -> USERS COLON user_node .

    BEFORE          reduce using rule 4 (begin -> USERS COLON user_node .)
    $end            reduce using rule 4 (begin -> USERS COLON user_node .)


state 14

    (6) task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END
    (7) task_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA task_node_pair

    NODE            shift and go to state 25


state 15

    (5) before -> BEFORE COLON task_node_pair .

    $end            reduce using rule 5 (before -> BEFORE COLON task_node_pair .)


state 16

    (8) task_node -> NODE end .

    BEFORE          reduce using rule 8 (task_node -> NODE end .)
    $end            reduce using rule 8 (task_node -> NODE end .)


state 17

    (14) task_option -> OPTION . task_option
    (15) task_option -> OPTION . COMMA task_node
    (16) task_option -> OPTION . end
    (14) task_option -> . OPTION task_option
    (15) task_option -> . OPTION COMMA task_node
    (16) task_option -> . OPTION end
    (20) end -> . END
    (21) end -> . END begin

    COMMA           shift and go to state 26
    OPTION          shift and go to state 17
    END             shift and go to state 19

    task_option                    shift and go to state 28
    end                            shift and go to state 27

state 18

    (9) task_node -> NODE COMMA . task_node
    (8) task_node -> . NODE end
    (9) task_node -> . NODE COMMA task_node
    (10) task_node -> . NODE task_option

    NODE            shift and go to state 10

    task_node                      shift and go to state 29

state 19

    (20) end -> END .
    (21) end -> END . begin
    (3) begin -> . TASKS COLON task_node
    (4) begin -> . USERS COLON user_node

    BEFORE          reduce using rule 20 (end -> END .)
    $end            reduce using rule 20 (end -> END .)
    TASKS           shift and go to state 2
    USERS           shift and go to state 3

    begin                          shift and go to state 30

state 20

    (10) task_node -> NODE task_option .

    BEFORE          reduce using rule 10 (task_node -> NODE task_option .)
    $end            reduce using rule 10 (task_node -> NODE task_option .)


state 21

    (11) user_node -> NODE end .

    BEFORE          reduce using rule 11 (user_node -> NODE end .)
    $end            reduce using rule 11 (user_node -> NODE end .)


state 22

    (17) user_option -> OPTION . user_option
    (18) user_option -> OPTION . COMMA user_node
    (19) user_option -> OPTION . end
    (17) user_option -> . OPTION user_option
    (18) user_option -> . OPTION COMMA user_node
    (19) user_option -> . OPTION end
    (20) end -> . END
    (21) end -> . END begin

    COMMA           shift and go to state 32
    OPTION          shift and go to state 22
    END             shift and go to state 19

    end                            shift and go to state 33
    user_option                    shift and go to state 31

state 23

    (12) user_node -> NODE COMMA . user_node
    (11) user_node -> . NODE end
    (12) user_node -> . NODE COMMA user_node
    (13) user_node -> . NODE user_option

    NODE            shift and go to state 12

    user_node                      shift and go to state 34

state 24

    (13) user_node -> NODE user_option .

    BEFORE          reduce using rule 13 (user_node -> NODE user_option .)
    $end            reduce using rule 13 (user_node -> NODE user_option .)


state 25

    (6) task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END
    (7) task_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA task_node_pair

    COMMA           shift and go to state 35


state 26

    (15) task_option -> OPTION COMMA . task_node
    (8) task_node -> . NODE end
    (9) task_node -> . NODE COMMA task_node
    (10) task_node -> . NODE task_option

    NODE            shift and go to state 10

    task_node                      shift and go to state 36

state 27

    (16) task_option -> OPTION end .

    BEFORE          reduce using rule 16 (task_option -> OPTION end .)
    $end            reduce using rule 16 (task_option -> OPTION end .)


state 28

    (14) task_option -> OPTION task_option .

    BEFORE          reduce using rule 14 (task_option -> OPTION task_option .)
    $end            reduce using rule 14 (task_option -> OPTION task_option .)


state 29

    (9) task_node -> NODE COMMA task_node .

    BEFORE          reduce using rule 9 (task_node -> NODE COMMA task_node .)
    $end            reduce using rule 9 (task_node -> NODE COMMA task_node .)


state 30

    (21) end -> END begin .

    BEFORE          reduce using rule 21 (end -> END begin .)
    $end            reduce using rule 21 (end -> END begin .)


state 31

    (17) user_option -> OPTION user_option .

    BEFORE          reduce using rule 17 (user_option -> OPTION user_option .)
    $end            reduce using rule 17 (user_option -> OPTION user_option .)


state 32

    (18) user_option -> OPTION COMMA . user_node
    (11) user_node -> . NODE end
    (12) user_node -> . NODE COMMA user_node
    (13) user_node -> . NODE user_option

    NODE            shift and go to state 12

    user_node                      shift and go to state 37

state 33

    (19) user_option -> OPTION end .

    BEFORE          reduce using rule 19 (user_option -> OPTION end .)
    $end            reduce using rule 19 (user_option -> OPTION end .)


state 34

    (12) user_node -> NODE COMMA user_node .

    BEFORE          reduce using rule 12 (user_node -> NODE COMMA user_node .)
    $end            reduce using rule 12 (user_node -> NODE COMMA user_node .)


state 35

    (6) task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END
    (7) task_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA task_node_pair

    NODE            shift and go to state 38


state 36

    (15) task_option -> OPTION COMMA task_node .

    BEFORE          reduce using rule 15 (task_option -> OPTION COMMA task_node .)
    $end            reduce using rule 15 (task_option -> OPTION COMMA task_node .)


state 37

    (18) user_option -> OPTION COMMA user_node .

    BEFORE          reduce using rule 18 (user_option -> OPTION COMMA user_node .)
    $end            reduce using rule 18 (user_option -> OPTION COMMA user_node .)


state 38

    (6) task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END
    (7) task_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA task_node_pair

    RPAREN          shift and go to state 39


state 39

    (6) task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END
    (7) task_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA task_node_pair

    END             shift and go to state 41
    COMMA           shift and go to state 40


state 40

    (7) task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . task_node_pair
    (6) task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (7) task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA task_node_pair

    LPAREN          shift and go to state 14

    task_node_pair                 shift and go to state 42

state 41

    (6) task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .

    $end            reduce using rule 6 (task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)


state 42

    (7) task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA task_node_pair .

    $end            reduce using rule 7 (task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA task_node_pair .)

