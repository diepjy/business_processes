Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    USERS_OPTION

Grammar

Rule 0     S' -> prog
Rule 1     prog -> begin
Rule 2     prog -> begin rules
Rule 3     begin -> TASKS COLON task_node
Rule 4     begin -> USERS COLON user_node
Rule 5     rules -> BEFORE COLON before_task_node_pair
Rule 6     rules -> BOD COLON bod_task_node_pair
Rule 7     rules -> SOD COLON sod_task_node_pair
Rule 8     rules -> SENIORITY COLON user_node_pair
Rule 9     before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 10    before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair
Rule 11    bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 12    bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair
Rule 13    sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 14    sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair
Rule 15    user_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 16    user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair
Rule 17    task_node -> NODE end
Rule 18    task_node -> NODE COMMA task_node
Rule 19    task_node -> NODE task_option
Rule 20    user_node -> NODE end
Rule 21    user_node -> NODE COMMA user_node
Rule 22    user_node -> NODE user_option
Rule 23    user_node -> NODE end_rule
Rule 24    task_option -> OPTION task_option
Rule 25    task_option -> OPTION COMMA task_node
Rule 26    task_option -> OPTION end
Rule 27    user_option -> OPTION user_option
Rule 28    user_option -> OPTION COMMA
Rule 29    user_option -> OPTION COLON users_global_option
Rule 30    user_option -> OPTION end
Rule 31    users_global_option -> ALLOCATE end_rule
Rule 32    end -> END
Rule 33    end -> END begin
Rule 34    end_rule -> END rules

Terminals, with rules where they appear

ALLOCATE             : 31
BEFORE               : 5
BOD                  : 6
COLON                : 3 4 5 6 7 8 29
COMMA                : 9 10 10 11 12 12 13 14 14 15 16 16 18 21 25 28
END                  : 9 11 13 15 32 33 34
LPAREN               : 9 10 11 12 13 14 15 16
NODE                 : 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 18 19 20 21 22 23
OPTION               : 24 25 26 27 28 29 30
RPAREN               : 9 10 11 12 13 14 15 16
SENIORITY            : 8
SOD                  : 7
TASKS                : 3
USERS                : 4
USERS_OPTION         : 
error                : 

Nonterminals, with rules where they appear

before_task_node_pair : 5 10
begin                : 1 2 33
bod_task_node_pair   : 6 12
end                  : 17 20 26 30
end_rule             : 23 31
prog                 : 0
rules                : 2 34
sod_task_node_pair   : 7 14
task_node            : 3 18 25
task_option          : 19 24
user_node            : 4 21
user_node_pair       : 8 16
user_option          : 22 27
users_global_option  : 29

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . begin
    (2) prog -> . begin rules
    (3) begin -> . TASKS COLON task_node
    (4) begin -> . USERS COLON user_node

    TASKS           shift and go to state 2
    USERS           shift and go to state 3

    prog                           shift and go to state 4
    begin                          shift and go to state 1

state 1

    (1) prog -> begin .
    (2) prog -> begin . rules
    (5) rules -> . BEFORE COLON before_task_node_pair
    (6) rules -> . BOD COLON bod_task_node_pair
    (7) rules -> . SOD COLON sod_task_node_pair
    (8) rules -> . SENIORITY COLON user_node_pair

    $end            reduce using rule 1 (prog -> begin .)
    BEFORE          shift and go to state 9
    BOD             shift and go to state 8
    SOD             shift and go to state 5
    SENIORITY       shift and go to state 7

    rules                          shift and go to state 6

state 2

    (3) begin -> TASKS . COLON task_node

    COLON           shift and go to state 10


state 3

    (4) begin -> USERS . COLON user_node

    COLON           shift and go to state 11


state 4

    (0) S' -> prog .



state 5

    (7) rules -> SOD . COLON sod_task_node_pair

    COLON           shift and go to state 12


state 6

    (2) prog -> begin rules .

    $end            reduce using rule 2 (prog -> begin rules .)


state 7

    (8) rules -> SENIORITY . COLON user_node_pair

    COLON           shift and go to state 13


state 8

    (6) rules -> BOD . COLON bod_task_node_pair

    COLON           shift and go to state 14


state 9

    (5) rules -> BEFORE . COLON before_task_node_pair

    COLON           shift and go to state 15


state 10

    (3) begin -> TASKS COLON . task_node
    (17) task_node -> . NODE end
    (18) task_node -> . NODE COMMA task_node
    (19) task_node -> . NODE task_option

    NODE            shift and go to state 16

    task_node                      shift and go to state 17

state 11

    (4) begin -> USERS COLON . user_node
    (20) user_node -> . NODE end
    (21) user_node -> . NODE COMMA user_node
    (22) user_node -> . NODE user_option
    (23) user_node -> . NODE end_rule

    NODE            shift and go to state 18

    user_node                      shift and go to state 19

state 12

    (7) rules -> SOD COLON . sod_task_node_pair
    (13) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (14) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair

    LPAREN          shift and go to state 21

    sod_task_node_pair             shift and go to state 20

state 13

    (8) rules -> SENIORITY COLON . user_node_pair
    (15) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (16) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair

    LPAREN          shift and go to state 23

    user_node_pair                 shift and go to state 22

state 14

    (6) rules -> BOD COLON . bod_task_node_pair
    (11) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (12) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair

    LPAREN          shift and go to state 24

    bod_task_node_pair             shift and go to state 25

state 15

    (5) rules -> BEFORE COLON . before_task_node_pair
    (9) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (10) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair

    LPAREN          shift and go to state 27

    before_task_node_pair          shift and go to state 26

state 16

    (17) task_node -> NODE . end
    (18) task_node -> NODE . COMMA task_node
    (19) task_node -> NODE . task_option
    (32) end -> . END
    (33) end -> . END begin
    (24) task_option -> . OPTION task_option
    (25) task_option -> . OPTION COMMA task_node
    (26) task_option -> . OPTION end

    COMMA           shift and go to state 30
    END             shift and go to state 31
    OPTION          shift and go to state 29

    task_option                    shift and go to state 32
    end                            shift and go to state 28

state 17

    (3) begin -> TASKS COLON task_node .

    BEFORE          reduce using rule 3 (begin -> TASKS COLON task_node .)
    BOD             reduce using rule 3 (begin -> TASKS COLON task_node .)
    SOD             reduce using rule 3 (begin -> TASKS COLON task_node .)
    SENIORITY       reduce using rule 3 (begin -> TASKS COLON task_node .)
    $end            reduce using rule 3 (begin -> TASKS COLON task_node .)


state 18

    (20) user_node -> NODE . end
    (21) user_node -> NODE . COMMA user_node
    (22) user_node -> NODE . user_option
    (23) user_node -> NODE . end_rule
    (32) end -> . END
    (33) end -> . END begin
    (27) user_option -> . OPTION user_option
    (28) user_option -> . OPTION COMMA
    (29) user_option -> . OPTION COLON users_global_option
    (30) user_option -> . OPTION end
    (34) end_rule -> . END rules

    COMMA           shift and go to state 36
    END             shift and go to state 38
    OPTION          shift and go to state 34

    end                            shift and go to state 33
    end_rule                       shift and go to state 35
    user_option                    shift and go to state 37

state 19

    (4) begin -> USERS COLON user_node .

    BEFORE          reduce using rule 4 (begin -> USERS COLON user_node .)
    BOD             reduce using rule 4 (begin -> USERS COLON user_node .)
    SOD             reduce using rule 4 (begin -> USERS COLON user_node .)
    SENIORITY       reduce using rule 4 (begin -> USERS COLON user_node .)
    $end            reduce using rule 4 (begin -> USERS COLON user_node .)


state 20

    (7) rules -> SOD COLON sod_task_node_pair .

    BEFORE          reduce using rule 7 (rules -> SOD COLON sod_task_node_pair .)
    BOD             reduce using rule 7 (rules -> SOD COLON sod_task_node_pair .)
    SOD             reduce using rule 7 (rules -> SOD COLON sod_task_node_pair .)
    SENIORITY       reduce using rule 7 (rules -> SOD COLON sod_task_node_pair .)
    $end            reduce using rule 7 (rules -> SOD COLON sod_task_node_pair .)


state 21

    (13) sod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END
    (14) sod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA sod_task_node_pair

    NODE            shift and go to state 39


state 22

    (8) rules -> SENIORITY COLON user_node_pair .

    BEFORE          reduce using rule 8 (rules -> SENIORITY COLON user_node_pair .)
    BOD             reduce using rule 8 (rules -> SENIORITY COLON user_node_pair .)
    SOD             reduce using rule 8 (rules -> SENIORITY COLON user_node_pair .)
    SENIORITY       reduce using rule 8 (rules -> SENIORITY COLON user_node_pair .)
    $end            reduce using rule 8 (rules -> SENIORITY COLON user_node_pair .)


state 23

    (15) user_node_pair -> LPAREN . NODE COMMA NODE RPAREN END
    (16) user_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA user_node_pair

    NODE            shift and go to state 40


state 24

    (11) bod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END
    (12) bod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA bod_task_node_pair

    NODE            shift and go to state 41


state 25

    (6) rules -> BOD COLON bod_task_node_pair .

    BEFORE          reduce using rule 6 (rules -> BOD COLON bod_task_node_pair .)
    BOD             reduce using rule 6 (rules -> BOD COLON bod_task_node_pair .)
    SOD             reduce using rule 6 (rules -> BOD COLON bod_task_node_pair .)
    SENIORITY       reduce using rule 6 (rules -> BOD COLON bod_task_node_pair .)
    $end            reduce using rule 6 (rules -> BOD COLON bod_task_node_pair .)


state 26

    (5) rules -> BEFORE COLON before_task_node_pair .

    BEFORE          reduce using rule 5 (rules -> BEFORE COLON before_task_node_pair .)
    BOD             reduce using rule 5 (rules -> BEFORE COLON before_task_node_pair .)
    SOD             reduce using rule 5 (rules -> BEFORE COLON before_task_node_pair .)
    SENIORITY       reduce using rule 5 (rules -> BEFORE COLON before_task_node_pair .)
    $end            reduce using rule 5 (rules -> BEFORE COLON before_task_node_pair .)


state 27

    (9) before_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END
    (10) before_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA before_task_node_pair

    NODE            shift and go to state 42


state 28

    (17) task_node -> NODE end .

    BEFORE          reduce using rule 17 (task_node -> NODE end .)
    BOD             reduce using rule 17 (task_node -> NODE end .)
    SOD             reduce using rule 17 (task_node -> NODE end .)
    SENIORITY       reduce using rule 17 (task_node -> NODE end .)
    $end            reduce using rule 17 (task_node -> NODE end .)


state 29

    (24) task_option -> OPTION . task_option
    (25) task_option -> OPTION . COMMA task_node
    (26) task_option -> OPTION . end
    (24) task_option -> . OPTION task_option
    (25) task_option -> . OPTION COMMA task_node
    (26) task_option -> . OPTION end
    (32) end -> . END
    (33) end -> . END begin

    COMMA           shift and go to state 43
    OPTION          shift and go to state 29
    END             shift and go to state 31

    task_option                    shift and go to state 45
    end                            shift and go to state 44

state 30

    (18) task_node -> NODE COMMA . task_node
    (17) task_node -> . NODE end
    (18) task_node -> . NODE COMMA task_node
    (19) task_node -> . NODE task_option

    NODE            shift and go to state 16

    task_node                      shift and go to state 46

state 31

    (32) end -> END .
    (33) end -> END . begin
    (3) begin -> . TASKS COLON task_node
    (4) begin -> . USERS COLON user_node

    BEFORE          reduce using rule 32 (end -> END .)
    BOD             reduce using rule 32 (end -> END .)
    SOD             reduce using rule 32 (end -> END .)
    SENIORITY       reduce using rule 32 (end -> END .)
    $end            reduce using rule 32 (end -> END .)
    TASKS           shift and go to state 2
    USERS           shift and go to state 3

    begin                          shift and go to state 47

state 32

    (19) task_node -> NODE task_option .

    BEFORE          reduce using rule 19 (task_node -> NODE task_option .)
    BOD             reduce using rule 19 (task_node -> NODE task_option .)
    SOD             reduce using rule 19 (task_node -> NODE task_option .)
    SENIORITY       reduce using rule 19 (task_node -> NODE task_option .)
    $end            reduce using rule 19 (task_node -> NODE task_option .)


state 33

    (20) user_node -> NODE end .

    BEFORE          reduce using rule 20 (user_node -> NODE end .)
    BOD             reduce using rule 20 (user_node -> NODE end .)
    SOD             reduce using rule 20 (user_node -> NODE end .)
    SENIORITY       reduce using rule 20 (user_node -> NODE end .)
    $end            reduce using rule 20 (user_node -> NODE end .)


state 34

    (27) user_option -> OPTION . user_option
    (28) user_option -> OPTION . COMMA
    (29) user_option -> OPTION . COLON users_global_option
    (30) user_option -> OPTION . end
    (27) user_option -> . OPTION user_option
    (28) user_option -> . OPTION COMMA
    (29) user_option -> . OPTION COLON users_global_option
    (30) user_option -> . OPTION end
    (32) end -> . END
    (33) end -> . END begin

    COMMA           shift and go to state 50
    COLON           shift and go to state 51
    OPTION          shift and go to state 34
    END             shift and go to state 31

    end                            shift and go to state 48
    user_option                    shift and go to state 49

state 35

    (23) user_node -> NODE end_rule .

    BEFORE          reduce using rule 23 (user_node -> NODE end_rule .)
    BOD             reduce using rule 23 (user_node -> NODE end_rule .)
    SOD             reduce using rule 23 (user_node -> NODE end_rule .)
    SENIORITY       reduce using rule 23 (user_node -> NODE end_rule .)
    $end            reduce using rule 23 (user_node -> NODE end_rule .)


state 36

    (21) user_node -> NODE COMMA . user_node
    (20) user_node -> . NODE end
    (21) user_node -> . NODE COMMA user_node
    (22) user_node -> . NODE user_option
    (23) user_node -> . NODE end_rule

    NODE            shift and go to state 18

    user_node                      shift and go to state 52

state 37

    (22) user_node -> NODE user_option .

    BEFORE          reduce using rule 22 (user_node -> NODE user_option .)
    BOD             reduce using rule 22 (user_node -> NODE user_option .)
    SOD             reduce using rule 22 (user_node -> NODE user_option .)
    SENIORITY       reduce using rule 22 (user_node -> NODE user_option .)
    $end            reduce using rule 22 (user_node -> NODE user_option .)


state 38

    (32) end -> END .
    (33) end -> END . begin
    (34) end_rule -> END . rules
    (3) begin -> . TASKS COLON task_node
    (4) begin -> . USERS COLON user_node
    (5) rules -> . BEFORE COLON before_task_node_pair
    (6) rules -> . BOD COLON bod_task_node_pair
    (7) rules -> . SOD COLON sod_task_node_pair
    (8) rules -> . SENIORITY COLON user_node_pair

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
    $end            reduce using rule 32 (end -> END .)
    TASKS           shift and go to state 2
    USERS           shift and go to state 3
    BEFORE          shift and go to state 9
    BOD             shift and go to state 8
    SOD             shift and go to state 5
    SENIORITY       shift and go to state 7

  ! BEFORE          [ reduce using rule 32 (end -> END .) ]
  ! BOD             [ reduce using rule 32 (end -> END .) ]
  ! SOD             [ reduce using rule 32 (end -> END .) ]
  ! SENIORITY       [ reduce using rule 32 (end -> END .) ]

    begin                          shift and go to state 47
    rules                          shift and go to state 53

state 39

    (13) sod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END
    (14) sod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA sod_task_node_pair

    COMMA           shift and go to state 54


state 40

    (15) user_node_pair -> LPAREN NODE . COMMA NODE RPAREN END
    (16) user_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA user_node_pair

    COMMA           shift and go to state 55


state 41

    (11) bod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END
    (12) bod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA bod_task_node_pair

    COMMA           shift and go to state 56


state 42

    (9) before_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END
    (10) before_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA before_task_node_pair

    COMMA           shift and go to state 57


state 43

    (25) task_option -> OPTION COMMA . task_node
    (17) task_node -> . NODE end
    (18) task_node -> . NODE COMMA task_node
    (19) task_node -> . NODE task_option

    NODE            shift and go to state 16

    task_node                      shift and go to state 58

state 44

    (26) task_option -> OPTION end .

    BEFORE          reduce using rule 26 (task_option -> OPTION end .)
    BOD             reduce using rule 26 (task_option -> OPTION end .)
    SOD             reduce using rule 26 (task_option -> OPTION end .)
    SENIORITY       reduce using rule 26 (task_option -> OPTION end .)
    $end            reduce using rule 26 (task_option -> OPTION end .)


state 45

    (24) task_option -> OPTION task_option .

    BEFORE          reduce using rule 24 (task_option -> OPTION task_option .)
    BOD             reduce using rule 24 (task_option -> OPTION task_option .)
    SOD             reduce using rule 24 (task_option -> OPTION task_option .)
    SENIORITY       reduce using rule 24 (task_option -> OPTION task_option .)
    $end            reduce using rule 24 (task_option -> OPTION task_option .)


state 46

    (18) task_node -> NODE COMMA task_node .

    BEFORE          reduce using rule 18 (task_node -> NODE COMMA task_node .)
    BOD             reduce using rule 18 (task_node -> NODE COMMA task_node .)
    SOD             reduce using rule 18 (task_node -> NODE COMMA task_node .)
    SENIORITY       reduce using rule 18 (task_node -> NODE COMMA task_node .)
    $end            reduce using rule 18 (task_node -> NODE COMMA task_node .)


state 47

    (33) end -> END begin .

    BEFORE          reduce using rule 33 (end -> END begin .)
    BOD             reduce using rule 33 (end -> END begin .)
    SOD             reduce using rule 33 (end -> END begin .)
    SENIORITY       reduce using rule 33 (end -> END begin .)
    $end            reduce using rule 33 (end -> END begin .)


state 48

    (30) user_option -> OPTION end .

    BEFORE          reduce using rule 30 (user_option -> OPTION end .)
    BOD             reduce using rule 30 (user_option -> OPTION end .)
    SOD             reduce using rule 30 (user_option -> OPTION end .)
    SENIORITY       reduce using rule 30 (user_option -> OPTION end .)
    $end            reduce using rule 30 (user_option -> OPTION end .)


state 49

    (27) user_option -> OPTION user_option .

    BEFORE          reduce using rule 27 (user_option -> OPTION user_option .)
    BOD             reduce using rule 27 (user_option -> OPTION user_option .)
    SOD             reduce using rule 27 (user_option -> OPTION user_option .)
    SENIORITY       reduce using rule 27 (user_option -> OPTION user_option .)
    $end            reduce using rule 27 (user_option -> OPTION user_option .)


state 50

    (28) user_option -> OPTION COMMA .

    BEFORE          reduce using rule 28 (user_option -> OPTION COMMA .)
    BOD             reduce using rule 28 (user_option -> OPTION COMMA .)
    SOD             reduce using rule 28 (user_option -> OPTION COMMA .)
    SENIORITY       reduce using rule 28 (user_option -> OPTION COMMA .)
    $end            reduce using rule 28 (user_option -> OPTION COMMA .)


state 51

    (29) user_option -> OPTION COLON . users_global_option
    (31) users_global_option -> . ALLOCATE end_rule

    ALLOCATE        shift and go to state 60

    users_global_option            shift and go to state 59

state 52

    (21) user_node -> NODE COMMA user_node .

    BEFORE          reduce using rule 21 (user_node -> NODE COMMA user_node .)
    BOD             reduce using rule 21 (user_node -> NODE COMMA user_node .)
    SOD             reduce using rule 21 (user_node -> NODE COMMA user_node .)
    SENIORITY       reduce using rule 21 (user_node -> NODE COMMA user_node .)
    $end            reduce using rule 21 (user_node -> NODE COMMA user_node .)


state 53

    (34) end_rule -> END rules .

    BEFORE          reduce using rule 34 (end_rule -> END rules .)
    BOD             reduce using rule 34 (end_rule -> END rules .)
    SOD             reduce using rule 34 (end_rule -> END rules .)
    SENIORITY       reduce using rule 34 (end_rule -> END rules .)
    $end            reduce using rule 34 (end_rule -> END rules .)


state 54

    (13) sod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END
    (14) sod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA sod_task_node_pair

    NODE            shift and go to state 61


state 55

    (15) user_node_pair -> LPAREN NODE COMMA . NODE RPAREN END
    (16) user_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA user_node_pair

    NODE            shift and go to state 62


state 56

    (11) bod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END
    (12) bod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA bod_task_node_pair

    NODE            shift and go to state 63


state 57

    (9) before_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END
    (10) before_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA before_task_node_pair

    NODE            shift and go to state 64


state 58

    (25) task_option -> OPTION COMMA task_node .

    BEFORE          reduce using rule 25 (task_option -> OPTION COMMA task_node .)
    BOD             reduce using rule 25 (task_option -> OPTION COMMA task_node .)
    SOD             reduce using rule 25 (task_option -> OPTION COMMA task_node .)
    SENIORITY       reduce using rule 25 (task_option -> OPTION COMMA task_node .)
    $end            reduce using rule 25 (task_option -> OPTION COMMA task_node .)


state 59

    (29) user_option -> OPTION COLON users_global_option .

    BEFORE          reduce using rule 29 (user_option -> OPTION COLON users_global_option .)
    BOD             reduce using rule 29 (user_option -> OPTION COLON users_global_option .)
    SOD             reduce using rule 29 (user_option -> OPTION COLON users_global_option .)
    SENIORITY       reduce using rule 29 (user_option -> OPTION COLON users_global_option .)
    $end            reduce using rule 29 (user_option -> OPTION COLON users_global_option .)


state 60

    (31) users_global_option -> ALLOCATE . end_rule
    (34) end_rule -> . END rules

    END             shift and go to state 66

    end_rule                       shift and go to state 65

state 61

    (13) sod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END
    (14) sod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA sod_task_node_pair

    RPAREN          shift and go to state 67


state 62

    (15) user_node_pair -> LPAREN NODE COMMA NODE . RPAREN END
    (16) user_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA user_node_pair

    RPAREN          shift and go to state 68


state 63

    (11) bod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END
    (12) bod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA bod_task_node_pair

    RPAREN          shift and go to state 69


state 64

    (9) before_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END
    (10) before_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA before_task_node_pair

    RPAREN          shift and go to state 70


state 65

    (31) users_global_option -> ALLOCATE end_rule .

    BEFORE          reduce using rule 31 (users_global_option -> ALLOCATE end_rule .)
    BOD             reduce using rule 31 (users_global_option -> ALLOCATE end_rule .)
    SOD             reduce using rule 31 (users_global_option -> ALLOCATE end_rule .)
    SENIORITY       reduce using rule 31 (users_global_option -> ALLOCATE end_rule .)
    $end            reduce using rule 31 (users_global_option -> ALLOCATE end_rule .)


state 66

    (34) end_rule -> END . rules
    (5) rules -> . BEFORE COLON before_task_node_pair
    (6) rules -> . BOD COLON bod_task_node_pair
    (7) rules -> . SOD COLON sod_task_node_pair
    (8) rules -> . SENIORITY COLON user_node_pair

    BEFORE          shift and go to state 9
    BOD             shift and go to state 8
    SOD             shift and go to state 5
    SENIORITY       shift and go to state 7

    rules                          shift and go to state 53

state 67

    (13) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END
    (14) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA sod_task_node_pair

    END             shift and go to state 72
    COMMA           shift and go to state 71


state 68

    (15) user_node_pair -> LPAREN NODE COMMA NODE RPAREN . END
    (16) user_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA user_node_pair

    END             shift and go to state 74
    COMMA           shift and go to state 73


state 69

    (11) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END
    (12) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA bod_task_node_pair

    END             shift and go to state 76
    COMMA           shift and go to state 75


state 70

    (9) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END
    (10) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA before_task_node_pair

    END             shift and go to state 78
    COMMA           shift and go to state 77


state 71

    (14) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . sod_task_node_pair
    (13) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (14) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair

    LPAREN          shift and go to state 21

    sod_task_node_pair             shift and go to state 79

state 72

    (13) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .

    $end            reduce using rule 13 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BEFORE          reduce using rule 13 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BOD             reduce using rule 13 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    SOD             reduce using rule 13 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    SENIORITY       reduce using rule 13 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)


state 73

    (16) user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . user_node_pair
    (15) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (16) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair

    LPAREN          shift and go to state 23

    user_node_pair                 shift and go to state 80

state 74

    (15) user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .

    $end            reduce using rule 15 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BEFORE          reduce using rule 15 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BOD             reduce using rule 15 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    SOD             reduce using rule 15 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    SENIORITY       reduce using rule 15 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)


state 75

    (12) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . bod_task_node_pair
    (11) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (12) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair

    LPAREN          shift and go to state 24

    bod_task_node_pair             shift and go to state 81

state 76

    (11) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .

    $end            reduce using rule 11 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BEFORE          reduce using rule 11 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BOD             reduce using rule 11 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    SOD             reduce using rule 11 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    SENIORITY       reduce using rule 11 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)


state 77

    (10) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . before_task_node_pair
    (9) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (10) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair

    LPAREN          shift and go to state 27

    before_task_node_pair          shift and go to state 82

state 78

    (9) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .

    $end            reduce using rule 9 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BEFORE          reduce using rule 9 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BOD             reduce using rule 9 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    SOD             reduce using rule 9 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    SENIORITY       reduce using rule 9 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)


state 79

    (14) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .

    $end            reduce using rule 14 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    BEFORE          reduce using rule 14 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    BOD             reduce using rule 14 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    SOD             reduce using rule 14 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    SENIORITY       reduce using rule 14 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)


state 80

    (16) user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .

    $end            reduce using rule 16 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    BEFORE          reduce using rule 16 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    BOD             reduce using rule 16 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    SOD             reduce using rule 16 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    SENIORITY       reduce using rule 16 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)


state 81

    (12) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .

    $end            reduce using rule 12 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    BEFORE          reduce using rule 12 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    BOD             reduce using rule 12 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    SOD             reduce using rule 12 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    SENIORITY       reduce using rule 12 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)


state 82

    (10) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .

    $end            reduce using rule 10 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    BEFORE          reduce using rule 10 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    BOD             reduce using rule 10 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    SOD             reduce using rule 10 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    SENIORITY       reduce using rule 10 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for BEFORE in state 38 resolved as shift
WARNING: shift/reduce conflict for BOD in state 38 resolved as shift
WARNING: shift/reduce conflict for SOD in state 38 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 38 resolved as shift
