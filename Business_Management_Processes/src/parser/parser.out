Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    RPAREN
    NEW_NODE
    SOD
    LPAREN
    SENIORITY
    BEFORE
    BOD

Grammar

Rule 0     S' -> begin
Rule 1     begin -> TASKS COLON node
Rule 2     begin -> USERS COLON node
Rule 3     node -> NODE end
Rule 4     node -> NODE COMMA node
Rule 5     node -> NODE option
Rule 6     option -> OPTION option
Rule 7     option -> OPTION COMMA node
Rule 8     option -> OPTION end
Rule 9     end -> END
Rule 10    end -> END begin

Terminals, with rules where they appear

BEFORE               : 
BOD                  : 
COLON                : 1 2
COMMA                : 4 7
END                  : 9 10
LPAREN               : 
NEW_NODE             : 
NODE                 : 3 4 5
OPTION               : 6 7 8
RPAREN               : 
SENIORITY            : 
SOD                  : 
TASKS                : 1
USERS                : 2
error                : 

Nonterminals, with rules where they appear

begin                : 10 0
end                  : 3 8
node                 : 1 2 4 7
option               : 5 6

Parsing method: LALR

state 0

    (0) S' -> . begin
    (1) begin -> . TASKS COLON node
    (2) begin -> . USERS COLON node

    TASKS           shift and go to state 2
    USERS           shift and go to state 3

    begin                          shift and go to state 1

state 1

    (0) S' -> begin .



state 2

    (1) begin -> TASKS . COLON node

    COLON           shift and go to state 4


state 3

    (2) begin -> USERS . COLON node

    COLON           shift and go to state 5


state 4

    (1) begin -> TASKS COLON . node
    (3) node -> . NODE end
    (4) node -> . NODE COMMA node
    (5) node -> . NODE option

    NODE            shift and go to state 7

    node                           shift and go to state 6

state 5

    (2) begin -> USERS COLON . node
    (3) node -> . NODE end
    (4) node -> . NODE COMMA node
    (5) node -> . NODE option

    NODE            shift and go to state 7

    node                           shift and go to state 8

state 6

    (1) begin -> TASKS COLON node .

    $end            reduce using rule 1 (begin -> TASKS COLON node .)


state 7

    (3) node -> NODE . end
    (4) node -> NODE . COMMA node
    (5) node -> NODE . option
    (9) end -> . END
    (10) end -> . END begin
    (6) option -> . OPTION option
    (7) option -> . OPTION COMMA node
    (8) option -> . OPTION end

    COMMA           shift and go to state 11
    END             shift and go to state 12
    OPTION          shift and go to state 13

    end                            shift and go to state 9
    option                         shift and go to state 10

state 8

    (2) begin -> USERS COLON node .

    $end            reduce using rule 2 (begin -> USERS COLON node .)


state 9

    (3) node -> NODE end .

    $end            reduce using rule 3 (node -> NODE end .)


state 10

    (5) node -> NODE option .

    $end            reduce using rule 5 (node -> NODE option .)


state 11

    (4) node -> NODE COMMA . node
    (3) node -> . NODE end
    (4) node -> . NODE COMMA node
    (5) node -> . NODE option

    NODE            shift and go to state 7

    node                           shift and go to state 14

state 12

    (9) end -> END .
    (10) end -> END . begin
    (1) begin -> . TASKS COLON node
    (2) begin -> . USERS COLON node

    $end            reduce using rule 9 (end -> END .)
    TASKS           shift and go to state 2
    USERS           shift and go to state 3

    begin                          shift and go to state 15

state 13

    (6) option -> OPTION . option
    (7) option -> OPTION . COMMA node
    (8) option -> OPTION . end
    (6) option -> . OPTION option
    (7) option -> . OPTION COMMA node
    (8) option -> . OPTION end
    (9) end -> . END
    (10) end -> . END begin

    COMMA           shift and go to state 17
    OPTION          shift and go to state 13
    END             shift and go to state 12

    end                            shift and go to state 16
    option                         shift and go to state 18

state 14

    (4) node -> NODE COMMA node .

    $end            reduce using rule 4 (node -> NODE COMMA node .)


state 15

    (10) end -> END begin .

    $end            reduce using rule 10 (end -> END begin .)


state 16

    (8) option -> OPTION end .

    $end            reduce using rule 8 (option -> OPTION end .)


state 17

    (7) option -> OPTION COMMA . node
    (3) node -> . NODE end
    (4) node -> . NODE COMMA node
    (5) node -> . NODE option

    NODE            shift and go to state 7

    node                           shift and go to state 19

state 18

    (6) option -> OPTION option .

    $end            reduce using rule 6 (option -> OPTION option .)


state 19

    (7) option -> OPTION COMMA node .

    $end            reduce using rule 7 (option -> OPTION COMMA node .)

