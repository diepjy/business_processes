Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    RPAREN
    NEW_NODE
    SOD
    LPAREN
    SENIORITY
    BEFORE
    BOD

Grammar

Rule 0     S' -> begin
Rule 1     begin -> TASKS COLON node
Rule 2     begin -> USERS COLON node
Rule 3     begin_user -> <empty>
Rule 4     node -> NODE END
Rule 5     node -> NODE COMMA node
Rule 6     node -> NODE option
Rule 7     option -> OPTION option
Rule 8     option -> OPTION COMMA node
Rule 9     option -> OPTION END

Terminals, with rules where they appear

BEFORE               : 
BOD                  : 
COLON                : 1 2
COMMA                : 5 8
END                  : 4 9
LPAREN               : 
NEW_NODE             : 
NODE                 : 4 5 6
OPTION               : 7 8 9
RPAREN               : 
SENIORITY            : 
SOD                  : 
TASKS                : 1
USERS                : 2
error                : 

Nonterminals, with rules where they appear

begin                : 0
begin_user           : 
node                 : 1 2 5 8
option               : 6 7

Parsing method: LALR

state 0

    (0) S' -> . begin
    (1) begin -> . TASKS COLON node
    (2) begin -> . USERS COLON node

    TASKS           shift and go to state 2
    USERS           shift and go to state 3

    begin                          shift and go to state 1

state 1

    (0) S' -> begin .



state 2

    (1) begin -> TASKS . COLON node

    COLON           shift and go to state 4


state 3

    (2) begin -> USERS . COLON node

    COLON           shift and go to state 5


state 4

    (1) begin -> TASKS COLON . node
    (4) node -> . NODE END
    (5) node -> . NODE COMMA node
    (6) node -> . NODE option

    NODE            shift and go to state 7

    node                           shift and go to state 6

state 5

    (2) begin -> USERS COLON . node
    (4) node -> . NODE END
    (5) node -> . NODE COMMA node
    (6) node -> . NODE option

    NODE            shift and go to state 7

    node                           shift and go to state 8

state 6

    (1) begin -> TASKS COLON node .

    $end            reduce using rule 1 (begin -> TASKS COLON node .)


state 7

    (4) node -> NODE . END
    (5) node -> NODE . COMMA node
    (6) node -> NODE . option
    (7) option -> . OPTION option
    (8) option -> . OPTION COMMA node
    (9) option -> . OPTION END

    END             shift and go to state 9
    COMMA           shift and go to state 11
    OPTION          shift and go to state 12

    option                         shift and go to state 10

state 8

    (2) begin -> USERS COLON node .

    $end            reduce using rule 2 (begin -> USERS COLON node .)


state 9

    (4) node -> NODE END .

    $end            reduce using rule 4 (node -> NODE END .)


state 10

    (6) node -> NODE option .

    $end            reduce using rule 6 (node -> NODE option .)


state 11

    (5) node -> NODE COMMA . node
    (4) node -> . NODE END
    (5) node -> . NODE COMMA node
    (6) node -> . NODE option

    NODE            shift and go to state 7

    node                           shift and go to state 13

state 12

    (7) option -> OPTION . option
    (8) option -> OPTION . COMMA node
    (9) option -> OPTION . END
    (7) option -> . OPTION option
    (8) option -> . OPTION COMMA node
    (9) option -> . OPTION END

    COMMA           shift and go to state 15
    END             shift and go to state 14
    OPTION          shift and go to state 12

    option                         shift and go to state 16

state 13

    (5) node -> NODE COMMA node .

    $end            reduce using rule 5 (node -> NODE COMMA node .)


state 14

    (9) option -> OPTION END .

    $end            reduce using rule 9 (option -> OPTION END .)


state 15

    (8) option -> OPTION COMMA . node
    (4) node -> . NODE END
    (5) node -> . NODE COMMA node
    (6) node -> . NODE option

    NODE            shift and go to state 7

    node                           shift and go to state 17

state 16

    (7) option -> OPTION option .

    $end            reduce using rule 7 (option -> OPTION option .)


state 17

    (8) option -> OPTION COMMA node .

    $end            reduce using rule 8 (option -> OPTION COMMA node .)

