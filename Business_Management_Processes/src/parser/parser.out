Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    USERS_OPTION

Grammar

Rule 0     S' -> prog
Rule 1     prog -> begin
Rule 2     prog -> begin rules
Rule 3     begin -> TASKS COLON task_node
Rule 4     begin -> USERS COLON user_node
Rule 5     rules -> BEFORE COLON task_node_pair
Rule 6     rules -> SENIORITY COLON user_node_pair
Rule 7     rules -> BOD COLON task_node_pair
Rule 8     rules -> SOD COLON sod_task_node_pair
Rule 9     task_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 10    task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA task_node_pair
Rule 11    sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 12    sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA task_node_pair
Rule 13    user_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 14    user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair
Rule 15    task_node -> NODE end
Rule 16    task_node -> NODE COMMA task_node
Rule 17    task_node -> NODE task_option
Rule 18    user_node -> NODE end
Rule 19    user_node -> NODE COMMA user_node
Rule 20    user_node -> NODE user_option
Rule 21    task_option -> OPTION task_option
Rule 22    task_option -> OPTION COMMA task_node
Rule 23    task_option -> OPTION end
Rule 24    user_option -> OPTION user_option
Rule 25    user_option -> OPTION COMMA
Rule 26    user_option -> OPTION COLON users_global_option
Rule 27    user_option -> OPTION end
Rule 28    users_global_option -> ALLOCATE end
Rule 29    end -> END
Rule 30    end -> END begin

Terminals, with rules where they appear

ALLOCATE             : 28
BEFORE               : 5
BOD                  : 7
COLON                : 3 4 5 6 7 8 26
COMMA                : 9 10 10 11 12 12 13 14 14 16 19 22 25
END                  : 9 11 13 29 30
LPAREN               : 9 10 11 12 13 14
NODE                 : 9 9 10 10 11 11 12 12 13 13 14 14 15 16 17 18 19 20
OPTION               : 21 22 23 24 25 26 27
RPAREN               : 9 10 11 12 13 14
SENIORITY            : 6
SOD                  : 8
TASKS                : 3
USERS                : 4
USERS_OPTION         : 
error                : 

Nonterminals, with rules where they appear

begin                : 1 2 30
end                  : 15 18 23 27 28
prog                 : 0
rules                : 2
sod_task_node_pair   : 8
task_node            : 3 16 22
task_node_pair       : 5 7 10 12
task_option          : 17 21
user_node            : 4 19
user_node_pair       : 6 14
user_option          : 20 24
users_global_option  : 26

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . begin
    (2) prog -> . begin rules
    (3) begin -> . TASKS COLON task_node
    (4) begin -> . USERS COLON user_node

    TASKS           shift and go to state 2
    USERS           shift and go to state 3

    prog                           shift and go to state 4
    begin                          shift and go to state 1

state 1

    (1) prog -> begin .
    (2) prog -> begin . rules
    (5) rules -> . BEFORE COLON task_node_pair
    (6) rules -> . SENIORITY COLON user_node_pair
    (7) rules -> . BOD COLON task_node_pair
    (8) rules -> . SOD COLON sod_task_node_pair

    $end            reduce using rule 1 (prog -> begin .)
    BEFORE          shift and go to state 9
    SENIORITY       shift and go to state 7
    BOD             shift and go to state 8
    SOD             shift and go to state 5

    rules                          shift and go to state 6

state 2

    (3) begin -> TASKS . COLON task_node

    COLON           shift and go to state 10


state 3

    (4) begin -> USERS . COLON user_node

    COLON           shift and go to state 11


state 4

    (0) S' -> prog .



state 5

    (8) rules -> SOD . COLON sod_task_node_pair

    COLON           shift and go to state 12


state 6

    (2) prog -> begin rules .

    $end            reduce using rule 2 (prog -> begin rules .)


state 7

    (6) rules -> SENIORITY . COLON user_node_pair

    COLON           shift and go to state 13


state 8

    (7) rules -> BOD . COLON task_node_pair

    COLON           shift and go to state 14


state 9

    (5) rules -> BEFORE . COLON task_node_pair

    COLON           shift and go to state 15


state 10

    (3) begin -> TASKS COLON . task_node
    (15) task_node -> . NODE end
    (16) task_node -> . NODE COMMA task_node
    (17) task_node -> . NODE task_option

    NODE            shift and go to state 16

    task_node                      shift and go to state 17

state 11

    (4) begin -> USERS COLON . user_node
    (18) user_node -> . NODE end
    (19) user_node -> . NODE COMMA user_node
    (20) user_node -> . NODE user_option

    NODE            shift and go to state 18

    user_node                      shift and go to state 19

state 12

    (8) rules -> SOD COLON . sod_task_node_pair
    (11) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (12) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA task_node_pair

    LPAREN          shift and go to state 21

    sod_task_node_pair             shift and go to state 20

state 13

    (6) rules -> SENIORITY COLON . user_node_pair
    (13) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (14) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair

    LPAREN          shift and go to state 23

    user_node_pair                 shift and go to state 22

state 14

    (7) rules -> BOD COLON . task_node_pair
    (9) task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (10) task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA task_node_pair

    LPAREN          shift and go to state 24

    task_node_pair                 shift and go to state 25

state 15

    (5) rules -> BEFORE COLON . task_node_pair
    (9) task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (10) task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA task_node_pair

    LPAREN          shift and go to state 24

    task_node_pair                 shift and go to state 26

state 16

    (15) task_node -> NODE . end
    (16) task_node -> NODE . COMMA task_node
    (17) task_node -> NODE . task_option
    (29) end -> . END
    (30) end -> . END begin
    (21) task_option -> . OPTION task_option
    (22) task_option -> . OPTION COMMA task_node
    (23) task_option -> . OPTION end

    COMMA           shift and go to state 29
    END             shift and go to state 30
    OPTION          shift and go to state 28

    task_option                    shift and go to state 31
    end                            shift and go to state 27

state 17

    (3) begin -> TASKS COLON task_node .

    BEFORE          reduce using rule 3 (begin -> TASKS COLON task_node .)
    SENIORITY       reduce using rule 3 (begin -> TASKS COLON task_node .)
    BOD             reduce using rule 3 (begin -> TASKS COLON task_node .)
    SOD             reduce using rule 3 (begin -> TASKS COLON task_node .)
    $end            reduce using rule 3 (begin -> TASKS COLON task_node .)


state 18

    (18) user_node -> NODE . end
    (19) user_node -> NODE . COMMA user_node
    (20) user_node -> NODE . user_option
    (29) end -> . END
    (30) end -> . END begin
    (24) user_option -> . OPTION user_option
    (25) user_option -> . OPTION COMMA
    (26) user_option -> . OPTION COLON users_global_option
    (27) user_option -> . OPTION end

    COMMA           shift and go to state 34
    END             shift and go to state 30
    OPTION          shift and go to state 33

    user_option                    shift and go to state 35
    end                            shift and go to state 32

state 19

    (4) begin -> USERS COLON user_node .

    BEFORE          reduce using rule 4 (begin -> USERS COLON user_node .)
    SENIORITY       reduce using rule 4 (begin -> USERS COLON user_node .)
    BOD             reduce using rule 4 (begin -> USERS COLON user_node .)
    SOD             reduce using rule 4 (begin -> USERS COLON user_node .)
    $end            reduce using rule 4 (begin -> USERS COLON user_node .)


state 20

    (8) rules -> SOD COLON sod_task_node_pair .

    $end            reduce using rule 8 (rules -> SOD COLON sod_task_node_pair .)


state 21

    (11) sod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END
    (12) sod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA task_node_pair

    NODE            shift and go to state 36


state 22

    (6) rules -> SENIORITY COLON user_node_pair .

    $end            reduce using rule 6 (rules -> SENIORITY COLON user_node_pair .)


state 23

    (13) user_node_pair -> LPAREN . NODE COMMA NODE RPAREN END
    (14) user_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA user_node_pair

    NODE            shift and go to state 37


state 24

    (9) task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END
    (10) task_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA task_node_pair

    NODE            shift and go to state 38


state 25

    (7) rules -> BOD COLON task_node_pair .

    $end            reduce using rule 7 (rules -> BOD COLON task_node_pair .)


state 26

    (5) rules -> BEFORE COLON task_node_pair .

    $end            reduce using rule 5 (rules -> BEFORE COLON task_node_pair .)


state 27

    (15) task_node -> NODE end .

    BEFORE          reduce using rule 15 (task_node -> NODE end .)
    SENIORITY       reduce using rule 15 (task_node -> NODE end .)
    BOD             reduce using rule 15 (task_node -> NODE end .)
    SOD             reduce using rule 15 (task_node -> NODE end .)
    $end            reduce using rule 15 (task_node -> NODE end .)


state 28

    (21) task_option -> OPTION . task_option
    (22) task_option -> OPTION . COMMA task_node
    (23) task_option -> OPTION . end
    (21) task_option -> . OPTION task_option
    (22) task_option -> . OPTION COMMA task_node
    (23) task_option -> . OPTION end
    (29) end -> . END
    (30) end -> . END begin

    COMMA           shift and go to state 39
    OPTION          shift and go to state 28
    END             shift and go to state 30

    task_option                    shift and go to state 41
    end                            shift and go to state 40

state 29

    (16) task_node -> NODE COMMA . task_node
    (15) task_node -> . NODE end
    (16) task_node -> . NODE COMMA task_node
    (17) task_node -> . NODE task_option

    NODE            shift and go to state 16

    task_node                      shift and go to state 42

state 30

    (29) end -> END .
    (30) end -> END . begin
    (3) begin -> . TASKS COLON task_node
    (4) begin -> . USERS COLON user_node

    BEFORE          reduce using rule 29 (end -> END .)
    SENIORITY       reduce using rule 29 (end -> END .)
    BOD             reduce using rule 29 (end -> END .)
    SOD             reduce using rule 29 (end -> END .)
    $end            reduce using rule 29 (end -> END .)
    TASKS           shift and go to state 2
    USERS           shift and go to state 3

    begin                          shift and go to state 43

state 31

    (17) task_node -> NODE task_option .

    BEFORE          reduce using rule 17 (task_node -> NODE task_option .)
    SENIORITY       reduce using rule 17 (task_node -> NODE task_option .)
    BOD             reduce using rule 17 (task_node -> NODE task_option .)
    SOD             reduce using rule 17 (task_node -> NODE task_option .)
    $end            reduce using rule 17 (task_node -> NODE task_option .)


state 32

    (18) user_node -> NODE end .

    BEFORE          reduce using rule 18 (user_node -> NODE end .)
    SENIORITY       reduce using rule 18 (user_node -> NODE end .)
    BOD             reduce using rule 18 (user_node -> NODE end .)
    SOD             reduce using rule 18 (user_node -> NODE end .)
    $end            reduce using rule 18 (user_node -> NODE end .)


state 33

    (24) user_option -> OPTION . user_option
    (25) user_option -> OPTION . COMMA
    (26) user_option -> OPTION . COLON users_global_option
    (27) user_option -> OPTION . end
    (24) user_option -> . OPTION user_option
    (25) user_option -> . OPTION COMMA
    (26) user_option -> . OPTION COLON users_global_option
    (27) user_option -> . OPTION end
    (29) end -> . END
    (30) end -> . END begin

    COMMA           shift and go to state 46
    COLON           shift and go to state 47
    OPTION          shift and go to state 33
    END             shift and go to state 30

    end                            shift and go to state 44
    user_option                    shift and go to state 45

state 34

    (19) user_node -> NODE COMMA . user_node
    (18) user_node -> . NODE end
    (19) user_node -> . NODE COMMA user_node
    (20) user_node -> . NODE user_option

    NODE            shift and go to state 18

    user_node                      shift and go to state 48

state 35

    (20) user_node -> NODE user_option .

    BEFORE          reduce using rule 20 (user_node -> NODE user_option .)
    SENIORITY       reduce using rule 20 (user_node -> NODE user_option .)
    BOD             reduce using rule 20 (user_node -> NODE user_option .)
    SOD             reduce using rule 20 (user_node -> NODE user_option .)
    $end            reduce using rule 20 (user_node -> NODE user_option .)


state 36

    (11) sod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END
    (12) sod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA task_node_pair

    COMMA           shift and go to state 49


state 37

    (13) user_node_pair -> LPAREN NODE . COMMA NODE RPAREN END
    (14) user_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA user_node_pair

    COMMA           shift and go to state 50


state 38

    (9) task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END
    (10) task_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA task_node_pair

    COMMA           shift and go to state 51


state 39

    (22) task_option -> OPTION COMMA . task_node
    (15) task_node -> . NODE end
    (16) task_node -> . NODE COMMA task_node
    (17) task_node -> . NODE task_option

    NODE            shift and go to state 16

    task_node                      shift and go to state 52

state 40

    (23) task_option -> OPTION end .

    BEFORE          reduce using rule 23 (task_option -> OPTION end .)
    SENIORITY       reduce using rule 23 (task_option -> OPTION end .)
    BOD             reduce using rule 23 (task_option -> OPTION end .)
    SOD             reduce using rule 23 (task_option -> OPTION end .)
    $end            reduce using rule 23 (task_option -> OPTION end .)


state 41

    (21) task_option -> OPTION task_option .

    BEFORE          reduce using rule 21 (task_option -> OPTION task_option .)
    SENIORITY       reduce using rule 21 (task_option -> OPTION task_option .)
    BOD             reduce using rule 21 (task_option -> OPTION task_option .)
    SOD             reduce using rule 21 (task_option -> OPTION task_option .)
    $end            reduce using rule 21 (task_option -> OPTION task_option .)


state 42

    (16) task_node -> NODE COMMA task_node .

    BEFORE          reduce using rule 16 (task_node -> NODE COMMA task_node .)
    SENIORITY       reduce using rule 16 (task_node -> NODE COMMA task_node .)
    BOD             reduce using rule 16 (task_node -> NODE COMMA task_node .)
    SOD             reduce using rule 16 (task_node -> NODE COMMA task_node .)
    $end            reduce using rule 16 (task_node -> NODE COMMA task_node .)


state 43

    (30) end -> END begin .

    BEFORE          reduce using rule 30 (end -> END begin .)
    SENIORITY       reduce using rule 30 (end -> END begin .)
    BOD             reduce using rule 30 (end -> END begin .)
    SOD             reduce using rule 30 (end -> END begin .)
    $end            reduce using rule 30 (end -> END begin .)


state 44

    (27) user_option -> OPTION end .

    BEFORE          reduce using rule 27 (user_option -> OPTION end .)
    SENIORITY       reduce using rule 27 (user_option -> OPTION end .)
    BOD             reduce using rule 27 (user_option -> OPTION end .)
    SOD             reduce using rule 27 (user_option -> OPTION end .)
    $end            reduce using rule 27 (user_option -> OPTION end .)


state 45

    (24) user_option -> OPTION user_option .

    BEFORE          reduce using rule 24 (user_option -> OPTION user_option .)
    SENIORITY       reduce using rule 24 (user_option -> OPTION user_option .)
    BOD             reduce using rule 24 (user_option -> OPTION user_option .)
    SOD             reduce using rule 24 (user_option -> OPTION user_option .)
    $end            reduce using rule 24 (user_option -> OPTION user_option .)


state 46

    (25) user_option -> OPTION COMMA .

    BEFORE          reduce using rule 25 (user_option -> OPTION COMMA .)
    SENIORITY       reduce using rule 25 (user_option -> OPTION COMMA .)
    BOD             reduce using rule 25 (user_option -> OPTION COMMA .)
    SOD             reduce using rule 25 (user_option -> OPTION COMMA .)
    $end            reduce using rule 25 (user_option -> OPTION COMMA .)


state 47

    (26) user_option -> OPTION COLON . users_global_option
    (28) users_global_option -> . ALLOCATE end

    ALLOCATE        shift and go to state 54

    users_global_option            shift and go to state 53

state 48

    (19) user_node -> NODE COMMA user_node .

    BEFORE          reduce using rule 19 (user_node -> NODE COMMA user_node .)
    SENIORITY       reduce using rule 19 (user_node -> NODE COMMA user_node .)
    BOD             reduce using rule 19 (user_node -> NODE COMMA user_node .)
    SOD             reduce using rule 19 (user_node -> NODE COMMA user_node .)
    $end            reduce using rule 19 (user_node -> NODE COMMA user_node .)


state 49

    (11) sod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END
    (12) sod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA task_node_pair

    NODE            shift and go to state 55


state 50

    (13) user_node_pair -> LPAREN NODE COMMA . NODE RPAREN END
    (14) user_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA user_node_pair

    NODE            shift and go to state 56


state 51

    (9) task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END
    (10) task_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA task_node_pair

    NODE            shift and go to state 57


state 52

    (22) task_option -> OPTION COMMA task_node .

    BEFORE          reduce using rule 22 (task_option -> OPTION COMMA task_node .)
    SENIORITY       reduce using rule 22 (task_option -> OPTION COMMA task_node .)
    BOD             reduce using rule 22 (task_option -> OPTION COMMA task_node .)
    SOD             reduce using rule 22 (task_option -> OPTION COMMA task_node .)
    $end            reduce using rule 22 (task_option -> OPTION COMMA task_node .)


state 53

    (26) user_option -> OPTION COLON users_global_option .

    BEFORE          reduce using rule 26 (user_option -> OPTION COLON users_global_option .)
    SENIORITY       reduce using rule 26 (user_option -> OPTION COLON users_global_option .)
    BOD             reduce using rule 26 (user_option -> OPTION COLON users_global_option .)
    SOD             reduce using rule 26 (user_option -> OPTION COLON users_global_option .)
    $end            reduce using rule 26 (user_option -> OPTION COLON users_global_option .)


state 54

    (28) users_global_option -> ALLOCATE . end
    (29) end -> . END
    (30) end -> . END begin

    END             shift and go to state 30

    end                            shift and go to state 58

state 55

    (11) sod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END
    (12) sod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA task_node_pair

    RPAREN          shift and go to state 59


state 56

    (13) user_node_pair -> LPAREN NODE COMMA NODE . RPAREN END
    (14) user_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA user_node_pair

    RPAREN          shift and go to state 60


state 57

    (9) task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END
    (10) task_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA task_node_pair

    RPAREN          shift and go to state 61


state 58

    (28) users_global_option -> ALLOCATE end .

    BEFORE          reduce using rule 28 (users_global_option -> ALLOCATE end .)
    SENIORITY       reduce using rule 28 (users_global_option -> ALLOCATE end .)
    BOD             reduce using rule 28 (users_global_option -> ALLOCATE end .)
    SOD             reduce using rule 28 (users_global_option -> ALLOCATE end .)
    $end            reduce using rule 28 (users_global_option -> ALLOCATE end .)


state 59

    (11) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END
    (12) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA task_node_pair

    END             shift and go to state 63
    COMMA           shift and go to state 62


state 60

    (13) user_node_pair -> LPAREN NODE COMMA NODE RPAREN . END
    (14) user_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA user_node_pair

    END             shift and go to state 65
    COMMA           shift and go to state 64


state 61

    (9) task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END
    (10) task_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA task_node_pair

    END             shift and go to state 67
    COMMA           shift and go to state 66


state 62

    (12) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . task_node_pair
    (9) task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (10) task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA task_node_pair

    LPAREN          shift and go to state 24

    task_node_pair                 shift and go to state 68

state 63

    (11) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .

    $end            reduce using rule 11 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)


state 64

    (14) user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . user_node_pair
    (13) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (14) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair

    LPAREN          shift and go to state 23

    user_node_pair                 shift and go to state 69

state 65

    (13) user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .

    $end            reduce using rule 13 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)


state 66

    (10) task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . task_node_pair
    (9) task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (10) task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA task_node_pair

    LPAREN          shift and go to state 24

    task_node_pair                 shift and go to state 70

state 67

    (9) task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .

    $end            reduce using rule 9 (task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)


state 68

    (12) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA task_node_pair .

    $end            reduce using rule 12 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA task_node_pair .)


state 69

    (14) user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .

    $end            reduce using rule 14 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)


state 70

    (10) task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA task_node_pair .

    $end            reduce using rule 10 (task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA task_node_pair .)

