Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> begin
Rule 2     begin -> TASKS COLON task_node USERS COLON user_node
Rule 3     begin -> TASKS COLON task_node USERS COLON user_node rules
Rule 4     rules -> BEFORE COLON before_task_node_pair
Rule 5     rules -> BOD COLON bod_task_node_pair
Rule 6     rules -> SOD COLON sod_task_node_pair
Rule 7     rules -> SENIORITY COLON user_node_pair
Rule 8     before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 9     before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair
Rule 10    bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 11    bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair
Rule 12    sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 13    sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair
Rule 14    user_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 15    user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair
Rule 16    task_node -> NODE end
Rule 17    task_node -> NODE COMMA task_node
Rule 18    task_node -> NODE variable_task_option
Rule 19    task_node -> NODE task_option
Rule 20    user_node -> NODE end
Rule 21    user_node -> NODE COMMA user_node
Rule 22    user_node -> NODE user_option
Rule 23    user_node -> NODE end_rule
Rule 24    variable_task_option -> OPTION variable_option_flag COLON op task_option
Rule 25    variable_task_option -> OPTION variable_option_flag COLON op COMMA task_node
Rule 26    variable_task_option -> OPTION variable_option_flag COLON op end
Rule 27    task_option -> OPTION option_flag task_option
Rule 28    task_option -> OPTION option_flag COMMA task_node
Rule 29    task_option -> OPTION option_flag end
Rule 30    variable_option_flag -> MIN_SEC_LV
Rule 31    option_flag -> START
Rule 32    op -> EQ NODE
Rule 33    op -> GEQ NODE
Rule 34    op -> LEQ NODE
Rule 35    op -> NEQ NODE
Rule 36    user_option -> OPTION USERS_OPTION user_option
Rule 37    user_option -> OPTION USERS_OPTION COMMA
Rule 38    user_option -> OPTION USERS_OPTION COLON users_global_option
Rule 39    user_option -> OPTION USERS_OPTION end
Rule 40    users_global_option -> ALLOCATE end_rule
Rule 41    end -> END
Rule 42    end -> END begin
Rule 43    end_rule -> END rules

Terminals, with rules where they appear

ALLOCATE             : 40
BEFORE               : 4
BOD                  : 5
COLON                : 2 2 3 3 4 5 6 7 24 25 26 38
COMMA                : 8 9 9 10 11 11 12 13 13 14 15 15 17 21 25 28 37
END                  : 8 10 12 14 41 42 43
EQ                   : 32
GEQ                  : 33
LEQ                  : 34
LPAREN               : 8 9 10 11 12 13 14 15
MIN_SEC_LV           : 30
NEQ                  : 35
NODE                 : 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 17 18 19 20 21 22 23 32 33 34 35
OPTION               : 24 25 26 27 28 29 36 37 38 39
RPAREN               : 8 9 10 11 12 13 14 15
SENIORITY            : 7
SOD                  : 6
START                : 31
TASKS                : 2 3
USERS                : 2 3
USERS_OPTION         : 36 37 38 39
error                : 

Nonterminals, with rules where they appear

before_task_node_pair : 4 9
begin                : 1 42
bod_task_node_pair   : 5 11
end                  : 16 20 26 29 39
end_rule             : 23 40
op                   : 24 25 26
option_flag          : 27 28 29
prog                 : 0
rules                : 3 43
sod_task_node_pair   : 6 13
task_node            : 2 3 17 25 28
task_option          : 19 24 27
user_node            : 2 3 21
user_node_pair       : 7 15
user_option          : 22 36
users_global_option  : 38
variable_option_flag : 24 25 26
variable_task_option : 18

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . begin
    (2) begin -> . TASKS COLON task_node USERS COLON user_node
    (3) begin -> . TASKS COLON task_node USERS COLON user_node rules

    TASKS           shift and go to state 2

    prog                           shift and go to state 3
    begin                          shift and go to state 1

state 1

    (1) prog -> begin .

    $end            reduce using rule 1 (prog -> begin .)


state 2

    (2) begin -> TASKS . COLON task_node USERS COLON user_node
    (3) begin -> TASKS . COLON task_node USERS COLON user_node rules

    COLON           shift and go to state 4


state 3

    (0) S' -> prog .



state 4

    (2) begin -> TASKS COLON . task_node USERS COLON user_node
    (3) begin -> TASKS COLON . task_node USERS COLON user_node rules
    (16) task_node -> . NODE end
    (17) task_node -> . NODE COMMA task_node
    (18) task_node -> . NODE variable_task_option
    (19) task_node -> . NODE task_option

    NODE            shift and go to state 5

    task_node                      shift and go to state 6

state 5

    (16) task_node -> NODE . end
    (17) task_node -> NODE . COMMA task_node
    (18) task_node -> NODE . variable_task_option
    (19) task_node -> NODE . task_option
    (41) end -> . END
    (42) end -> . END begin
    (24) variable_task_option -> . OPTION variable_option_flag COLON op task_option
    (25) variable_task_option -> . OPTION variable_option_flag COLON op COMMA task_node
    (26) variable_task_option -> . OPTION variable_option_flag COLON op end
    (27) task_option -> . OPTION option_flag task_option
    (28) task_option -> . OPTION option_flag COMMA task_node
    (29) task_option -> . OPTION option_flag end

    COMMA           shift and go to state 9
    END             shift and go to state 12
    OPTION          shift and go to state 8

    variable_task_option           shift and go to state 10
    end                            shift and go to state 7
    task_option                    shift and go to state 11

state 6

    (2) begin -> TASKS COLON task_node . USERS COLON user_node
    (3) begin -> TASKS COLON task_node . USERS COLON user_node rules

    USERS           shift and go to state 13


state 7

    (16) task_node -> NODE end .

    USERS           reduce using rule 16 (task_node -> NODE end .)


state 8

    (24) variable_task_option -> OPTION . variable_option_flag COLON op task_option
    (25) variable_task_option -> OPTION . variable_option_flag COLON op COMMA task_node
    (26) variable_task_option -> OPTION . variable_option_flag COLON op end
    (27) task_option -> OPTION . option_flag task_option
    (28) task_option -> OPTION . option_flag COMMA task_node
    (29) task_option -> OPTION . option_flag end
    (30) variable_option_flag -> . MIN_SEC_LV
    (31) option_flag -> . START

    MIN_SEC_LV      shift and go to state 17
    START           shift and go to state 15

    variable_option_flag           shift and go to state 16
    option_flag                    shift and go to state 14

state 9

    (17) task_node -> NODE COMMA . task_node
    (16) task_node -> . NODE end
    (17) task_node -> . NODE COMMA task_node
    (18) task_node -> . NODE variable_task_option
    (19) task_node -> . NODE task_option

    NODE            shift and go to state 5

    task_node                      shift and go to state 18

state 10

    (18) task_node -> NODE variable_task_option .

    USERS           reduce using rule 18 (task_node -> NODE variable_task_option .)


state 11

    (19) task_node -> NODE task_option .

    USERS           reduce using rule 19 (task_node -> NODE task_option .)


state 12

    (41) end -> END .
    (42) end -> END . begin
    (2) begin -> . TASKS COLON task_node USERS COLON user_node
    (3) begin -> . TASKS COLON task_node USERS COLON user_node rules

    USERS           reduce using rule 41 (end -> END .)
    BEFORE          reduce using rule 41 (end -> END .)
    BOD             reduce using rule 41 (end -> END .)
    SOD             reduce using rule 41 (end -> END .)
    SENIORITY       reduce using rule 41 (end -> END .)
    $end            reduce using rule 41 (end -> END .)
    TASKS           shift and go to state 2

    begin                          shift and go to state 19

state 13

    (2) begin -> TASKS COLON task_node USERS . COLON user_node
    (3) begin -> TASKS COLON task_node USERS . COLON user_node rules

    COLON           shift and go to state 20


state 14

    (27) task_option -> OPTION option_flag . task_option
    (28) task_option -> OPTION option_flag . COMMA task_node
    (29) task_option -> OPTION option_flag . end
    (27) task_option -> . OPTION option_flag task_option
    (28) task_option -> . OPTION option_flag COMMA task_node
    (29) task_option -> . OPTION option_flag end
    (41) end -> . END
    (42) end -> . END begin

    COMMA           shift and go to state 23
    OPTION          shift and go to state 22
    END             shift and go to state 12

    task_option                    shift and go to state 24
    end                            shift and go to state 21

state 15

    (31) option_flag -> START .

    COMMA           reduce using rule 31 (option_flag -> START .)
    OPTION          reduce using rule 31 (option_flag -> START .)
    END             reduce using rule 31 (option_flag -> START .)


state 16

    (24) variable_task_option -> OPTION variable_option_flag . COLON op task_option
    (25) variable_task_option -> OPTION variable_option_flag . COLON op COMMA task_node
    (26) variable_task_option -> OPTION variable_option_flag . COLON op end

    COLON           shift and go to state 25


state 17

    (30) variable_option_flag -> MIN_SEC_LV .

    COLON           reduce using rule 30 (variable_option_flag -> MIN_SEC_LV .)


state 18

    (17) task_node -> NODE COMMA task_node .

    USERS           reduce using rule 17 (task_node -> NODE COMMA task_node .)


state 19

    (42) end -> END begin .

    USERS           reduce using rule 42 (end -> END begin .)
    BEFORE          reduce using rule 42 (end -> END begin .)
    BOD             reduce using rule 42 (end -> END begin .)
    SOD             reduce using rule 42 (end -> END begin .)
    SENIORITY       reduce using rule 42 (end -> END begin .)
    $end            reduce using rule 42 (end -> END begin .)


state 20

    (2) begin -> TASKS COLON task_node USERS COLON . user_node
    (3) begin -> TASKS COLON task_node USERS COLON . user_node rules
    (20) user_node -> . NODE end
    (21) user_node -> . NODE COMMA user_node
    (22) user_node -> . NODE user_option
    (23) user_node -> . NODE end_rule

    NODE            shift and go to state 26

    user_node                      shift and go to state 27

state 21

    (29) task_option -> OPTION option_flag end .

    USERS           reduce using rule 29 (task_option -> OPTION option_flag end .)


state 22

    (27) task_option -> OPTION . option_flag task_option
    (28) task_option -> OPTION . option_flag COMMA task_node
    (29) task_option -> OPTION . option_flag end
    (31) option_flag -> . START

    START           shift and go to state 15

    option_flag                    shift and go to state 14

state 23

    (28) task_option -> OPTION option_flag COMMA . task_node
    (16) task_node -> . NODE end
    (17) task_node -> . NODE COMMA task_node
    (18) task_node -> . NODE variable_task_option
    (19) task_node -> . NODE task_option

    NODE            shift and go to state 5

    task_node                      shift and go to state 28

state 24

    (27) task_option -> OPTION option_flag task_option .

    USERS           reduce using rule 27 (task_option -> OPTION option_flag task_option .)


state 25

    (24) variable_task_option -> OPTION variable_option_flag COLON . op task_option
    (25) variable_task_option -> OPTION variable_option_flag COLON . op COMMA task_node
    (26) variable_task_option -> OPTION variable_option_flag COLON . op end
    (32) op -> . EQ NODE
    (33) op -> . GEQ NODE
    (34) op -> . LEQ NODE
    (35) op -> . NEQ NODE

    EQ              shift and go to state 32
    GEQ             shift and go to state 29
    LEQ             shift and go to state 30
    NEQ             shift and go to state 31

    op                             shift and go to state 33

state 26

    (20) user_node -> NODE . end
    (21) user_node -> NODE . COMMA user_node
    (22) user_node -> NODE . user_option
    (23) user_node -> NODE . end_rule
    (41) end -> . END
    (42) end -> . END begin
    (36) user_option -> . OPTION USERS_OPTION user_option
    (37) user_option -> . OPTION USERS_OPTION COMMA
    (38) user_option -> . OPTION USERS_OPTION COLON users_global_option
    (39) user_option -> . OPTION USERS_OPTION end
    (43) end_rule -> . END rules

    COMMA           shift and go to state 37
    END             shift and go to state 39
    OPTION          shift and go to state 35

    end                            shift and go to state 34
    end_rule                       shift and go to state 36
    user_option                    shift and go to state 38

state 27

    (2) begin -> TASKS COLON task_node USERS COLON user_node .
    (3) begin -> TASKS COLON task_node USERS COLON user_node . rules
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
    $end            reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .)
    USERS           reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .)
    BEFORE          shift and go to state 44
    BOD             shift and go to state 43
    SOD             shift and go to state 41
    SENIORITY       shift and go to state 42

  ! BEFORE          [ reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .) ]
  ! BOD             [ reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .) ]
  ! SOD             [ reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .) ]
  ! SENIORITY       [ reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .) ]

    rules                          shift and go to state 40

state 28

    (28) task_option -> OPTION option_flag COMMA task_node .

    USERS           reduce using rule 28 (task_option -> OPTION option_flag COMMA task_node .)


state 29

    (33) op -> GEQ . NODE

    NODE            shift and go to state 45


state 30

    (34) op -> LEQ . NODE

    NODE            shift and go to state 46


state 31

    (35) op -> NEQ . NODE

    NODE            shift and go to state 47


state 32

    (32) op -> EQ . NODE

    NODE            shift and go to state 48


state 33

    (24) variable_task_option -> OPTION variable_option_flag COLON op . task_option
    (25) variable_task_option -> OPTION variable_option_flag COLON op . COMMA task_node
    (26) variable_task_option -> OPTION variable_option_flag COLON op . end
    (27) task_option -> . OPTION option_flag task_option
    (28) task_option -> . OPTION option_flag COMMA task_node
    (29) task_option -> . OPTION option_flag end
    (41) end -> . END
    (42) end -> . END begin

    COMMA           shift and go to state 50
    OPTION          shift and go to state 22
    END             shift and go to state 12

    end                            shift and go to state 49
    task_option                    shift and go to state 51

state 34

    (20) user_node -> NODE end .

    USERS           reduce using rule 20 (user_node -> NODE end .)
    BEFORE          reduce using rule 20 (user_node -> NODE end .)
    BOD             reduce using rule 20 (user_node -> NODE end .)
    SOD             reduce using rule 20 (user_node -> NODE end .)
    SENIORITY       reduce using rule 20 (user_node -> NODE end .)
    $end            reduce using rule 20 (user_node -> NODE end .)


state 35

    (36) user_option -> OPTION . USERS_OPTION user_option
    (37) user_option -> OPTION . USERS_OPTION COMMA
    (38) user_option -> OPTION . USERS_OPTION COLON users_global_option
    (39) user_option -> OPTION . USERS_OPTION end

    USERS_OPTION    shift and go to state 52


state 36

    (23) user_node -> NODE end_rule .

    USERS           reduce using rule 23 (user_node -> NODE end_rule .)
    BEFORE          reduce using rule 23 (user_node -> NODE end_rule .)
    BOD             reduce using rule 23 (user_node -> NODE end_rule .)
    SOD             reduce using rule 23 (user_node -> NODE end_rule .)
    SENIORITY       reduce using rule 23 (user_node -> NODE end_rule .)
    $end            reduce using rule 23 (user_node -> NODE end_rule .)


state 37

    (21) user_node -> NODE COMMA . user_node
    (20) user_node -> . NODE end
    (21) user_node -> . NODE COMMA user_node
    (22) user_node -> . NODE user_option
    (23) user_node -> . NODE end_rule

    NODE            shift and go to state 26

    user_node                      shift and go to state 53

state 38

    (22) user_node -> NODE user_option .

    USERS           reduce using rule 22 (user_node -> NODE user_option .)
    BEFORE          reduce using rule 22 (user_node -> NODE user_option .)
    BOD             reduce using rule 22 (user_node -> NODE user_option .)
    SOD             reduce using rule 22 (user_node -> NODE user_option .)
    SENIORITY       reduce using rule 22 (user_node -> NODE user_option .)
    $end            reduce using rule 22 (user_node -> NODE user_option .)


state 39

    (41) end -> END .
    (42) end -> END . begin
    (43) end_rule -> END . rules
    (2) begin -> . TASKS COLON task_node USERS COLON user_node
    (3) begin -> . TASKS COLON task_node USERS COLON user_node rules
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
    USERS           reduce using rule 41 (end -> END .)
    $end            reduce using rule 41 (end -> END .)
    TASKS           shift and go to state 2
    BEFORE          shift and go to state 44
    BOD             shift and go to state 43
    SOD             shift and go to state 41
    SENIORITY       shift and go to state 42

  ! BEFORE          [ reduce using rule 41 (end -> END .) ]
  ! BOD             [ reduce using rule 41 (end -> END .) ]
  ! SOD             [ reduce using rule 41 (end -> END .) ]
  ! SENIORITY       [ reduce using rule 41 (end -> END .) ]

    begin                          shift and go to state 19
    rules                          shift and go to state 54

state 40

    (3) begin -> TASKS COLON task_node USERS COLON user_node rules .

    $end            reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    USERS           reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    BEFORE          reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    BOD             reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    SOD             reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    SENIORITY       reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)


state 41

    (6) rules -> SOD . COLON sod_task_node_pair

    COLON           shift and go to state 55


state 42

    (7) rules -> SENIORITY . COLON user_node_pair

    COLON           shift and go to state 56


state 43

    (5) rules -> BOD . COLON bod_task_node_pair

    COLON           shift and go to state 57


state 44

    (4) rules -> BEFORE . COLON before_task_node_pair

    COLON           shift and go to state 58


state 45

    (33) op -> GEQ NODE .

    COMMA           reduce using rule 33 (op -> GEQ NODE .)
    OPTION          reduce using rule 33 (op -> GEQ NODE .)
    END             reduce using rule 33 (op -> GEQ NODE .)


state 46

    (34) op -> LEQ NODE .

    COMMA           reduce using rule 34 (op -> LEQ NODE .)
    OPTION          reduce using rule 34 (op -> LEQ NODE .)
    END             reduce using rule 34 (op -> LEQ NODE .)


state 47

    (35) op -> NEQ NODE .

    COMMA           reduce using rule 35 (op -> NEQ NODE .)
    OPTION          reduce using rule 35 (op -> NEQ NODE .)
    END             reduce using rule 35 (op -> NEQ NODE .)


state 48

    (32) op -> EQ NODE .

    COMMA           reduce using rule 32 (op -> EQ NODE .)
    OPTION          reduce using rule 32 (op -> EQ NODE .)
    END             reduce using rule 32 (op -> EQ NODE .)


state 49

    (26) variable_task_option -> OPTION variable_option_flag COLON op end .

    USERS           reduce using rule 26 (variable_task_option -> OPTION variable_option_flag COLON op end .)


state 50

    (25) variable_task_option -> OPTION variable_option_flag COLON op COMMA . task_node
    (16) task_node -> . NODE end
    (17) task_node -> . NODE COMMA task_node
    (18) task_node -> . NODE variable_task_option
    (19) task_node -> . NODE task_option

    NODE            shift and go to state 5

    task_node                      shift and go to state 59

state 51

    (24) variable_task_option -> OPTION variable_option_flag COLON op task_option .

    USERS           reduce using rule 24 (variable_task_option -> OPTION variable_option_flag COLON op task_option .)


state 52

    (36) user_option -> OPTION USERS_OPTION . user_option
    (37) user_option -> OPTION USERS_OPTION . COMMA
    (38) user_option -> OPTION USERS_OPTION . COLON users_global_option
    (39) user_option -> OPTION USERS_OPTION . end
    (36) user_option -> . OPTION USERS_OPTION user_option
    (37) user_option -> . OPTION USERS_OPTION COMMA
    (38) user_option -> . OPTION USERS_OPTION COLON users_global_option
    (39) user_option -> . OPTION USERS_OPTION end
    (41) end -> . END
    (42) end -> . END begin

    COMMA           shift and go to state 62
    COLON           shift and go to state 63
    OPTION          shift and go to state 35
    END             shift and go to state 12

    end                            shift and go to state 60
    user_option                    shift and go to state 61

state 53

    (21) user_node -> NODE COMMA user_node .

    USERS           reduce using rule 21 (user_node -> NODE COMMA user_node .)
    BEFORE          reduce using rule 21 (user_node -> NODE COMMA user_node .)
    BOD             reduce using rule 21 (user_node -> NODE COMMA user_node .)
    SOD             reduce using rule 21 (user_node -> NODE COMMA user_node .)
    SENIORITY       reduce using rule 21 (user_node -> NODE COMMA user_node .)
    $end            reduce using rule 21 (user_node -> NODE COMMA user_node .)


state 54

    (43) end_rule -> END rules .

    USERS           reduce using rule 43 (end_rule -> END rules .)
    BEFORE          reduce using rule 43 (end_rule -> END rules .)
    BOD             reduce using rule 43 (end_rule -> END rules .)
    SOD             reduce using rule 43 (end_rule -> END rules .)
    SENIORITY       reduce using rule 43 (end_rule -> END rules .)
    $end            reduce using rule 43 (end_rule -> END rules .)


state 55

    (6) rules -> SOD COLON . sod_task_node_pair
    (12) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (13) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair

    LPAREN          shift and go to state 65

    sod_task_node_pair             shift and go to state 64

state 56

    (7) rules -> SENIORITY COLON . user_node_pair
    (14) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (15) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair

    LPAREN          shift and go to state 67

    user_node_pair                 shift and go to state 66

state 57

    (5) rules -> BOD COLON . bod_task_node_pair
    (10) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (11) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair

    LPAREN          shift and go to state 68

    bod_task_node_pair             shift and go to state 69

state 58

    (4) rules -> BEFORE COLON . before_task_node_pair
    (8) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (9) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair

    LPAREN          shift and go to state 71

    before_task_node_pair          shift and go to state 70

state 59

    (25) variable_task_option -> OPTION variable_option_flag COLON op COMMA task_node .

    USERS           reduce using rule 25 (variable_task_option -> OPTION variable_option_flag COLON op COMMA task_node .)


state 60

    (39) user_option -> OPTION USERS_OPTION end .

    USERS           reduce using rule 39 (user_option -> OPTION USERS_OPTION end .)
    BEFORE          reduce using rule 39 (user_option -> OPTION USERS_OPTION end .)
    BOD             reduce using rule 39 (user_option -> OPTION USERS_OPTION end .)
    SOD             reduce using rule 39 (user_option -> OPTION USERS_OPTION end .)
    SENIORITY       reduce using rule 39 (user_option -> OPTION USERS_OPTION end .)
    $end            reduce using rule 39 (user_option -> OPTION USERS_OPTION end .)


state 61

    (36) user_option -> OPTION USERS_OPTION user_option .

    USERS           reduce using rule 36 (user_option -> OPTION USERS_OPTION user_option .)
    BEFORE          reduce using rule 36 (user_option -> OPTION USERS_OPTION user_option .)
    BOD             reduce using rule 36 (user_option -> OPTION USERS_OPTION user_option .)
    SOD             reduce using rule 36 (user_option -> OPTION USERS_OPTION user_option .)
    SENIORITY       reduce using rule 36 (user_option -> OPTION USERS_OPTION user_option .)
    $end            reduce using rule 36 (user_option -> OPTION USERS_OPTION user_option .)


state 62

    (37) user_option -> OPTION USERS_OPTION COMMA .

    USERS           reduce using rule 37 (user_option -> OPTION USERS_OPTION COMMA .)
    BEFORE          reduce using rule 37 (user_option -> OPTION USERS_OPTION COMMA .)
    BOD             reduce using rule 37 (user_option -> OPTION USERS_OPTION COMMA .)
    SOD             reduce using rule 37 (user_option -> OPTION USERS_OPTION COMMA .)
    SENIORITY       reduce using rule 37 (user_option -> OPTION USERS_OPTION COMMA .)
    $end            reduce using rule 37 (user_option -> OPTION USERS_OPTION COMMA .)


state 63

    (38) user_option -> OPTION USERS_OPTION COLON . users_global_option
    (40) users_global_option -> . ALLOCATE end_rule

    ALLOCATE        shift and go to state 73

    users_global_option            shift and go to state 72

state 64

    (6) rules -> SOD COLON sod_task_node_pair .

    $end            reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    USERS           reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    BEFORE          reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    BOD             reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    SOD             reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    SENIORITY       reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)


state 65

    (12) sod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END
    (13) sod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA sod_task_node_pair

    NODE            shift and go to state 74


state 66

    (7) rules -> SENIORITY COLON user_node_pair .

    $end            reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    USERS           reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    BEFORE          reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    BOD             reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    SOD             reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    SENIORITY       reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)


state 67

    (14) user_node_pair -> LPAREN . NODE COMMA NODE RPAREN END
    (15) user_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA user_node_pair

    NODE            shift and go to state 75


state 68

    (10) bod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END
    (11) bod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA bod_task_node_pair

    NODE            shift and go to state 76


state 69

    (5) rules -> BOD COLON bod_task_node_pair .

    $end            reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    USERS           reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    BEFORE          reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    BOD             reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    SOD             reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    SENIORITY       reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)


state 70

    (4) rules -> BEFORE COLON before_task_node_pair .

    $end            reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    USERS           reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    BEFORE          reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    BOD             reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    SOD             reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    SENIORITY       reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)


state 71

    (8) before_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END
    (9) before_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA before_task_node_pair

    NODE            shift and go to state 77


state 72

    (38) user_option -> OPTION USERS_OPTION COLON users_global_option .

    USERS           reduce using rule 38 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    BEFORE          reduce using rule 38 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    BOD             reduce using rule 38 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    SOD             reduce using rule 38 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    SENIORITY       reduce using rule 38 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    $end            reduce using rule 38 (user_option -> OPTION USERS_OPTION COLON users_global_option .)


state 73

    (40) users_global_option -> ALLOCATE . end_rule
    (43) end_rule -> . END rules

    END             shift and go to state 79

    end_rule                       shift and go to state 78

state 74

    (12) sod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END
    (13) sod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA sod_task_node_pair

    COMMA           shift and go to state 80


state 75

    (14) user_node_pair -> LPAREN NODE . COMMA NODE RPAREN END
    (15) user_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA user_node_pair

    COMMA           shift and go to state 81


state 76

    (10) bod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END
    (11) bod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA bod_task_node_pair

    COMMA           shift and go to state 82


state 77

    (8) before_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END
    (9) before_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA before_task_node_pair

    COMMA           shift and go to state 83


state 78

    (40) users_global_option -> ALLOCATE end_rule .

    USERS           reduce using rule 40 (users_global_option -> ALLOCATE end_rule .)
    BEFORE          reduce using rule 40 (users_global_option -> ALLOCATE end_rule .)
    BOD             reduce using rule 40 (users_global_option -> ALLOCATE end_rule .)
    SOD             reduce using rule 40 (users_global_option -> ALLOCATE end_rule .)
    SENIORITY       reduce using rule 40 (users_global_option -> ALLOCATE end_rule .)
    $end            reduce using rule 40 (users_global_option -> ALLOCATE end_rule .)


state 79

    (43) end_rule -> END . rules
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair

    BEFORE          shift and go to state 44
    BOD             shift and go to state 43
    SOD             shift and go to state 41
    SENIORITY       shift and go to state 42

    rules                          shift and go to state 54

state 80

    (12) sod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END
    (13) sod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA sod_task_node_pair

    NODE            shift and go to state 84


state 81

    (14) user_node_pair -> LPAREN NODE COMMA . NODE RPAREN END
    (15) user_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA user_node_pair

    NODE            shift and go to state 85


state 82

    (10) bod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END
    (11) bod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA bod_task_node_pair

    NODE            shift and go to state 86


state 83

    (8) before_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END
    (9) before_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA before_task_node_pair

    NODE            shift and go to state 87


state 84

    (12) sod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END
    (13) sod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA sod_task_node_pair

    RPAREN          shift and go to state 88


state 85

    (14) user_node_pair -> LPAREN NODE COMMA NODE . RPAREN END
    (15) user_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA user_node_pair

    RPAREN          shift and go to state 89


state 86

    (10) bod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END
    (11) bod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA bod_task_node_pair

    RPAREN          shift and go to state 90


state 87

    (8) before_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END
    (9) before_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA before_task_node_pair

    RPAREN          shift and go to state 91


state 88

    (12) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END
    (13) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA sod_task_node_pair

    END             shift and go to state 93
    COMMA           shift and go to state 92


state 89

    (14) user_node_pair -> LPAREN NODE COMMA NODE RPAREN . END
    (15) user_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA user_node_pair

    END             shift and go to state 95
    COMMA           shift and go to state 94


state 90

    (10) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END
    (11) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA bod_task_node_pair

    END             shift and go to state 97
    COMMA           shift and go to state 96


state 91

    (8) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END
    (9) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA before_task_node_pair

    END             shift and go to state 99
    COMMA           shift and go to state 98


state 92

    (13) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . sod_task_node_pair
    (12) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (13) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair

    LPAREN          shift and go to state 65

    sod_task_node_pair             shift and go to state 100

state 93

    (12) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .

    $end            reduce using rule 12 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    USERS           reduce using rule 12 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BEFORE          reduce using rule 12 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BOD             reduce using rule 12 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    SOD             reduce using rule 12 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    SENIORITY       reduce using rule 12 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)


state 94

    (15) user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . user_node_pair
    (14) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (15) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair

    LPAREN          shift and go to state 67

    user_node_pair                 shift and go to state 101

state 95

    (14) user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .

    $end            reduce using rule 14 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    USERS           reduce using rule 14 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BEFORE          reduce using rule 14 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BOD             reduce using rule 14 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    SOD             reduce using rule 14 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    SENIORITY       reduce using rule 14 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)


state 96

    (11) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . bod_task_node_pair
    (10) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (11) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair

    LPAREN          shift and go to state 68

    bod_task_node_pair             shift and go to state 102

state 97

    (10) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .

    $end            reduce using rule 10 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    USERS           reduce using rule 10 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BEFORE          reduce using rule 10 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BOD             reduce using rule 10 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    SOD             reduce using rule 10 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    SENIORITY       reduce using rule 10 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)


state 98

    (9) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . before_task_node_pair
    (8) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END
    (9) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair

    LPAREN          shift and go to state 71

    before_task_node_pair          shift and go to state 103

state 99

    (8) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .

    $end            reduce using rule 8 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    USERS           reduce using rule 8 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BEFORE          reduce using rule 8 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BOD             reduce using rule 8 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    SOD             reduce using rule 8 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    SENIORITY       reduce using rule 8 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)


state 100

    (13) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .

    $end            reduce using rule 13 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    USERS           reduce using rule 13 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    BEFORE          reduce using rule 13 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    BOD             reduce using rule 13 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    SOD             reduce using rule 13 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    SENIORITY       reduce using rule 13 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)


state 101

    (15) user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .

    $end            reduce using rule 15 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    USERS           reduce using rule 15 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    BEFORE          reduce using rule 15 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    BOD             reduce using rule 15 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    SOD             reduce using rule 15 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    SENIORITY       reduce using rule 15 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)


state 102

    (11) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .

    $end            reduce using rule 11 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    USERS           reduce using rule 11 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    BEFORE          reduce using rule 11 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    BOD             reduce using rule 11 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    SOD             reduce using rule 11 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    SENIORITY       reduce using rule 11 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)


state 103

    (9) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .

    $end            reduce using rule 9 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    USERS           reduce using rule 9 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    BEFORE          reduce using rule 9 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    BOD             reduce using rule 9 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    SOD             reduce using rule 9 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    SENIORITY       reduce using rule 9 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for BEFORE in state 27 resolved as shift
WARNING: shift/reduce conflict for BOD in state 27 resolved as shift
WARNING: shift/reduce conflict for SOD in state 27 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 27 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 39 resolved as shift
WARNING: shift/reduce conflict for BOD in state 39 resolved as shift
WARNING: shift/reduce conflict for SOD in state 39 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 39 resolved as shift
