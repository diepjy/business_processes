Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> begin
Rule 2     begin -> TASKS COLON task_node USERS COLON user_node
Rule 3     begin -> TASKS COLON task_node USERS COLON user_node rules
Rule 4     rules -> BEFORE COLON before_task_node_pair
Rule 5     rules -> BOD COLON bod_task_node_pair
Rule 6     rules -> SOD COLON sod_task_node_pair
Rule 7     rules -> SENIORITY COLON user_node_pair
Rule 8     rules -> ALLOC COLON allocation_pair
Rule 9     rules -> AUTHORISED COLON authorised_pair
Rule 10    before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules
Rule 11    before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair
Rule 12    before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 13    bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules
Rule 14    bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair
Rule 15    bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 16    sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules
Rule 17    sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair
Rule 18    sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 19    user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules
Rule 20    user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair
Rule 21    user_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 22    allocation_pair -> LPAREN NODE COMMA NODE RPAREN END rules
Rule 23    allocation_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair
Rule 24    allocation_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 25    authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules
Rule 26    authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair
Rule 27    authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END
Rule 28    user_list -> NODE COMMA user_list
Rule 29    user_list -> NODE
Rule 30    task_node -> NODE end
Rule 31    task_node -> NODE COMMA task_node
Rule 32    task_node -> NODE variable_task_option
Rule 33    task_node -> NODE task_option
Rule 34    user_node -> NODE end
Rule 35    user_node -> NODE COMMA user_node
Rule 36    user_node -> NODE user_option
Rule 37    user_node -> NODE end_rule
Rule 38    variable_task_option -> OPTION variable_option_flag COLON op variable_task_option
Rule 39    variable_task_option -> OPTION variable_option_flag COLON op COMMA task_node
Rule 40    variable_task_option -> OPTION variable_option_flag COLON op end
Rule 41    task_option -> OPTION option_flag task_option
Rule 42    task_option -> OPTION option_flag COMMA task_node
Rule 43    task_option -> OPTION option_flag end
Rule 44    variable_option_flag -> MIN_SEC_LV
Rule 45    variable_option_flag -> EXECUTION
Rule 46    option_flag -> START
Rule 47    op -> EQ NODE
Rule 48    op -> GEQ NODE
Rule 49    op -> LEQ NODE
Rule 50    op -> NEQ NODE
Rule 51    op -> OR NODE
Rule 52    op -> AND NODE
Rule 53    op -> XOR NODE
Rule 54    user_option -> OPTION USERS_OPTION user_option
Rule 55    user_option -> OPTION USERS_OPTION COMMA
Rule 56    user_option -> OPTION USERS_OPTION COLON users_global_option
Rule 57    user_option -> OPTION USERS_OPTION end
Rule 58    users_global_option -> ALLOCATE end_rule
Rule 59    end -> END
Rule 60    end -> END begin
Rule 61    end_rule -> END rules

Terminals, with rules where they appear

ALLOC                : 8
ALLOCATE             : 58
AND                  : 52
AUTHORISED           : 9
BEFORE               : 4
BOD                  : 5
COLON                : 2 2 3 3 4 5 6 7 8 9 38 39 40 56
COMMA                : 10 11 11 12 13 14 14 15 16 17 17 18 19 20 20 21 22 23 23 24 25 26 26 27 28 31 35 39 42 55
END                  : 10 12 13 15 16 18 19 21 22 24 25 27 59 60 61
EQ                   : 47
EXECUTION            : 45
GEQ                  : 48
LEQ                  : 49
LPAREN               : 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
LSQPAREN             : 25 26 27
MIN_SEC_LV           : 44
NEQ                  : 50
NODE                 : 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 26 27 28 29 30 31 32 33 34 35 36 37 47 48 49 50 51 52 53
OPTION               : 38 39 40 41 42 43 54 55 56 57
OR                   : 51
RPAREN               : 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
RSQPAREN             : 25 26 27
SENIORITY            : 7
SOD                  : 6
START                : 46
TASKS                : 2 3
USERS                : 2 3
USERS_OPTION         : 54 55 56 57
XOR                  : 53
error                : 

Nonterminals, with rules where they appear

allocation_pair      : 8
authorised_pair      : 9 26
before_task_node_pair : 4 11
begin                : 1 60
bod_task_node_pair   : 5 14
end                  : 30 34 40 43 57
end_rule             : 37 58
op                   : 38 39 40
option_flag          : 41 42 43
prog                 : 0
rules                : 3 10 13 16 19 22 25 61
sod_task_node_pair   : 6 17
task_node            : 2 3 31 39 42
task_option          : 33 41
user_list            : 25 26 27 28
user_node            : 2 3 35
user_node_pair       : 7 20 23
user_option          : 36 54
users_global_option  : 56
variable_option_flag : 38 39 40
variable_task_option : 32 38

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . begin
    (2) begin -> . TASKS COLON task_node USERS COLON user_node
    (3) begin -> . TASKS COLON task_node USERS COLON user_node rules

    TASKS           shift and go to state 2

    prog                           shift and go to state 3
    begin                          shift and go to state 1

state 1

    (1) prog -> begin .

    $end            reduce using rule 1 (prog -> begin .)


state 2

    (2) begin -> TASKS . COLON task_node USERS COLON user_node
    (3) begin -> TASKS . COLON task_node USERS COLON user_node rules

    COLON           shift and go to state 4


state 3

    (0) S' -> prog .



state 4

    (2) begin -> TASKS COLON . task_node USERS COLON user_node
    (3) begin -> TASKS COLON . task_node USERS COLON user_node rules
    (30) task_node -> . NODE end
    (31) task_node -> . NODE COMMA task_node
    (32) task_node -> . NODE variable_task_option
    (33) task_node -> . NODE task_option

    NODE            shift and go to state 5

    task_node                      shift and go to state 6

state 5

    (30) task_node -> NODE . end
    (31) task_node -> NODE . COMMA task_node
    (32) task_node -> NODE . variable_task_option
    (33) task_node -> NODE . task_option
    (59) end -> . END
    (60) end -> . END begin
    (38) variable_task_option -> . OPTION variable_option_flag COLON op variable_task_option
    (39) variable_task_option -> . OPTION variable_option_flag COLON op COMMA task_node
    (40) variable_task_option -> . OPTION variable_option_flag COLON op end
    (41) task_option -> . OPTION option_flag task_option
    (42) task_option -> . OPTION option_flag COMMA task_node
    (43) task_option -> . OPTION option_flag end

    COMMA           shift and go to state 9
    END             shift and go to state 12
    OPTION          shift and go to state 8

    variable_task_option           shift and go to state 10
    end                            shift and go to state 7
    task_option                    shift and go to state 11

state 6

    (2) begin -> TASKS COLON task_node . USERS COLON user_node
    (3) begin -> TASKS COLON task_node . USERS COLON user_node rules

    USERS           shift and go to state 13


state 7

    (30) task_node -> NODE end .

    USERS           reduce using rule 30 (task_node -> NODE end .)


state 8

    (38) variable_task_option -> OPTION . variable_option_flag COLON op variable_task_option
    (39) variable_task_option -> OPTION . variable_option_flag COLON op COMMA task_node
    (40) variable_task_option -> OPTION . variable_option_flag COLON op end
    (41) task_option -> OPTION . option_flag task_option
    (42) task_option -> OPTION . option_flag COMMA task_node
    (43) task_option -> OPTION . option_flag end
    (44) variable_option_flag -> . MIN_SEC_LV
    (45) variable_option_flag -> . EXECUTION
    (46) option_flag -> . START

    MIN_SEC_LV      shift and go to state 17
    EXECUTION       shift and go to state 18
    START           shift and go to state 15

    variable_option_flag           shift and go to state 16
    option_flag                    shift and go to state 14

state 9

    (31) task_node -> NODE COMMA . task_node
    (30) task_node -> . NODE end
    (31) task_node -> . NODE COMMA task_node
    (32) task_node -> . NODE variable_task_option
    (33) task_node -> . NODE task_option

    NODE            shift and go to state 5

    task_node                      shift and go to state 19

state 10

    (32) task_node -> NODE variable_task_option .

    USERS           reduce using rule 32 (task_node -> NODE variable_task_option .)


state 11

    (33) task_node -> NODE task_option .

    USERS           reduce using rule 33 (task_node -> NODE task_option .)


state 12

    (59) end -> END .
    (60) end -> END . begin
    (2) begin -> . TASKS COLON task_node USERS COLON user_node
    (3) begin -> . TASKS COLON task_node USERS COLON user_node rules

    USERS           reduce using rule 59 (end -> END .)
    BEFORE          reduce using rule 59 (end -> END .)
    BOD             reduce using rule 59 (end -> END .)
    SOD             reduce using rule 59 (end -> END .)
    SENIORITY       reduce using rule 59 (end -> END .)
    ALLOC           reduce using rule 59 (end -> END .)
    AUTHORISED      reduce using rule 59 (end -> END .)
    $end            reduce using rule 59 (end -> END .)
    TASKS           shift and go to state 2

    begin                          shift and go to state 20

state 13

    (2) begin -> TASKS COLON task_node USERS . COLON user_node
    (3) begin -> TASKS COLON task_node USERS . COLON user_node rules

    COLON           shift and go to state 21


state 14

    (41) task_option -> OPTION option_flag . task_option
    (42) task_option -> OPTION option_flag . COMMA task_node
    (43) task_option -> OPTION option_flag . end
    (41) task_option -> . OPTION option_flag task_option
    (42) task_option -> . OPTION option_flag COMMA task_node
    (43) task_option -> . OPTION option_flag end
    (59) end -> . END
    (60) end -> . END begin

    COMMA           shift and go to state 24
    OPTION          shift and go to state 23
    END             shift and go to state 12

    task_option                    shift and go to state 25
    end                            shift and go to state 22

state 15

    (46) option_flag -> START .

    COMMA           reduce using rule 46 (option_flag -> START .)
    OPTION          reduce using rule 46 (option_flag -> START .)
    END             reduce using rule 46 (option_flag -> START .)


state 16

    (38) variable_task_option -> OPTION variable_option_flag . COLON op variable_task_option
    (39) variable_task_option -> OPTION variable_option_flag . COLON op COMMA task_node
    (40) variable_task_option -> OPTION variable_option_flag . COLON op end

    COLON           shift and go to state 26


state 17

    (44) variable_option_flag -> MIN_SEC_LV .

    COLON           reduce using rule 44 (variable_option_flag -> MIN_SEC_LV .)


state 18

    (45) variable_option_flag -> EXECUTION .

    COLON           reduce using rule 45 (variable_option_flag -> EXECUTION .)


state 19

    (31) task_node -> NODE COMMA task_node .

    USERS           reduce using rule 31 (task_node -> NODE COMMA task_node .)


state 20

    (60) end -> END begin .

    USERS           reduce using rule 60 (end -> END begin .)
    BEFORE          reduce using rule 60 (end -> END begin .)
    BOD             reduce using rule 60 (end -> END begin .)
    SOD             reduce using rule 60 (end -> END begin .)
    SENIORITY       reduce using rule 60 (end -> END begin .)
    ALLOC           reduce using rule 60 (end -> END begin .)
    AUTHORISED      reduce using rule 60 (end -> END begin .)
    $end            reduce using rule 60 (end -> END begin .)


state 21

    (2) begin -> TASKS COLON task_node USERS COLON . user_node
    (3) begin -> TASKS COLON task_node USERS COLON . user_node rules
    (34) user_node -> . NODE end
    (35) user_node -> . NODE COMMA user_node
    (36) user_node -> . NODE user_option
    (37) user_node -> . NODE end_rule

    NODE            shift and go to state 27

    user_node                      shift and go to state 28

state 22

    (43) task_option -> OPTION option_flag end .

    USERS           reduce using rule 43 (task_option -> OPTION option_flag end .)


state 23

    (41) task_option -> OPTION . option_flag task_option
    (42) task_option -> OPTION . option_flag COMMA task_node
    (43) task_option -> OPTION . option_flag end
    (46) option_flag -> . START

    START           shift and go to state 15

    option_flag                    shift and go to state 14

state 24

    (42) task_option -> OPTION option_flag COMMA . task_node
    (30) task_node -> . NODE end
    (31) task_node -> . NODE COMMA task_node
    (32) task_node -> . NODE variable_task_option
    (33) task_node -> . NODE task_option

    NODE            shift and go to state 5

    task_node                      shift and go to state 29

state 25

    (41) task_option -> OPTION option_flag task_option .

    USERS           reduce using rule 41 (task_option -> OPTION option_flag task_option .)


state 26

    (38) variable_task_option -> OPTION variable_option_flag COLON . op variable_task_option
    (39) variable_task_option -> OPTION variable_option_flag COLON . op COMMA task_node
    (40) variable_task_option -> OPTION variable_option_flag COLON . op end
    (47) op -> . EQ NODE
    (48) op -> . GEQ NODE
    (49) op -> . LEQ NODE
    (50) op -> . NEQ NODE
    (51) op -> . OR NODE
    (52) op -> . AND NODE
    (53) op -> . XOR NODE

    EQ              shift and go to state 35
    GEQ             shift and go to state 31
    LEQ             shift and go to state 33
    NEQ             shift and go to state 34
    OR              shift and go to state 36
    AND             shift and go to state 30
    XOR             shift and go to state 32

    op                             shift and go to state 37

state 27

    (34) user_node -> NODE . end
    (35) user_node -> NODE . COMMA user_node
    (36) user_node -> NODE . user_option
    (37) user_node -> NODE . end_rule
    (59) end -> . END
    (60) end -> . END begin
    (54) user_option -> . OPTION USERS_OPTION user_option
    (55) user_option -> . OPTION USERS_OPTION COMMA
    (56) user_option -> . OPTION USERS_OPTION COLON users_global_option
    (57) user_option -> . OPTION USERS_OPTION end
    (61) end_rule -> . END rules

    COMMA           shift and go to state 41
    END             shift and go to state 43
    OPTION          shift and go to state 39

    end                            shift and go to state 38
    end_rule                       shift and go to state 40
    user_option                    shift and go to state 42

state 28

    (2) begin -> TASKS COLON task_node USERS COLON user_node .
    (3) begin -> TASKS COLON task_node USERS COLON user_node . rules
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . ALLOC COLON allocation_pair
    (9) rules -> . AUTHORISED COLON authorised_pair

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for ALLOC resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
    $end            reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .)
    USERS           reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .)
    BEFORE          shift and go to state 50
    BOD             shift and go to state 49
    SOD             shift and go to state 46
    SENIORITY       shift and go to state 48
    ALLOC           shift and go to state 44
    AUTHORISED      shift and go to state 47

  ! BEFORE          [ reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .) ]
  ! BOD             [ reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .) ]
  ! SOD             [ reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .) ]
  ! SENIORITY       [ reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .) ]
  ! ALLOC           [ reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .) ]
  ! AUTHORISED      [ reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .) ]

    rules                          shift and go to state 45

state 29

    (42) task_option -> OPTION option_flag COMMA task_node .

    USERS           reduce using rule 42 (task_option -> OPTION option_flag COMMA task_node .)


state 30

    (52) op -> AND . NODE

    NODE            shift and go to state 51


state 31

    (48) op -> GEQ . NODE

    NODE            shift and go to state 52


state 32

    (53) op -> XOR . NODE

    NODE            shift and go to state 53


state 33

    (49) op -> LEQ . NODE

    NODE            shift and go to state 54


state 34

    (50) op -> NEQ . NODE

    NODE            shift and go to state 55


state 35

    (47) op -> EQ . NODE

    NODE            shift and go to state 56


state 36

    (51) op -> OR . NODE

    NODE            shift and go to state 57


state 37

    (38) variable_task_option -> OPTION variable_option_flag COLON op . variable_task_option
    (39) variable_task_option -> OPTION variable_option_flag COLON op . COMMA task_node
    (40) variable_task_option -> OPTION variable_option_flag COLON op . end
    (38) variable_task_option -> . OPTION variable_option_flag COLON op variable_task_option
    (39) variable_task_option -> . OPTION variable_option_flag COLON op COMMA task_node
    (40) variable_task_option -> . OPTION variable_option_flag COLON op end
    (59) end -> . END
    (60) end -> . END begin

    COMMA           shift and go to state 61
    OPTION          shift and go to state 59
    END             shift and go to state 12

    end                            shift and go to state 60
    variable_task_option           shift and go to state 58

state 38

    (34) user_node -> NODE end .

    USERS           reduce using rule 34 (user_node -> NODE end .)
    BEFORE          reduce using rule 34 (user_node -> NODE end .)
    BOD             reduce using rule 34 (user_node -> NODE end .)
    SOD             reduce using rule 34 (user_node -> NODE end .)
    SENIORITY       reduce using rule 34 (user_node -> NODE end .)
    ALLOC           reduce using rule 34 (user_node -> NODE end .)
    AUTHORISED      reduce using rule 34 (user_node -> NODE end .)
    $end            reduce using rule 34 (user_node -> NODE end .)


state 39

    (54) user_option -> OPTION . USERS_OPTION user_option
    (55) user_option -> OPTION . USERS_OPTION COMMA
    (56) user_option -> OPTION . USERS_OPTION COLON users_global_option
    (57) user_option -> OPTION . USERS_OPTION end

    USERS_OPTION    shift and go to state 62


state 40

    (37) user_node -> NODE end_rule .

    USERS           reduce using rule 37 (user_node -> NODE end_rule .)
    BEFORE          reduce using rule 37 (user_node -> NODE end_rule .)
    BOD             reduce using rule 37 (user_node -> NODE end_rule .)
    SOD             reduce using rule 37 (user_node -> NODE end_rule .)
    SENIORITY       reduce using rule 37 (user_node -> NODE end_rule .)
    ALLOC           reduce using rule 37 (user_node -> NODE end_rule .)
    AUTHORISED      reduce using rule 37 (user_node -> NODE end_rule .)
    $end            reduce using rule 37 (user_node -> NODE end_rule .)


state 41

    (35) user_node -> NODE COMMA . user_node
    (34) user_node -> . NODE end
    (35) user_node -> . NODE COMMA user_node
    (36) user_node -> . NODE user_option
    (37) user_node -> . NODE end_rule

    NODE            shift and go to state 27

    user_node                      shift and go to state 63

state 42

    (36) user_node -> NODE user_option .

    USERS           reduce using rule 36 (user_node -> NODE user_option .)
    BEFORE          reduce using rule 36 (user_node -> NODE user_option .)
    BOD             reduce using rule 36 (user_node -> NODE user_option .)
    SOD             reduce using rule 36 (user_node -> NODE user_option .)
    SENIORITY       reduce using rule 36 (user_node -> NODE user_option .)
    ALLOC           reduce using rule 36 (user_node -> NODE user_option .)
    AUTHORISED      reduce using rule 36 (user_node -> NODE user_option .)
    $end            reduce using rule 36 (user_node -> NODE user_option .)


state 43

    (59) end -> END .
    (60) end -> END . begin
    (61) end_rule -> END . rules
    (2) begin -> . TASKS COLON task_node USERS COLON user_node
    (3) begin -> . TASKS COLON task_node USERS COLON user_node rules
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . ALLOC COLON allocation_pair
    (9) rules -> . AUTHORISED COLON authorised_pair

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for ALLOC resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
    USERS           reduce using rule 59 (end -> END .)
    $end            reduce using rule 59 (end -> END .)
    TASKS           shift and go to state 2
    BEFORE          shift and go to state 50
    BOD             shift and go to state 49
    SOD             shift and go to state 46
    SENIORITY       shift and go to state 48
    ALLOC           shift and go to state 44
    AUTHORISED      shift and go to state 47

  ! BEFORE          [ reduce using rule 59 (end -> END .) ]
  ! BOD             [ reduce using rule 59 (end -> END .) ]
  ! SOD             [ reduce using rule 59 (end -> END .) ]
  ! SENIORITY       [ reduce using rule 59 (end -> END .) ]
  ! ALLOC           [ reduce using rule 59 (end -> END .) ]
  ! AUTHORISED      [ reduce using rule 59 (end -> END .) ]

    begin                          shift and go to state 20
    rules                          shift and go to state 64

state 44

    (8) rules -> ALLOC . COLON allocation_pair

    COLON           shift and go to state 65


state 45

    (3) begin -> TASKS COLON task_node USERS COLON user_node rules .

    $end            reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    USERS           reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    BEFORE          reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    BOD             reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    SOD             reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    SENIORITY       reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    ALLOC           reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    AUTHORISED      reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)


state 46

    (6) rules -> SOD . COLON sod_task_node_pair

    COLON           shift and go to state 66


state 47

    (9) rules -> AUTHORISED . COLON authorised_pair

    COLON           shift and go to state 67


state 48

    (7) rules -> SENIORITY . COLON user_node_pair

    COLON           shift and go to state 68


state 49

    (5) rules -> BOD . COLON bod_task_node_pair

    COLON           shift and go to state 69


state 50

    (4) rules -> BEFORE . COLON before_task_node_pair

    COLON           shift and go to state 70


state 51

    (52) op -> AND NODE .

    COMMA           reduce using rule 52 (op -> AND NODE .)
    OPTION          reduce using rule 52 (op -> AND NODE .)
    END             reduce using rule 52 (op -> AND NODE .)


state 52

    (48) op -> GEQ NODE .

    COMMA           reduce using rule 48 (op -> GEQ NODE .)
    OPTION          reduce using rule 48 (op -> GEQ NODE .)
    END             reduce using rule 48 (op -> GEQ NODE .)


state 53

    (53) op -> XOR NODE .

    COMMA           reduce using rule 53 (op -> XOR NODE .)
    OPTION          reduce using rule 53 (op -> XOR NODE .)
    END             reduce using rule 53 (op -> XOR NODE .)


state 54

    (49) op -> LEQ NODE .

    COMMA           reduce using rule 49 (op -> LEQ NODE .)
    OPTION          reduce using rule 49 (op -> LEQ NODE .)
    END             reduce using rule 49 (op -> LEQ NODE .)


state 55

    (50) op -> NEQ NODE .

    COMMA           reduce using rule 50 (op -> NEQ NODE .)
    OPTION          reduce using rule 50 (op -> NEQ NODE .)
    END             reduce using rule 50 (op -> NEQ NODE .)


state 56

    (47) op -> EQ NODE .

    COMMA           reduce using rule 47 (op -> EQ NODE .)
    OPTION          reduce using rule 47 (op -> EQ NODE .)
    END             reduce using rule 47 (op -> EQ NODE .)


state 57

    (51) op -> OR NODE .

    COMMA           reduce using rule 51 (op -> OR NODE .)
    OPTION          reduce using rule 51 (op -> OR NODE .)
    END             reduce using rule 51 (op -> OR NODE .)


state 58

    (38) variable_task_option -> OPTION variable_option_flag COLON op variable_task_option .

    USERS           reduce using rule 38 (variable_task_option -> OPTION variable_option_flag COLON op variable_task_option .)


state 59

    (38) variable_task_option -> OPTION . variable_option_flag COLON op variable_task_option
    (39) variable_task_option -> OPTION . variable_option_flag COLON op COMMA task_node
    (40) variable_task_option -> OPTION . variable_option_flag COLON op end
    (44) variable_option_flag -> . MIN_SEC_LV
    (45) variable_option_flag -> . EXECUTION

    MIN_SEC_LV      shift and go to state 17
    EXECUTION       shift and go to state 18

    variable_option_flag           shift and go to state 16

state 60

    (40) variable_task_option -> OPTION variable_option_flag COLON op end .

    USERS           reduce using rule 40 (variable_task_option -> OPTION variable_option_flag COLON op end .)


state 61

    (39) variable_task_option -> OPTION variable_option_flag COLON op COMMA . task_node
    (30) task_node -> . NODE end
    (31) task_node -> . NODE COMMA task_node
    (32) task_node -> . NODE variable_task_option
    (33) task_node -> . NODE task_option

    NODE            shift and go to state 5

    task_node                      shift and go to state 71

state 62

    (54) user_option -> OPTION USERS_OPTION . user_option
    (55) user_option -> OPTION USERS_OPTION . COMMA
    (56) user_option -> OPTION USERS_OPTION . COLON users_global_option
    (57) user_option -> OPTION USERS_OPTION . end
    (54) user_option -> . OPTION USERS_OPTION user_option
    (55) user_option -> . OPTION USERS_OPTION COMMA
    (56) user_option -> . OPTION USERS_OPTION COLON users_global_option
    (57) user_option -> . OPTION USERS_OPTION end
    (59) end -> . END
    (60) end -> . END begin

    COMMA           shift and go to state 74
    COLON           shift and go to state 75
    OPTION          shift and go to state 39
    END             shift and go to state 12

    end                            shift and go to state 72
    user_option                    shift and go to state 73

state 63

    (35) user_node -> NODE COMMA user_node .

    USERS           reduce using rule 35 (user_node -> NODE COMMA user_node .)
    BEFORE          reduce using rule 35 (user_node -> NODE COMMA user_node .)
    BOD             reduce using rule 35 (user_node -> NODE COMMA user_node .)
    SOD             reduce using rule 35 (user_node -> NODE COMMA user_node .)
    SENIORITY       reduce using rule 35 (user_node -> NODE COMMA user_node .)
    ALLOC           reduce using rule 35 (user_node -> NODE COMMA user_node .)
    AUTHORISED      reduce using rule 35 (user_node -> NODE COMMA user_node .)
    $end            reduce using rule 35 (user_node -> NODE COMMA user_node .)


state 64

    (61) end_rule -> END rules .

    USERS           reduce using rule 61 (end_rule -> END rules .)
    BEFORE          reduce using rule 61 (end_rule -> END rules .)
    BOD             reduce using rule 61 (end_rule -> END rules .)
    SOD             reduce using rule 61 (end_rule -> END rules .)
    SENIORITY       reduce using rule 61 (end_rule -> END rules .)
    ALLOC           reduce using rule 61 (end_rule -> END rules .)
    AUTHORISED      reduce using rule 61 (end_rule -> END rules .)
    $end            reduce using rule 61 (end_rule -> END rules .)


state 65

    (8) rules -> ALLOC COLON . allocation_pair
    (22) allocation_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (23) allocation_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair
    (24) allocation_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 77

    allocation_pair                shift and go to state 76

state 66

    (6) rules -> SOD COLON . sod_task_node_pair
    (16) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (17) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair
    (18) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 79

    sod_task_node_pair             shift and go to state 78

state 67

    (9) rules -> AUTHORISED COLON . authorised_pair
    (25) authorised_pair -> . LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules
    (26) authorised_pair -> . LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair
    (27) authorised_pair -> . LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END

    LPAREN          shift and go to state 81

    authorised_pair                shift and go to state 80

state 68

    (7) rules -> SENIORITY COLON . user_node_pair
    (19) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (20) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair
    (21) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 83

    user_node_pair                 shift and go to state 82

state 69

    (5) rules -> BOD COLON . bod_task_node_pair
    (13) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (14) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair
    (15) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 84

    bod_task_node_pair             shift and go to state 85

state 70

    (4) rules -> BEFORE COLON . before_task_node_pair
    (10) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (11) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair
    (12) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 87

    before_task_node_pair          shift and go to state 86

state 71

    (39) variable_task_option -> OPTION variable_option_flag COLON op COMMA task_node .

    USERS           reduce using rule 39 (variable_task_option -> OPTION variable_option_flag COLON op COMMA task_node .)


state 72

    (57) user_option -> OPTION USERS_OPTION end .

    USERS           reduce using rule 57 (user_option -> OPTION USERS_OPTION end .)
    BEFORE          reduce using rule 57 (user_option -> OPTION USERS_OPTION end .)
    BOD             reduce using rule 57 (user_option -> OPTION USERS_OPTION end .)
    SOD             reduce using rule 57 (user_option -> OPTION USERS_OPTION end .)
    SENIORITY       reduce using rule 57 (user_option -> OPTION USERS_OPTION end .)
    ALLOC           reduce using rule 57 (user_option -> OPTION USERS_OPTION end .)
    AUTHORISED      reduce using rule 57 (user_option -> OPTION USERS_OPTION end .)
    $end            reduce using rule 57 (user_option -> OPTION USERS_OPTION end .)


state 73

    (54) user_option -> OPTION USERS_OPTION user_option .

    USERS           reduce using rule 54 (user_option -> OPTION USERS_OPTION user_option .)
    BEFORE          reduce using rule 54 (user_option -> OPTION USERS_OPTION user_option .)
    BOD             reduce using rule 54 (user_option -> OPTION USERS_OPTION user_option .)
    SOD             reduce using rule 54 (user_option -> OPTION USERS_OPTION user_option .)
    SENIORITY       reduce using rule 54 (user_option -> OPTION USERS_OPTION user_option .)
    ALLOC           reduce using rule 54 (user_option -> OPTION USERS_OPTION user_option .)
    AUTHORISED      reduce using rule 54 (user_option -> OPTION USERS_OPTION user_option .)
    $end            reduce using rule 54 (user_option -> OPTION USERS_OPTION user_option .)


state 74

    (55) user_option -> OPTION USERS_OPTION COMMA .

    USERS           reduce using rule 55 (user_option -> OPTION USERS_OPTION COMMA .)
    BEFORE          reduce using rule 55 (user_option -> OPTION USERS_OPTION COMMA .)
    BOD             reduce using rule 55 (user_option -> OPTION USERS_OPTION COMMA .)
    SOD             reduce using rule 55 (user_option -> OPTION USERS_OPTION COMMA .)
    SENIORITY       reduce using rule 55 (user_option -> OPTION USERS_OPTION COMMA .)
    ALLOC           reduce using rule 55 (user_option -> OPTION USERS_OPTION COMMA .)
    AUTHORISED      reduce using rule 55 (user_option -> OPTION USERS_OPTION COMMA .)
    $end            reduce using rule 55 (user_option -> OPTION USERS_OPTION COMMA .)


state 75

    (56) user_option -> OPTION USERS_OPTION COLON . users_global_option
    (58) users_global_option -> . ALLOCATE end_rule

    ALLOCATE        shift and go to state 89

    users_global_option            shift and go to state 88

state 76

    (8) rules -> ALLOC COLON allocation_pair .

    $end            reduce using rule 8 (rules -> ALLOC COLON allocation_pair .)
    USERS           reduce using rule 8 (rules -> ALLOC COLON allocation_pair .)
    BEFORE          reduce using rule 8 (rules -> ALLOC COLON allocation_pair .)
    BOD             reduce using rule 8 (rules -> ALLOC COLON allocation_pair .)
    SOD             reduce using rule 8 (rules -> ALLOC COLON allocation_pair .)
    SENIORITY       reduce using rule 8 (rules -> ALLOC COLON allocation_pair .)
    ALLOC           reduce using rule 8 (rules -> ALLOC COLON allocation_pair .)
    AUTHORISED      reduce using rule 8 (rules -> ALLOC COLON allocation_pair .)


state 77

    (22) allocation_pair -> LPAREN . NODE COMMA NODE RPAREN END rules
    (23) allocation_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA user_node_pair
    (24) allocation_pair -> LPAREN . NODE COMMA NODE RPAREN END

    NODE            shift and go to state 90


state 78

    (6) rules -> SOD COLON sod_task_node_pair .

    $end            reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    USERS           reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    BEFORE          reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    BOD             reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    SOD             reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    SENIORITY       reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    ALLOC           reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    AUTHORISED      reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)


state 79

    (16) sod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END rules
    (17) sod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA sod_task_node_pair
    (18) sod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END

    NODE            shift and go to state 91


state 80

    (9) rules -> AUTHORISED COLON authorised_pair .

    $end            reduce using rule 9 (rules -> AUTHORISED COLON authorised_pair .)
    USERS           reduce using rule 9 (rules -> AUTHORISED COLON authorised_pair .)
    BEFORE          reduce using rule 9 (rules -> AUTHORISED COLON authorised_pair .)
    BOD             reduce using rule 9 (rules -> AUTHORISED COLON authorised_pair .)
    SOD             reduce using rule 9 (rules -> AUTHORISED COLON authorised_pair .)
    SENIORITY       reduce using rule 9 (rules -> AUTHORISED COLON authorised_pair .)
    ALLOC           reduce using rule 9 (rules -> AUTHORISED COLON authorised_pair .)
    AUTHORISED      reduce using rule 9 (rules -> AUTHORISED COLON authorised_pair .)


state 81

    (25) authorised_pair -> LPAREN . NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules
    (26) authorised_pair -> LPAREN . NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair
    (27) authorised_pair -> LPAREN . NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END

    NODE            shift and go to state 92


state 82

    (7) rules -> SENIORITY COLON user_node_pair .

    $end            reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    USERS           reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    BEFORE          reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    BOD             reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    SOD             reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    SENIORITY       reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    ALLOC           reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    AUTHORISED      reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)


state 83

    (19) user_node_pair -> LPAREN . NODE COMMA NODE RPAREN END rules
    (20) user_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA user_node_pair
    (21) user_node_pair -> LPAREN . NODE COMMA NODE RPAREN END

    NODE            shift and go to state 93


state 84

    (13) bod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END rules
    (14) bod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA bod_task_node_pair
    (15) bod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END

    NODE            shift and go to state 94


state 85

    (5) rules -> BOD COLON bod_task_node_pair .

    $end            reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    USERS           reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    BEFORE          reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    BOD             reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    SOD             reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    SENIORITY       reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    ALLOC           reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    AUTHORISED      reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)


state 86

    (4) rules -> BEFORE COLON before_task_node_pair .

    $end            reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    USERS           reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    BEFORE          reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    BOD             reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    SOD             reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    SENIORITY       reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    ALLOC           reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    AUTHORISED      reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)


state 87

    (10) before_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END rules
    (11) before_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA before_task_node_pair
    (12) before_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END

    NODE            shift and go to state 95


state 88

    (56) user_option -> OPTION USERS_OPTION COLON users_global_option .

    USERS           reduce using rule 56 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    BEFORE          reduce using rule 56 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    BOD             reduce using rule 56 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    SOD             reduce using rule 56 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    SENIORITY       reduce using rule 56 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    ALLOC           reduce using rule 56 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    AUTHORISED      reduce using rule 56 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    $end            reduce using rule 56 (user_option -> OPTION USERS_OPTION COLON users_global_option .)


state 89

    (58) users_global_option -> ALLOCATE . end_rule
    (61) end_rule -> . END rules

    END             shift and go to state 97

    end_rule                       shift and go to state 96

state 90

    (22) allocation_pair -> LPAREN NODE . COMMA NODE RPAREN END rules
    (23) allocation_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA user_node_pair
    (24) allocation_pair -> LPAREN NODE . COMMA NODE RPAREN END

    COMMA           shift and go to state 98


state 91

    (16) sod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END rules
    (17) sod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA sod_task_node_pair
    (18) sod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END

    COMMA           shift and go to state 99


state 92

    (25) authorised_pair -> LPAREN NODE . COMMA LSQPAREN user_list RSQPAREN RPAREN END rules
    (26) authorised_pair -> LPAREN NODE . COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair
    (27) authorised_pair -> LPAREN NODE . COMMA LSQPAREN user_list RSQPAREN RPAREN END

    COMMA           shift and go to state 100


state 93

    (19) user_node_pair -> LPAREN NODE . COMMA NODE RPAREN END rules
    (20) user_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA user_node_pair
    (21) user_node_pair -> LPAREN NODE . COMMA NODE RPAREN END

    COMMA           shift and go to state 101


state 94

    (13) bod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END rules
    (14) bod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA bod_task_node_pair
    (15) bod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END

    COMMA           shift and go to state 102


state 95

    (10) before_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END rules
    (11) before_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA before_task_node_pair
    (12) before_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END

    COMMA           shift and go to state 103


state 96

    (58) users_global_option -> ALLOCATE end_rule .

    USERS           reduce using rule 58 (users_global_option -> ALLOCATE end_rule .)
    BEFORE          reduce using rule 58 (users_global_option -> ALLOCATE end_rule .)
    BOD             reduce using rule 58 (users_global_option -> ALLOCATE end_rule .)
    SOD             reduce using rule 58 (users_global_option -> ALLOCATE end_rule .)
    SENIORITY       reduce using rule 58 (users_global_option -> ALLOCATE end_rule .)
    ALLOC           reduce using rule 58 (users_global_option -> ALLOCATE end_rule .)
    AUTHORISED      reduce using rule 58 (users_global_option -> ALLOCATE end_rule .)
    $end            reduce using rule 58 (users_global_option -> ALLOCATE end_rule .)


state 97

    (61) end_rule -> END . rules
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . ALLOC COLON allocation_pair
    (9) rules -> . AUTHORISED COLON authorised_pair

    BEFORE          shift and go to state 50
    BOD             shift and go to state 49
    SOD             shift and go to state 46
    SENIORITY       shift and go to state 48
    ALLOC           shift and go to state 44
    AUTHORISED      shift and go to state 47

    rules                          shift and go to state 64

state 98

    (22) allocation_pair -> LPAREN NODE COMMA . NODE RPAREN END rules
    (23) allocation_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA user_node_pair
    (24) allocation_pair -> LPAREN NODE COMMA . NODE RPAREN END

    NODE            shift and go to state 104


state 99

    (16) sod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END rules
    (17) sod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA sod_task_node_pair
    (18) sod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END

    NODE            shift and go to state 105


state 100

    (25) authorised_pair -> LPAREN NODE COMMA . LSQPAREN user_list RSQPAREN RPAREN END rules
    (26) authorised_pair -> LPAREN NODE COMMA . LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair
    (27) authorised_pair -> LPAREN NODE COMMA . LSQPAREN user_list RSQPAREN RPAREN END

    LSQPAREN        shift and go to state 106


state 101

    (19) user_node_pair -> LPAREN NODE COMMA . NODE RPAREN END rules
    (20) user_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA user_node_pair
    (21) user_node_pair -> LPAREN NODE COMMA . NODE RPAREN END

    NODE            shift and go to state 107


state 102

    (13) bod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END rules
    (14) bod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA bod_task_node_pair
    (15) bod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END

    NODE            shift and go to state 108


state 103

    (10) before_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END rules
    (11) before_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA before_task_node_pair
    (12) before_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END

    NODE            shift and go to state 109


state 104

    (22) allocation_pair -> LPAREN NODE COMMA NODE . RPAREN END rules
    (23) allocation_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA user_node_pair
    (24) allocation_pair -> LPAREN NODE COMMA NODE . RPAREN END

    RPAREN          shift and go to state 110


state 105

    (16) sod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END rules
    (17) sod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA sod_task_node_pair
    (18) sod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END

    RPAREN          shift and go to state 111


state 106

    (25) authorised_pair -> LPAREN NODE COMMA LSQPAREN . user_list RSQPAREN RPAREN END rules
    (26) authorised_pair -> LPAREN NODE COMMA LSQPAREN . user_list RSQPAREN RPAREN COMMA authorised_pair
    (27) authorised_pair -> LPAREN NODE COMMA LSQPAREN . user_list RSQPAREN RPAREN END
    (28) user_list -> . NODE COMMA user_list
    (29) user_list -> . NODE

    NODE            shift and go to state 112

    user_list                      shift and go to state 113

state 107

    (19) user_node_pair -> LPAREN NODE COMMA NODE . RPAREN END rules
    (20) user_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA user_node_pair
    (21) user_node_pair -> LPAREN NODE COMMA NODE . RPAREN END

    RPAREN          shift and go to state 114


state 108

    (13) bod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END rules
    (14) bod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA bod_task_node_pair
    (15) bod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END

    RPAREN          shift and go to state 115


state 109

    (10) before_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END rules
    (11) before_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA before_task_node_pair
    (12) before_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END

    RPAREN          shift and go to state 116


state 110

    (22) allocation_pair -> LPAREN NODE COMMA NODE RPAREN . END rules
    (23) allocation_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA user_node_pair
    (24) allocation_pair -> LPAREN NODE COMMA NODE RPAREN . END

    END             shift and go to state 118
    COMMA           shift and go to state 117


state 111

    (16) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END rules
    (17) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA sod_task_node_pair
    (18) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END

    END             shift and go to state 120
    COMMA           shift and go to state 119


state 112

    (28) user_list -> NODE . COMMA user_list
    (29) user_list -> NODE .

    COMMA           shift and go to state 121
    RSQPAREN        reduce using rule 29 (user_list -> NODE .)


state 113

    (25) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list . RSQPAREN RPAREN END rules
    (26) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list . RSQPAREN RPAREN COMMA authorised_pair
    (27) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list . RSQPAREN RPAREN END

    RSQPAREN        shift and go to state 122


state 114

    (19) user_node_pair -> LPAREN NODE COMMA NODE RPAREN . END rules
    (20) user_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA user_node_pair
    (21) user_node_pair -> LPAREN NODE COMMA NODE RPAREN . END

    END             shift and go to state 124
    COMMA           shift and go to state 123


state 115

    (13) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END rules
    (14) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA bod_task_node_pair
    (15) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END

    END             shift and go to state 126
    COMMA           shift and go to state 125


state 116

    (10) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END rules
    (11) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA before_task_node_pair
    (12) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END

    END             shift and go to state 128
    COMMA           shift and go to state 127


state 117

    (23) allocation_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . user_node_pair
    (19) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (20) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair
    (21) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 83

    user_node_pair                 shift and go to state 129

state 118

    (22) allocation_pair -> LPAREN NODE COMMA NODE RPAREN END . rules
    (24) allocation_pair -> LPAREN NODE COMMA NODE RPAREN END .
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . ALLOC COLON allocation_pair
    (9) rules -> . AUTHORISED COLON authorised_pair

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for ALLOC resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
    $end            reduce using rule 24 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    USERS           reduce using rule 24 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BEFORE          shift and go to state 50
    BOD             shift and go to state 49
    SOD             shift and go to state 46
    SENIORITY       shift and go to state 48
    ALLOC           shift and go to state 44
    AUTHORISED      shift and go to state 47

  ! BEFORE          [ reduce using rule 24 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! BOD             [ reduce using rule 24 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SOD             [ reduce using rule 24 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SENIORITY       [ reduce using rule 24 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! ALLOC           [ reduce using rule 24 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! AUTHORISED      [ reduce using rule 24 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]

    rules                          shift and go to state 130

state 119

    (17) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . sod_task_node_pair
    (16) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (17) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair
    (18) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 79

    sod_task_node_pair             shift and go to state 131

state 120

    (16) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END . rules
    (18) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . ALLOC COLON allocation_pair
    (9) rules -> . AUTHORISED COLON authorised_pair

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for ALLOC resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
    $end            reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    USERS           reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BEFORE          shift and go to state 50
    BOD             shift and go to state 49
    SOD             shift and go to state 46
    SENIORITY       shift and go to state 48
    ALLOC           shift and go to state 44
    AUTHORISED      shift and go to state 47

  ! BEFORE          [ reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! BOD             [ reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SOD             [ reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SENIORITY       [ reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! ALLOC           [ reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! AUTHORISED      [ reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]

    rules                          shift and go to state 132

state 121

    (28) user_list -> NODE COMMA . user_list
    (28) user_list -> . NODE COMMA user_list
    (29) user_list -> . NODE

    NODE            shift and go to state 112

    user_list                      shift and go to state 133

state 122

    (25) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN . RPAREN END rules
    (26) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN . RPAREN COMMA authorised_pair
    (27) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN . RPAREN END

    RPAREN          shift and go to state 134


state 123

    (20) user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . user_node_pair
    (19) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (20) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair
    (21) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 83

    user_node_pair                 shift and go to state 135

state 124

    (19) user_node_pair -> LPAREN NODE COMMA NODE RPAREN END . rules
    (21) user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . ALLOC COLON allocation_pair
    (9) rules -> . AUTHORISED COLON authorised_pair

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for ALLOC resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
    $end            reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    USERS           reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BEFORE          shift and go to state 50
    BOD             shift and go to state 49
    SOD             shift and go to state 46
    SENIORITY       shift and go to state 48
    ALLOC           shift and go to state 44
    AUTHORISED      shift and go to state 47

  ! BEFORE          [ reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! BOD             [ reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SOD             [ reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SENIORITY       [ reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! ALLOC           [ reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! AUTHORISED      [ reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]

    rules                          shift and go to state 136

state 125

    (14) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . bod_task_node_pair
    (13) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (14) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair
    (15) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 84

    bod_task_node_pair             shift and go to state 137

state 126

    (13) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END . rules
    (15) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . ALLOC COLON allocation_pair
    (9) rules -> . AUTHORISED COLON authorised_pair

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for ALLOC resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
    $end            reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    USERS           reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BEFORE          shift and go to state 50
    BOD             shift and go to state 49
    SOD             shift and go to state 46
    SENIORITY       shift and go to state 48
    ALLOC           shift and go to state 44
    AUTHORISED      shift and go to state 47

  ! BEFORE          [ reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! BOD             [ reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SOD             [ reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SENIORITY       [ reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! ALLOC           [ reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! AUTHORISED      [ reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]

    rules                          shift and go to state 138

state 127

    (11) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . before_task_node_pair
    (10) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (11) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair
    (12) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 87

    before_task_node_pair          shift and go to state 139

state 128

    (10) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END . rules
    (12) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . ALLOC COLON allocation_pair
    (9) rules -> . AUTHORISED COLON authorised_pair

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for ALLOC resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
    $end            reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    USERS           reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BEFORE          shift and go to state 50
    BOD             shift and go to state 49
    SOD             shift and go to state 46
    SENIORITY       shift and go to state 48
    ALLOC           shift and go to state 44
    AUTHORISED      shift and go to state 47

  ! BEFORE          [ reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! BOD             [ reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SOD             [ reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SENIORITY       [ reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! ALLOC           [ reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! AUTHORISED      [ reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]

    rules                          shift and go to state 140

state 129

    (23) allocation_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .

    $end            reduce using rule 23 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    USERS           reduce using rule 23 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    BEFORE          reduce using rule 23 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    BOD             reduce using rule 23 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    SOD             reduce using rule 23 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    SENIORITY       reduce using rule 23 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    ALLOC           reduce using rule 23 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    AUTHORISED      reduce using rule 23 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)


state 130

    (22) allocation_pair -> LPAREN NODE COMMA NODE RPAREN END rules .

    $end            reduce using rule 22 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    USERS           reduce using rule 22 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BEFORE          reduce using rule 22 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BOD             reduce using rule 22 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SOD             reduce using rule 22 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SENIORITY       reduce using rule 22 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    ALLOC           reduce using rule 22 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    AUTHORISED      reduce using rule 22 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)


state 131

    (17) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .

    $end            reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    USERS           reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    BEFORE          reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    BOD             reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    SOD             reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    SENIORITY       reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    ALLOC           reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    AUTHORISED      reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)


state 132

    (16) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .

    $end            reduce using rule 16 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    USERS           reduce using rule 16 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BEFORE          reduce using rule 16 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BOD             reduce using rule 16 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SOD             reduce using rule 16 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SENIORITY       reduce using rule 16 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    ALLOC           reduce using rule 16 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    AUTHORISED      reduce using rule 16 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)


state 133

    (28) user_list -> NODE COMMA user_list .

    RSQPAREN        reduce using rule 28 (user_list -> NODE COMMA user_list .)


state 134

    (25) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN . END rules
    (26) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN . COMMA authorised_pair
    (27) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN . END

    END             shift and go to state 142
    COMMA           shift and go to state 141


state 135

    (20) user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .

    $end            reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    USERS           reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    BEFORE          reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    BOD             reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    SOD             reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    SENIORITY       reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    ALLOC           reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    AUTHORISED      reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)


state 136

    (19) user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .

    $end            reduce using rule 19 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    USERS           reduce using rule 19 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BEFORE          reduce using rule 19 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BOD             reduce using rule 19 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SOD             reduce using rule 19 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SENIORITY       reduce using rule 19 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    ALLOC           reduce using rule 19 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    AUTHORISED      reduce using rule 19 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)


state 137

    (14) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .

    $end            reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    USERS           reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    BEFORE          reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    BOD             reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    SOD             reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    SENIORITY       reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    ALLOC           reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    AUTHORISED      reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)


state 138

    (13) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .

    $end            reduce using rule 13 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    USERS           reduce using rule 13 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BEFORE          reduce using rule 13 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BOD             reduce using rule 13 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SOD             reduce using rule 13 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SENIORITY       reduce using rule 13 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    ALLOC           reduce using rule 13 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    AUTHORISED      reduce using rule 13 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)


state 139

    (11) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .

    $end            reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    USERS           reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    BEFORE          reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    BOD             reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    SOD             reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    SENIORITY       reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    ALLOC           reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    AUTHORISED      reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)


state 140

    (10) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .

    $end            reduce using rule 10 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    USERS           reduce using rule 10 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BEFORE          reduce using rule 10 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BOD             reduce using rule 10 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SOD             reduce using rule 10 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SENIORITY       reduce using rule 10 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    ALLOC           reduce using rule 10 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    AUTHORISED      reduce using rule 10 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)


state 141

    (26) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA . authorised_pair
    (25) authorised_pair -> . LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules
    (26) authorised_pair -> . LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair
    (27) authorised_pair -> . LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END

    LPAREN          shift and go to state 81

    authorised_pair                shift and go to state 143

state 142

    (25) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END . rules
    (27) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . ALLOC COLON allocation_pair
    (9) rules -> . AUTHORISED COLON authorised_pair

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for ALLOC resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
    $end            reduce using rule 27 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .)
    USERS           reduce using rule 27 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .)
    BEFORE          shift and go to state 50
    BOD             shift and go to state 49
    SOD             shift and go to state 46
    SENIORITY       shift and go to state 48
    ALLOC           shift and go to state 44
    AUTHORISED      shift and go to state 47

  ! BEFORE          [ reduce using rule 27 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .) ]
  ! BOD             [ reduce using rule 27 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .) ]
  ! SOD             [ reduce using rule 27 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .) ]
  ! SENIORITY       [ reduce using rule 27 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .) ]
  ! ALLOC           [ reduce using rule 27 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .) ]
  ! AUTHORISED      [ reduce using rule 27 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .) ]

    rules                          shift and go to state 144

state 143

    (26) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .

    $end            reduce using rule 26 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)
    USERS           reduce using rule 26 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)
    BEFORE          reduce using rule 26 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)
    BOD             reduce using rule 26 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)
    SOD             reduce using rule 26 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)
    SENIORITY       reduce using rule 26 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)
    ALLOC           reduce using rule 26 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)
    AUTHORISED      reduce using rule 26 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)


state 144

    (25) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .

    $end            reduce using rule 25 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)
    USERS           reduce using rule 25 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)
    BEFORE          reduce using rule 25 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)
    BOD             reduce using rule 25 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)
    SOD             reduce using rule 25 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)
    SENIORITY       reduce using rule 25 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)
    ALLOC           reduce using rule 25 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)
    AUTHORISED      reduce using rule 25 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for BEFORE in state 28 resolved as shift
WARNING: shift/reduce conflict for BOD in state 28 resolved as shift
WARNING: shift/reduce conflict for SOD in state 28 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 28 resolved as shift
WARNING: shift/reduce conflict for ALLOC in state 28 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 28 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 43 resolved as shift
WARNING: shift/reduce conflict for BOD in state 43 resolved as shift
WARNING: shift/reduce conflict for SOD in state 43 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 43 resolved as shift
WARNING: shift/reduce conflict for ALLOC in state 43 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 43 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 118 resolved as shift
WARNING: shift/reduce conflict for BOD in state 118 resolved as shift
WARNING: shift/reduce conflict for SOD in state 118 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 118 resolved as shift
WARNING: shift/reduce conflict for ALLOC in state 118 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 118 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 120 resolved as shift
WARNING: shift/reduce conflict for BOD in state 120 resolved as shift
WARNING: shift/reduce conflict for SOD in state 120 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 120 resolved as shift
WARNING: shift/reduce conflict for ALLOC in state 120 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 120 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 124 resolved as shift
WARNING: shift/reduce conflict for BOD in state 124 resolved as shift
WARNING: shift/reduce conflict for SOD in state 124 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 124 resolved as shift
WARNING: shift/reduce conflict for ALLOC in state 124 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 124 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 126 resolved as shift
WARNING: shift/reduce conflict for BOD in state 126 resolved as shift
WARNING: shift/reduce conflict for SOD in state 126 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 126 resolved as shift
WARNING: shift/reduce conflict for ALLOC in state 126 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 126 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 128 resolved as shift
WARNING: shift/reduce conflict for BOD in state 128 resolved as shift
WARNING: shift/reduce conflict for SOD in state 128 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 128 resolved as shift
WARNING: shift/reduce conflict for ALLOC in state 128 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 128 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 142 resolved as shift
WARNING: shift/reduce conflict for BOD in state 142 resolved as shift
WARNING: shift/reduce conflict for SOD in state 142 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 142 resolved as shift
WARNING: shift/reduce conflict for ALLOC in state 142 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 142 resolved as shift
