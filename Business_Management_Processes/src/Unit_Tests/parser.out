Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> begin
Rule 2     begin -> TASKS COLON task_node USERS COLON user_node
Rule 3     begin -> TASKS COLON task_node USERS COLON user_node rules
Rule 4     rules -> BEFORE COLON before_task_node_pair
Rule 5     rules -> BOD COLON bod_task_node_pair
Rule 6     rules -> SOD COLON sod_task_node_pair
Rule 7     rules -> SENIORITY COLON user_node_pair
Rule 8     rules -> AUTHORISED COLON authorised_pair
Rule 9     rules -> EXECUTION COLON fork
Rule 10    before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules
Rule 11    before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair
Rule 12    before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 13    bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules
Rule 14    bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair
Rule 15    bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 16    sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules
Rule 17    sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair
Rule 18    sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 19    user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules
Rule 20    user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair
Rule 21    user_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 22    authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules
Rule 23    authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair
Rule 24    authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END
Rule 25    user_list -> NODE COMMA user_list
Rule 26    user_list -> NODE
Rule 27    task_node -> NODE end
Rule 28    task_node -> NODE COMMA task_node
Rule 29    task_node -> NODE variable_task_option
Rule 30    task_node -> NODE task_option
Rule 31    user_node -> NODE end
Rule 32    user_node -> NODE COMMA user_node
Rule 33    user_node -> NODE user_option
Rule 34    user_node -> NODE end_rule
Rule 35    variable_task_option -> OPTION variable_option_flag COLON op variable_task_option
Rule 36    variable_task_option -> OPTION variable_option_flag COLON op COMMA task_node
Rule 37    variable_task_option -> OPTION variable_option_flag COLON op end
Rule 38    task_option -> OPTION option_flag task_option
Rule 39    task_option -> OPTION option_flag COMMA task_node
Rule 40    task_option -> OPTION option_flag end
Rule 41    variable_option_flag -> MIN_SEC_LV
Rule 42    option_flag -> START
Rule 43    op -> EQ NODE
Rule 44    op -> GEQ NODE
Rule 45    op -> LEQ NODE
Rule 46    op -> NEQ NODE
Rule 47    fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
Rule 48    fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
Rule 49    fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END
Rule 50    fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
Rule 51    fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
Rule 52    fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END
Rule 53    task_list -> NODE COMMA task_list
Rule 54    task_list -> NODE
Rule 55    user_option -> OPTION USERS_OPTION user_option
Rule 56    user_option -> OPTION USERS_OPTION COMMA
Rule 57    user_option -> OPTION USERS_OPTION COLON users_global_option
Rule 58    user_option -> OPTION USERS_OPTION end
Rule 59    users_global_option -> ALLOCATE end_rule
Rule 60    end -> END
Rule 61    end -> END begin
Rule 62    end_rule -> END rules

Terminals, with rules where they appear

ALLOCATE             : 59
AUTHORISED           : 8
BEFORE               : 4
BOD                  : 5
COLON                : 2 2 3 3 4 5 6 7 8 9 35 36 37 57
COMMA                : 10 11 11 12 13 14 14 15 16 17 17 18 19 20 20 21 22 23 23 24 25 28 32 36 39 47 48 48 49 50 51 51 52 53 56
END                  : 10 12 13 15 16 18 19 21 22 24 47 49 50 52 60 61 62
EQ                   : 43
EXECUTION            : 9
GEQ                  : 44
LEQ                  : 45
LPAREN               : 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 47 48 49 50 51 52
LSQPAREN             : 22 23 24 47 48 49 50 51 52
MIN_SEC_LV           : 41
NEQ                  : 46
NODE                 : 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 23 24 25 26 27 28 29 30 31 32 33 34 43 44 45 46 47 48 49 50 51 52 53 54
OPTION               : 35 36 37 38 39 40 55 56 57 58
OR                   : 47 48 49
RPAREN               : 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 47 48 49 50 51 52
RSQPAREN             : 22 23 24 47 48 49 50 51 52
SENIORITY            : 7
SOD                  : 6
START                : 42
TASKS                : 2 3
USERS                : 2 3
USERS_OPTION         : 55 56 57 58
XOR                  : 50 51 52
error                : 

Nonterminals, with rules where they appear

authorised_pair      : 8 23
before_task_node_pair : 4 11
begin                : 1 61
bod_task_node_pair   : 5 14
end                  : 27 31 37 40 58
end_rule             : 34 59
fork                 : 9 48 51
op                   : 35 36 37
option_flag          : 38 39 40
prog                 : 0
rules                : 3 10 13 16 19 22 47 50 62
sod_task_node_pair   : 6 17
task_list            : 47 48 49 50 51 52 53
task_node            : 2 3 28 36 39
task_option          : 30 38
user_list            : 22 23 24 25
user_node            : 2 3 32
user_node_pair       : 7 20
user_option          : 33 55
users_global_option  : 57
variable_option_flag : 35 36 37
variable_task_option : 29 35

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . begin
    (2) begin -> . TASKS COLON task_node USERS COLON user_node
    (3) begin -> . TASKS COLON task_node USERS COLON user_node rules

    TASKS           shift and go to state 2

    prog                           shift and go to state 3
    begin                          shift and go to state 1

state 1

    (1) prog -> begin .

    $end            reduce using rule 1 (prog -> begin .)


state 2

    (2) begin -> TASKS . COLON task_node USERS COLON user_node
    (3) begin -> TASKS . COLON task_node USERS COLON user_node rules

    COLON           shift and go to state 4


state 3

    (0) S' -> prog .



state 4

    (2) begin -> TASKS COLON . task_node USERS COLON user_node
    (3) begin -> TASKS COLON . task_node USERS COLON user_node rules
    (27) task_node -> . NODE end
    (28) task_node -> . NODE COMMA task_node
    (29) task_node -> . NODE variable_task_option
    (30) task_node -> . NODE task_option

    NODE            shift and go to state 5

    task_node                      shift and go to state 6

state 5

    (27) task_node -> NODE . end
    (28) task_node -> NODE . COMMA task_node
    (29) task_node -> NODE . variable_task_option
    (30) task_node -> NODE . task_option
    (60) end -> . END
    (61) end -> . END begin
    (35) variable_task_option -> . OPTION variable_option_flag COLON op variable_task_option
    (36) variable_task_option -> . OPTION variable_option_flag COLON op COMMA task_node
    (37) variable_task_option -> . OPTION variable_option_flag COLON op end
    (38) task_option -> . OPTION option_flag task_option
    (39) task_option -> . OPTION option_flag COMMA task_node
    (40) task_option -> . OPTION option_flag end

    COMMA           shift and go to state 9
    END             shift and go to state 12
    OPTION          shift and go to state 8

    variable_task_option           shift and go to state 10
    end                            shift and go to state 7
    task_option                    shift and go to state 11

state 6

    (2) begin -> TASKS COLON task_node . USERS COLON user_node
    (3) begin -> TASKS COLON task_node . USERS COLON user_node rules

    USERS           shift and go to state 13


state 7

    (27) task_node -> NODE end .

    USERS           reduce using rule 27 (task_node -> NODE end .)


state 8

    (35) variable_task_option -> OPTION . variable_option_flag COLON op variable_task_option
    (36) variable_task_option -> OPTION . variable_option_flag COLON op COMMA task_node
    (37) variable_task_option -> OPTION . variable_option_flag COLON op end
    (38) task_option -> OPTION . option_flag task_option
    (39) task_option -> OPTION . option_flag COMMA task_node
    (40) task_option -> OPTION . option_flag end
    (41) variable_option_flag -> . MIN_SEC_LV
    (42) option_flag -> . START

    MIN_SEC_LV      shift and go to state 17
    START           shift and go to state 15

    variable_option_flag           shift and go to state 16
    option_flag                    shift and go to state 14

state 9

    (28) task_node -> NODE COMMA . task_node
    (27) task_node -> . NODE end
    (28) task_node -> . NODE COMMA task_node
    (29) task_node -> . NODE variable_task_option
    (30) task_node -> . NODE task_option

    NODE            shift and go to state 5

    task_node                      shift and go to state 18

state 10

    (29) task_node -> NODE variable_task_option .

    USERS           reduce using rule 29 (task_node -> NODE variable_task_option .)


state 11

    (30) task_node -> NODE task_option .

    USERS           reduce using rule 30 (task_node -> NODE task_option .)


state 12

    (60) end -> END .
    (61) end -> END . begin
    (2) begin -> . TASKS COLON task_node USERS COLON user_node
    (3) begin -> . TASKS COLON task_node USERS COLON user_node rules

    USERS           reduce using rule 60 (end -> END .)
    BEFORE          reduce using rule 60 (end -> END .)
    BOD             reduce using rule 60 (end -> END .)
    SOD             reduce using rule 60 (end -> END .)
    SENIORITY       reduce using rule 60 (end -> END .)
    AUTHORISED      reduce using rule 60 (end -> END .)
    EXECUTION       reduce using rule 60 (end -> END .)
    $end            reduce using rule 60 (end -> END .)
    TASKS           shift and go to state 2

    begin                          shift and go to state 19

state 13

    (2) begin -> TASKS COLON task_node USERS . COLON user_node
    (3) begin -> TASKS COLON task_node USERS . COLON user_node rules

    COLON           shift and go to state 20


state 14

    (38) task_option -> OPTION option_flag . task_option
    (39) task_option -> OPTION option_flag . COMMA task_node
    (40) task_option -> OPTION option_flag . end
    (38) task_option -> . OPTION option_flag task_option
    (39) task_option -> . OPTION option_flag COMMA task_node
    (40) task_option -> . OPTION option_flag end
    (60) end -> . END
    (61) end -> . END begin

    COMMA           shift and go to state 23
    OPTION          shift and go to state 22
    END             shift and go to state 12

    task_option                    shift and go to state 24
    end                            shift and go to state 21

state 15

    (42) option_flag -> START .

    COMMA           reduce using rule 42 (option_flag -> START .)
    OPTION          reduce using rule 42 (option_flag -> START .)
    END             reduce using rule 42 (option_flag -> START .)


state 16

    (35) variable_task_option -> OPTION variable_option_flag . COLON op variable_task_option
    (36) variable_task_option -> OPTION variable_option_flag . COLON op COMMA task_node
    (37) variable_task_option -> OPTION variable_option_flag . COLON op end

    COLON           shift and go to state 25


state 17

    (41) variable_option_flag -> MIN_SEC_LV .

    COLON           reduce using rule 41 (variable_option_flag -> MIN_SEC_LV .)


state 18

    (28) task_node -> NODE COMMA task_node .

    USERS           reduce using rule 28 (task_node -> NODE COMMA task_node .)


state 19

    (61) end -> END begin .

    USERS           reduce using rule 61 (end -> END begin .)
    BEFORE          reduce using rule 61 (end -> END begin .)
    BOD             reduce using rule 61 (end -> END begin .)
    SOD             reduce using rule 61 (end -> END begin .)
    SENIORITY       reduce using rule 61 (end -> END begin .)
    AUTHORISED      reduce using rule 61 (end -> END begin .)
    EXECUTION       reduce using rule 61 (end -> END begin .)
    $end            reduce using rule 61 (end -> END begin .)


state 20

    (2) begin -> TASKS COLON task_node USERS COLON . user_node
    (3) begin -> TASKS COLON task_node USERS COLON . user_node rules
    (31) user_node -> . NODE end
    (32) user_node -> . NODE COMMA user_node
    (33) user_node -> . NODE user_option
    (34) user_node -> . NODE end_rule

    NODE            shift and go to state 26

    user_node                      shift and go to state 27

state 21

    (40) task_option -> OPTION option_flag end .

    USERS           reduce using rule 40 (task_option -> OPTION option_flag end .)


state 22

    (38) task_option -> OPTION . option_flag task_option
    (39) task_option -> OPTION . option_flag COMMA task_node
    (40) task_option -> OPTION . option_flag end
    (42) option_flag -> . START

    START           shift and go to state 15

    option_flag                    shift and go to state 14

state 23

    (39) task_option -> OPTION option_flag COMMA . task_node
    (27) task_node -> . NODE end
    (28) task_node -> . NODE COMMA task_node
    (29) task_node -> . NODE variable_task_option
    (30) task_node -> . NODE task_option

    NODE            shift and go to state 5

    task_node                      shift and go to state 28

state 24

    (38) task_option -> OPTION option_flag task_option .

    USERS           reduce using rule 38 (task_option -> OPTION option_flag task_option .)


state 25

    (35) variable_task_option -> OPTION variable_option_flag COLON . op variable_task_option
    (36) variable_task_option -> OPTION variable_option_flag COLON . op COMMA task_node
    (37) variable_task_option -> OPTION variable_option_flag COLON . op end
    (43) op -> . EQ NODE
    (44) op -> . GEQ NODE
    (45) op -> . LEQ NODE
    (46) op -> . NEQ NODE

    EQ              shift and go to state 32
    GEQ             shift and go to state 29
    LEQ             shift and go to state 30
    NEQ             shift and go to state 31

    op                             shift and go to state 33

state 26

    (31) user_node -> NODE . end
    (32) user_node -> NODE . COMMA user_node
    (33) user_node -> NODE . user_option
    (34) user_node -> NODE . end_rule
    (60) end -> . END
    (61) end -> . END begin
    (55) user_option -> . OPTION USERS_OPTION user_option
    (56) user_option -> . OPTION USERS_OPTION COMMA
    (57) user_option -> . OPTION USERS_OPTION COLON users_global_option
    (58) user_option -> . OPTION USERS_OPTION end
    (62) end_rule -> . END rules

    COMMA           shift and go to state 37
    END             shift and go to state 39
    OPTION          shift and go to state 35

    end                            shift and go to state 34
    end_rule                       shift and go to state 36
    user_option                    shift and go to state 38

state 27

    (2) begin -> TASKS COLON task_node USERS COLON user_node .
    (3) begin -> TASKS COLON task_node USERS COLON user_node . rules
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . AUTHORISED COLON authorised_pair
    (9) rules -> . EXECUTION COLON fork

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
  ! shift/reduce conflict for EXECUTION resolved as shift
    $end            reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .)
    USERS           reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .)
    BEFORE          shift and go to state 46
    BOD             shift and go to state 45
    SOD             shift and go to state 41
    SENIORITY       shift and go to state 43
    AUTHORISED      shift and go to state 42
    EXECUTION       shift and go to state 44

  ! BEFORE          [ reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .) ]
  ! BOD             [ reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .) ]
  ! SOD             [ reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .) ]
  ! SENIORITY       [ reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .) ]
  ! AUTHORISED      [ reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .) ]
  ! EXECUTION       [ reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .) ]

    rules                          shift and go to state 40

state 28

    (39) task_option -> OPTION option_flag COMMA task_node .

    USERS           reduce using rule 39 (task_option -> OPTION option_flag COMMA task_node .)


state 29

    (44) op -> GEQ . NODE

    NODE            shift and go to state 47


state 30

    (45) op -> LEQ . NODE

    NODE            shift and go to state 48


state 31

    (46) op -> NEQ . NODE

    NODE            shift and go to state 49


state 32

    (43) op -> EQ . NODE

    NODE            shift and go to state 50


state 33

    (35) variable_task_option -> OPTION variable_option_flag COLON op . variable_task_option
    (36) variable_task_option -> OPTION variable_option_flag COLON op . COMMA task_node
    (37) variable_task_option -> OPTION variable_option_flag COLON op . end
    (35) variable_task_option -> . OPTION variable_option_flag COLON op variable_task_option
    (36) variable_task_option -> . OPTION variable_option_flag COLON op COMMA task_node
    (37) variable_task_option -> . OPTION variable_option_flag COLON op end
    (60) end -> . END
    (61) end -> . END begin

    COMMA           shift and go to state 54
    OPTION          shift and go to state 52
    END             shift and go to state 12

    end                            shift and go to state 53
    variable_task_option           shift and go to state 51

state 34

    (31) user_node -> NODE end .

    USERS           reduce using rule 31 (user_node -> NODE end .)
    BEFORE          reduce using rule 31 (user_node -> NODE end .)
    BOD             reduce using rule 31 (user_node -> NODE end .)
    SOD             reduce using rule 31 (user_node -> NODE end .)
    SENIORITY       reduce using rule 31 (user_node -> NODE end .)
    AUTHORISED      reduce using rule 31 (user_node -> NODE end .)
    EXECUTION       reduce using rule 31 (user_node -> NODE end .)
    $end            reduce using rule 31 (user_node -> NODE end .)


state 35

    (55) user_option -> OPTION . USERS_OPTION user_option
    (56) user_option -> OPTION . USERS_OPTION COMMA
    (57) user_option -> OPTION . USERS_OPTION COLON users_global_option
    (58) user_option -> OPTION . USERS_OPTION end

    USERS_OPTION    shift and go to state 55


state 36

    (34) user_node -> NODE end_rule .

    USERS           reduce using rule 34 (user_node -> NODE end_rule .)
    BEFORE          reduce using rule 34 (user_node -> NODE end_rule .)
    BOD             reduce using rule 34 (user_node -> NODE end_rule .)
    SOD             reduce using rule 34 (user_node -> NODE end_rule .)
    SENIORITY       reduce using rule 34 (user_node -> NODE end_rule .)
    AUTHORISED      reduce using rule 34 (user_node -> NODE end_rule .)
    EXECUTION       reduce using rule 34 (user_node -> NODE end_rule .)
    $end            reduce using rule 34 (user_node -> NODE end_rule .)


state 37

    (32) user_node -> NODE COMMA . user_node
    (31) user_node -> . NODE end
    (32) user_node -> . NODE COMMA user_node
    (33) user_node -> . NODE user_option
    (34) user_node -> . NODE end_rule

    NODE            shift and go to state 26

    user_node                      shift and go to state 56

state 38

    (33) user_node -> NODE user_option .

    USERS           reduce using rule 33 (user_node -> NODE user_option .)
    BEFORE          reduce using rule 33 (user_node -> NODE user_option .)
    BOD             reduce using rule 33 (user_node -> NODE user_option .)
    SOD             reduce using rule 33 (user_node -> NODE user_option .)
    SENIORITY       reduce using rule 33 (user_node -> NODE user_option .)
    AUTHORISED      reduce using rule 33 (user_node -> NODE user_option .)
    EXECUTION       reduce using rule 33 (user_node -> NODE user_option .)
    $end            reduce using rule 33 (user_node -> NODE user_option .)


state 39

    (60) end -> END .
    (61) end -> END . begin
    (62) end_rule -> END . rules
    (2) begin -> . TASKS COLON task_node USERS COLON user_node
    (3) begin -> . TASKS COLON task_node USERS COLON user_node rules
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . AUTHORISED COLON authorised_pair
    (9) rules -> . EXECUTION COLON fork

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
  ! shift/reduce conflict for EXECUTION resolved as shift
    USERS           reduce using rule 60 (end -> END .)
    $end            reduce using rule 60 (end -> END .)
    TASKS           shift and go to state 2
    BEFORE          shift and go to state 46
    BOD             shift and go to state 45
    SOD             shift and go to state 41
    SENIORITY       shift and go to state 43
    AUTHORISED      shift and go to state 42
    EXECUTION       shift and go to state 44

  ! BEFORE          [ reduce using rule 60 (end -> END .) ]
  ! BOD             [ reduce using rule 60 (end -> END .) ]
  ! SOD             [ reduce using rule 60 (end -> END .) ]
  ! SENIORITY       [ reduce using rule 60 (end -> END .) ]
  ! AUTHORISED      [ reduce using rule 60 (end -> END .) ]
  ! EXECUTION       [ reduce using rule 60 (end -> END .) ]

    begin                          shift and go to state 19
    rules                          shift and go to state 57

state 40

    (3) begin -> TASKS COLON task_node USERS COLON user_node rules .

    $end            reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    USERS           reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    BEFORE          reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    BOD             reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    SOD             reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    SENIORITY       reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    AUTHORISED      reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    EXECUTION       reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)


state 41

    (6) rules -> SOD . COLON sod_task_node_pair

    COLON           shift and go to state 58


state 42

    (8) rules -> AUTHORISED . COLON authorised_pair

    COLON           shift and go to state 59


state 43

    (7) rules -> SENIORITY . COLON user_node_pair

    COLON           shift and go to state 60


state 44

    (9) rules -> EXECUTION . COLON fork

    COLON           shift and go to state 61


state 45

    (5) rules -> BOD . COLON bod_task_node_pair

    COLON           shift and go to state 62


state 46

    (4) rules -> BEFORE . COLON before_task_node_pair

    COLON           shift and go to state 63


state 47

    (44) op -> GEQ NODE .

    COMMA           reduce using rule 44 (op -> GEQ NODE .)
    OPTION          reduce using rule 44 (op -> GEQ NODE .)
    END             reduce using rule 44 (op -> GEQ NODE .)


state 48

    (45) op -> LEQ NODE .

    COMMA           reduce using rule 45 (op -> LEQ NODE .)
    OPTION          reduce using rule 45 (op -> LEQ NODE .)
    END             reduce using rule 45 (op -> LEQ NODE .)


state 49

    (46) op -> NEQ NODE .

    COMMA           reduce using rule 46 (op -> NEQ NODE .)
    OPTION          reduce using rule 46 (op -> NEQ NODE .)
    END             reduce using rule 46 (op -> NEQ NODE .)


state 50

    (43) op -> EQ NODE .

    COMMA           reduce using rule 43 (op -> EQ NODE .)
    OPTION          reduce using rule 43 (op -> EQ NODE .)
    END             reduce using rule 43 (op -> EQ NODE .)


state 51

    (35) variable_task_option -> OPTION variable_option_flag COLON op variable_task_option .

    USERS           reduce using rule 35 (variable_task_option -> OPTION variable_option_flag COLON op variable_task_option .)


state 52

    (35) variable_task_option -> OPTION . variable_option_flag COLON op variable_task_option
    (36) variable_task_option -> OPTION . variable_option_flag COLON op COMMA task_node
    (37) variable_task_option -> OPTION . variable_option_flag COLON op end
    (41) variable_option_flag -> . MIN_SEC_LV

    MIN_SEC_LV      shift and go to state 17

    variable_option_flag           shift and go to state 16

state 53

    (37) variable_task_option -> OPTION variable_option_flag COLON op end .

    USERS           reduce using rule 37 (variable_task_option -> OPTION variable_option_flag COLON op end .)


state 54

    (36) variable_task_option -> OPTION variable_option_flag COLON op COMMA . task_node
    (27) task_node -> . NODE end
    (28) task_node -> . NODE COMMA task_node
    (29) task_node -> . NODE variable_task_option
    (30) task_node -> . NODE task_option

    NODE            shift and go to state 5

    task_node                      shift and go to state 64

state 55

    (55) user_option -> OPTION USERS_OPTION . user_option
    (56) user_option -> OPTION USERS_OPTION . COMMA
    (57) user_option -> OPTION USERS_OPTION . COLON users_global_option
    (58) user_option -> OPTION USERS_OPTION . end
    (55) user_option -> . OPTION USERS_OPTION user_option
    (56) user_option -> . OPTION USERS_OPTION COMMA
    (57) user_option -> . OPTION USERS_OPTION COLON users_global_option
    (58) user_option -> . OPTION USERS_OPTION end
    (60) end -> . END
    (61) end -> . END begin

    COMMA           shift and go to state 67
    COLON           shift and go to state 68
    OPTION          shift and go to state 35
    END             shift and go to state 12

    end                            shift and go to state 65
    user_option                    shift and go to state 66

state 56

    (32) user_node -> NODE COMMA user_node .

    USERS           reduce using rule 32 (user_node -> NODE COMMA user_node .)
    BEFORE          reduce using rule 32 (user_node -> NODE COMMA user_node .)
    BOD             reduce using rule 32 (user_node -> NODE COMMA user_node .)
    SOD             reduce using rule 32 (user_node -> NODE COMMA user_node .)
    SENIORITY       reduce using rule 32 (user_node -> NODE COMMA user_node .)
    AUTHORISED      reduce using rule 32 (user_node -> NODE COMMA user_node .)
    EXECUTION       reduce using rule 32 (user_node -> NODE COMMA user_node .)
    $end            reduce using rule 32 (user_node -> NODE COMMA user_node .)


state 57

    (62) end_rule -> END rules .

    USERS           reduce using rule 62 (end_rule -> END rules .)
    BEFORE          reduce using rule 62 (end_rule -> END rules .)
    BOD             reduce using rule 62 (end_rule -> END rules .)
    SOD             reduce using rule 62 (end_rule -> END rules .)
    SENIORITY       reduce using rule 62 (end_rule -> END rules .)
    AUTHORISED      reduce using rule 62 (end_rule -> END rules .)
    EXECUTION       reduce using rule 62 (end_rule -> END rules .)
    $end            reduce using rule 62 (end_rule -> END rules .)


state 58

    (6) rules -> SOD COLON . sod_task_node_pair
    (16) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (17) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair
    (18) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 70

    sod_task_node_pair             shift and go to state 69

state 59

    (8) rules -> AUTHORISED COLON . authorised_pair
    (22) authorised_pair -> . LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules
    (23) authorised_pair -> . LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair
    (24) authorised_pair -> . LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END

    LPAREN          shift and go to state 72

    authorised_pair                shift and go to state 71

state 60

    (7) rules -> SENIORITY COLON . user_node_pair
    (19) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (20) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair
    (21) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 74

    user_node_pair                 shift and go to state 73

state 61

    (9) rules -> EXECUTION COLON . fork
    (47) fork -> . OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (48) fork -> . OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (49) fork -> . OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END
    (50) fork -> . XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (51) fork -> . XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (52) fork -> . XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END

    OR              shift and go to state 77
    XOR             shift and go to state 76

    fork                           shift and go to state 75

state 62

    (5) rules -> BOD COLON . bod_task_node_pair
    (13) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (14) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair
    (15) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 78

    bod_task_node_pair             shift and go to state 79

state 63

    (4) rules -> BEFORE COLON . before_task_node_pair
    (10) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (11) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair
    (12) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 81

    before_task_node_pair          shift and go to state 80

state 64

    (36) variable_task_option -> OPTION variable_option_flag COLON op COMMA task_node .

    USERS           reduce using rule 36 (variable_task_option -> OPTION variable_option_flag COLON op COMMA task_node .)


state 65

    (58) user_option -> OPTION USERS_OPTION end .

    USERS           reduce using rule 58 (user_option -> OPTION USERS_OPTION end .)
    BEFORE          reduce using rule 58 (user_option -> OPTION USERS_OPTION end .)
    BOD             reduce using rule 58 (user_option -> OPTION USERS_OPTION end .)
    SOD             reduce using rule 58 (user_option -> OPTION USERS_OPTION end .)
    SENIORITY       reduce using rule 58 (user_option -> OPTION USERS_OPTION end .)
    AUTHORISED      reduce using rule 58 (user_option -> OPTION USERS_OPTION end .)
    EXECUTION       reduce using rule 58 (user_option -> OPTION USERS_OPTION end .)
    $end            reduce using rule 58 (user_option -> OPTION USERS_OPTION end .)


state 66

    (55) user_option -> OPTION USERS_OPTION user_option .

    USERS           reduce using rule 55 (user_option -> OPTION USERS_OPTION user_option .)
    BEFORE          reduce using rule 55 (user_option -> OPTION USERS_OPTION user_option .)
    BOD             reduce using rule 55 (user_option -> OPTION USERS_OPTION user_option .)
    SOD             reduce using rule 55 (user_option -> OPTION USERS_OPTION user_option .)
    SENIORITY       reduce using rule 55 (user_option -> OPTION USERS_OPTION user_option .)
    AUTHORISED      reduce using rule 55 (user_option -> OPTION USERS_OPTION user_option .)
    EXECUTION       reduce using rule 55 (user_option -> OPTION USERS_OPTION user_option .)
    $end            reduce using rule 55 (user_option -> OPTION USERS_OPTION user_option .)


state 67

    (56) user_option -> OPTION USERS_OPTION COMMA .

    USERS           reduce using rule 56 (user_option -> OPTION USERS_OPTION COMMA .)
    BEFORE          reduce using rule 56 (user_option -> OPTION USERS_OPTION COMMA .)
    BOD             reduce using rule 56 (user_option -> OPTION USERS_OPTION COMMA .)
    SOD             reduce using rule 56 (user_option -> OPTION USERS_OPTION COMMA .)
    SENIORITY       reduce using rule 56 (user_option -> OPTION USERS_OPTION COMMA .)
    AUTHORISED      reduce using rule 56 (user_option -> OPTION USERS_OPTION COMMA .)
    EXECUTION       reduce using rule 56 (user_option -> OPTION USERS_OPTION COMMA .)
    $end            reduce using rule 56 (user_option -> OPTION USERS_OPTION COMMA .)


state 68

    (57) user_option -> OPTION USERS_OPTION COLON . users_global_option
    (59) users_global_option -> . ALLOCATE end_rule

    ALLOCATE        shift and go to state 83

    users_global_option            shift and go to state 82

state 69

    (6) rules -> SOD COLON sod_task_node_pair .

    USERS           reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    BEFORE          reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    BOD             reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    SOD             reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    SENIORITY       reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    AUTHORISED      reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    EXECUTION       reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    $end            reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)


state 70

    (16) sod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END rules
    (17) sod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA sod_task_node_pair
    (18) sod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END

    NODE            shift and go to state 84


state 71

    (8) rules -> AUTHORISED COLON authorised_pair .

    USERS           reduce using rule 8 (rules -> AUTHORISED COLON authorised_pair .)
    BEFORE          reduce using rule 8 (rules -> AUTHORISED COLON authorised_pair .)
    BOD             reduce using rule 8 (rules -> AUTHORISED COLON authorised_pair .)
    SOD             reduce using rule 8 (rules -> AUTHORISED COLON authorised_pair .)
    SENIORITY       reduce using rule 8 (rules -> AUTHORISED COLON authorised_pair .)
    AUTHORISED      reduce using rule 8 (rules -> AUTHORISED COLON authorised_pair .)
    EXECUTION       reduce using rule 8 (rules -> AUTHORISED COLON authorised_pair .)
    $end            reduce using rule 8 (rules -> AUTHORISED COLON authorised_pair .)


state 72

    (22) authorised_pair -> LPAREN . NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules
    (23) authorised_pair -> LPAREN . NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair
    (24) authorised_pair -> LPAREN . NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END

    NODE            shift and go to state 85


state 73

    (7) rules -> SENIORITY COLON user_node_pair .

    USERS           reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    BEFORE          reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    BOD             reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    SOD             reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    SENIORITY       reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    AUTHORISED      reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    EXECUTION       reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    $end            reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)


state 74

    (19) user_node_pair -> LPAREN . NODE COMMA NODE RPAREN END rules
    (20) user_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA user_node_pair
    (21) user_node_pair -> LPAREN . NODE COMMA NODE RPAREN END

    NODE            shift and go to state 86


state 75

    (9) rules -> EXECUTION COLON fork .

    USERS           reduce using rule 9 (rules -> EXECUTION COLON fork .)
    BEFORE          reduce using rule 9 (rules -> EXECUTION COLON fork .)
    BOD             reduce using rule 9 (rules -> EXECUTION COLON fork .)
    SOD             reduce using rule 9 (rules -> EXECUTION COLON fork .)
    SENIORITY       reduce using rule 9 (rules -> EXECUTION COLON fork .)
    AUTHORISED      reduce using rule 9 (rules -> EXECUTION COLON fork .)
    EXECUTION       reduce using rule 9 (rules -> EXECUTION COLON fork .)
    $end            reduce using rule 9 (rules -> EXECUTION COLON fork .)


state 76

    (50) fork -> XOR . LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (51) fork -> XOR . LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (52) fork -> XOR . LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END

    LPAREN          shift and go to state 87


state 77

    (47) fork -> OR . LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (48) fork -> OR . LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (49) fork -> OR . LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END

    LPAREN          shift and go to state 88


state 78

    (13) bod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END rules
    (14) bod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA bod_task_node_pair
    (15) bod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END

    NODE            shift and go to state 89


state 79

    (5) rules -> BOD COLON bod_task_node_pair .

    USERS           reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    BEFORE          reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    BOD             reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    SOD             reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    SENIORITY       reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    AUTHORISED      reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    EXECUTION       reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    $end            reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)


state 80

    (4) rules -> BEFORE COLON before_task_node_pair .

    USERS           reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    BEFORE          reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    BOD             reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    SOD             reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    SENIORITY       reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    AUTHORISED      reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    EXECUTION       reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    $end            reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)


state 81

    (10) before_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END rules
    (11) before_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA before_task_node_pair
    (12) before_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END

    NODE            shift and go to state 90


state 82

    (57) user_option -> OPTION USERS_OPTION COLON users_global_option .

    USERS           reduce using rule 57 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    BEFORE          reduce using rule 57 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    BOD             reduce using rule 57 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    SOD             reduce using rule 57 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    SENIORITY       reduce using rule 57 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    AUTHORISED      reduce using rule 57 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    EXECUTION       reduce using rule 57 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    $end            reduce using rule 57 (user_option -> OPTION USERS_OPTION COLON users_global_option .)


state 83

    (59) users_global_option -> ALLOCATE . end_rule
    (62) end_rule -> . END rules

    END             shift and go to state 92

    end_rule                       shift and go to state 91

state 84

    (16) sod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END rules
    (17) sod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA sod_task_node_pair
    (18) sod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END

    COMMA           shift and go to state 93


state 85

    (22) authorised_pair -> LPAREN NODE . COMMA LSQPAREN user_list RSQPAREN RPAREN END rules
    (23) authorised_pair -> LPAREN NODE . COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair
    (24) authorised_pair -> LPAREN NODE . COMMA LSQPAREN user_list RSQPAREN RPAREN END

    COMMA           shift and go to state 94


state 86

    (19) user_node_pair -> LPAREN NODE . COMMA NODE RPAREN END rules
    (20) user_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA user_node_pair
    (21) user_node_pair -> LPAREN NODE . COMMA NODE RPAREN END

    COMMA           shift and go to state 95


state 87

    (50) fork -> XOR LPAREN . NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (51) fork -> XOR LPAREN . NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (52) fork -> XOR LPAREN . NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END

    NODE            shift and go to state 96


state 88

    (47) fork -> OR LPAREN . NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (48) fork -> OR LPAREN . NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (49) fork -> OR LPAREN . NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END

    NODE            shift and go to state 97


state 89

    (13) bod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END rules
    (14) bod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA bod_task_node_pair
    (15) bod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END

    COMMA           shift and go to state 98


state 90

    (10) before_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END rules
    (11) before_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA before_task_node_pair
    (12) before_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END

    COMMA           shift and go to state 99


state 91

    (59) users_global_option -> ALLOCATE end_rule .

    USERS           reduce using rule 59 (users_global_option -> ALLOCATE end_rule .)
    BEFORE          reduce using rule 59 (users_global_option -> ALLOCATE end_rule .)
    BOD             reduce using rule 59 (users_global_option -> ALLOCATE end_rule .)
    SOD             reduce using rule 59 (users_global_option -> ALLOCATE end_rule .)
    SENIORITY       reduce using rule 59 (users_global_option -> ALLOCATE end_rule .)
    AUTHORISED      reduce using rule 59 (users_global_option -> ALLOCATE end_rule .)
    EXECUTION       reduce using rule 59 (users_global_option -> ALLOCATE end_rule .)
    $end            reduce using rule 59 (users_global_option -> ALLOCATE end_rule .)


state 92

    (62) end_rule -> END . rules
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . AUTHORISED COLON authorised_pair
    (9) rules -> . EXECUTION COLON fork

    BEFORE          shift and go to state 46
    BOD             shift and go to state 45
    SOD             shift and go to state 41
    SENIORITY       shift and go to state 43
    AUTHORISED      shift and go to state 42
    EXECUTION       shift and go to state 44

    rules                          shift and go to state 57

state 93

    (16) sod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END rules
    (17) sod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA sod_task_node_pair
    (18) sod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END

    NODE            shift and go to state 100


state 94

    (22) authorised_pair -> LPAREN NODE COMMA . LSQPAREN user_list RSQPAREN RPAREN END rules
    (23) authorised_pair -> LPAREN NODE COMMA . LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair
    (24) authorised_pair -> LPAREN NODE COMMA . LSQPAREN user_list RSQPAREN RPAREN END

    LSQPAREN        shift and go to state 101


state 95

    (19) user_node_pair -> LPAREN NODE COMMA . NODE RPAREN END rules
    (20) user_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA user_node_pair
    (21) user_node_pair -> LPAREN NODE COMMA . NODE RPAREN END

    NODE            shift and go to state 102


state 96

    (50) fork -> XOR LPAREN NODE . COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (51) fork -> XOR LPAREN NODE . COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (52) fork -> XOR LPAREN NODE . COMMA LSQPAREN task_list RSQPAREN RPAREN END

    COMMA           shift and go to state 103


state 97

    (47) fork -> OR LPAREN NODE . COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (48) fork -> OR LPAREN NODE . COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (49) fork -> OR LPAREN NODE . COMMA LSQPAREN task_list RSQPAREN RPAREN END

    COMMA           shift and go to state 104


state 98

    (13) bod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END rules
    (14) bod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA bod_task_node_pair
    (15) bod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END

    NODE            shift and go to state 105


state 99

    (10) before_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END rules
    (11) before_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA before_task_node_pair
    (12) before_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END

    NODE            shift and go to state 106


state 100

    (16) sod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END rules
    (17) sod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA sod_task_node_pair
    (18) sod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END

    RPAREN          shift and go to state 107


state 101

    (22) authorised_pair -> LPAREN NODE COMMA LSQPAREN . user_list RSQPAREN RPAREN END rules
    (23) authorised_pair -> LPAREN NODE COMMA LSQPAREN . user_list RSQPAREN RPAREN COMMA authorised_pair
    (24) authorised_pair -> LPAREN NODE COMMA LSQPAREN . user_list RSQPAREN RPAREN END
    (25) user_list -> . NODE COMMA user_list
    (26) user_list -> . NODE

    NODE            shift and go to state 108

    user_list                      shift and go to state 109

state 102

    (19) user_node_pair -> LPAREN NODE COMMA NODE . RPAREN END rules
    (20) user_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA user_node_pair
    (21) user_node_pair -> LPAREN NODE COMMA NODE . RPAREN END

    RPAREN          shift and go to state 110


state 103

    (50) fork -> XOR LPAREN NODE COMMA . LSQPAREN task_list RSQPAREN RPAREN END rules
    (51) fork -> XOR LPAREN NODE COMMA . LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (52) fork -> XOR LPAREN NODE COMMA . LSQPAREN task_list RSQPAREN RPAREN END

    LSQPAREN        shift and go to state 111


state 104

    (47) fork -> OR LPAREN NODE COMMA . LSQPAREN task_list RSQPAREN RPAREN END rules
    (48) fork -> OR LPAREN NODE COMMA . LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (49) fork -> OR LPAREN NODE COMMA . LSQPAREN task_list RSQPAREN RPAREN END

    LSQPAREN        shift and go to state 112


state 105

    (13) bod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END rules
    (14) bod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA bod_task_node_pair
    (15) bod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END

    RPAREN          shift and go to state 113


state 106

    (10) before_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END rules
    (11) before_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA before_task_node_pair
    (12) before_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END

    RPAREN          shift and go to state 114


state 107

    (16) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END rules
    (17) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA sod_task_node_pair
    (18) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END

    END             shift and go to state 116
    COMMA           shift and go to state 115


state 108

    (25) user_list -> NODE . COMMA user_list
    (26) user_list -> NODE .

    COMMA           shift and go to state 117
    RSQPAREN        reduce using rule 26 (user_list -> NODE .)


state 109

    (22) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list . RSQPAREN RPAREN END rules
    (23) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list . RSQPAREN RPAREN COMMA authorised_pair
    (24) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list . RSQPAREN RPAREN END

    RSQPAREN        shift and go to state 118


state 110

    (19) user_node_pair -> LPAREN NODE COMMA NODE RPAREN . END rules
    (20) user_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA user_node_pair
    (21) user_node_pair -> LPAREN NODE COMMA NODE RPAREN . END

    END             shift and go to state 120
    COMMA           shift and go to state 119


state 111

    (50) fork -> XOR LPAREN NODE COMMA LSQPAREN . task_list RSQPAREN RPAREN END rules
    (51) fork -> XOR LPAREN NODE COMMA LSQPAREN . task_list RSQPAREN RPAREN COMMA fork
    (52) fork -> XOR LPAREN NODE COMMA LSQPAREN . task_list RSQPAREN RPAREN END
    (53) task_list -> . NODE COMMA task_list
    (54) task_list -> . NODE

    NODE            shift and go to state 121

    task_list                      shift and go to state 122

state 112

    (47) fork -> OR LPAREN NODE COMMA LSQPAREN . task_list RSQPAREN RPAREN END rules
    (48) fork -> OR LPAREN NODE COMMA LSQPAREN . task_list RSQPAREN RPAREN COMMA fork
    (49) fork -> OR LPAREN NODE COMMA LSQPAREN . task_list RSQPAREN RPAREN END
    (53) task_list -> . NODE COMMA task_list
    (54) task_list -> . NODE

    NODE            shift and go to state 121

    task_list                      shift and go to state 123

state 113

    (13) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END rules
    (14) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA bod_task_node_pair
    (15) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END

    END             shift and go to state 125
    COMMA           shift and go to state 124


state 114

    (10) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END rules
    (11) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA before_task_node_pair
    (12) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END

    END             shift and go to state 127
    COMMA           shift and go to state 126


state 115

    (17) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . sod_task_node_pair
    (16) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (17) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair
    (18) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 70

    sod_task_node_pair             shift and go to state 128

state 116

    (16) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END . rules
    (18) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . AUTHORISED COLON authorised_pair
    (9) rules -> . EXECUTION COLON fork

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
  ! shift/reduce conflict for EXECUTION resolved as shift
    $end            reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    USERS           reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BEFORE          shift and go to state 46
    BOD             shift and go to state 45
    SOD             shift and go to state 41
    SENIORITY       shift and go to state 43
    AUTHORISED      shift and go to state 42
    EXECUTION       shift and go to state 44

  ! BEFORE          [ reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! BOD             [ reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SOD             [ reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SENIORITY       [ reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! AUTHORISED      [ reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! EXECUTION       [ reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]

    rules                          shift and go to state 129

state 117

    (25) user_list -> NODE COMMA . user_list
    (25) user_list -> . NODE COMMA user_list
    (26) user_list -> . NODE

    NODE            shift and go to state 108

    user_list                      shift and go to state 130

state 118

    (22) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN . RPAREN END rules
    (23) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN . RPAREN COMMA authorised_pair
    (24) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN . RPAREN END

    RPAREN          shift and go to state 131


state 119

    (20) user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . user_node_pair
    (19) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (20) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair
    (21) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 74

    user_node_pair                 shift and go to state 132

state 120

    (19) user_node_pair -> LPAREN NODE COMMA NODE RPAREN END . rules
    (21) user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . AUTHORISED COLON authorised_pair
    (9) rules -> . EXECUTION COLON fork

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
  ! shift/reduce conflict for EXECUTION resolved as shift
    $end            reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    USERS           reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BEFORE          shift and go to state 46
    BOD             shift and go to state 45
    SOD             shift and go to state 41
    SENIORITY       shift and go to state 43
    AUTHORISED      shift and go to state 42
    EXECUTION       shift and go to state 44

  ! BEFORE          [ reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! BOD             [ reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SOD             [ reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SENIORITY       [ reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! AUTHORISED      [ reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! EXECUTION       [ reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]

    rules                          shift and go to state 133

state 121

    (53) task_list -> NODE . COMMA task_list
    (54) task_list -> NODE .

    COMMA           shift and go to state 134
    RSQPAREN        reduce using rule 54 (task_list -> NODE .)


state 122

    (50) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list . RSQPAREN RPAREN END rules
    (51) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list . RSQPAREN RPAREN COMMA fork
    (52) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list . RSQPAREN RPAREN END

    RSQPAREN        shift and go to state 135


state 123

    (47) fork -> OR LPAREN NODE COMMA LSQPAREN task_list . RSQPAREN RPAREN END rules
    (48) fork -> OR LPAREN NODE COMMA LSQPAREN task_list . RSQPAREN RPAREN COMMA fork
    (49) fork -> OR LPAREN NODE COMMA LSQPAREN task_list . RSQPAREN RPAREN END

    RSQPAREN        shift and go to state 136


state 124

    (14) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . bod_task_node_pair
    (13) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (14) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair
    (15) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 78

    bod_task_node_pair             shift and go to state 137

state 125

    (13) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END . rules
    (15) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . AUTHORISED COLON authorised_pair
    (9) rules -> . EXECUTION COLON fork

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
  ! shift/reduce conflict for EXECUTION resolved as shift
    $end            reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    USERS           reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BEFORE          shift and go to state 46
    BOD             shift and go to state 45
    SOD             shift and go to state 41
    SENIORITY       shift and go to state 43
    AUTHORISED      shift and go to state 42
    EXECUTION       shift and go to state 44

  ! BEFORE          [ reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! BOD             [ reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SOD             [ reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SENIORITY       [ reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! AUTHORISED      [ reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! EXECUTION       [ reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]

    rules                          shift and go to state 138

state 126

    (11) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . before_task_node_pair
    (10) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (11) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair
    (12) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 81

    before_task_node_pair          shift and go to state 139

state 127

    (10) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END . rules
    (12) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . AUTHORISED COLON authorised_pair
    (9) rules -> . EXECUTION COLON fork

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
  ! shift/reduce conflict for EXECUTION resolved as shift
    $end            reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    USERS           reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BEFORE          shift and go to state 46
    BOD             shift and go to state 45
    SOD             shift and go to state 41
    SENIORITY       shift and go to state 43
    AUTHORISED      shift and go to state 42
    EXECUTION       shift and go to state 44

  ! BEFORE          [ reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! BOD             [ reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SOD             [ reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SENIORITY       [ reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! AUTHORISED      [ reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! EXECUTION       [ reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]

    rules                          shift and go to state 140

state 128

    (17) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .

    $end            reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    USERS           reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    BEFORE          reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    BOD             reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    SOD             reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    SENIORITY       reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    AUTHORISED      reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    EXECUTION       reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)


state 129

    (16) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .

    $end            reduce using rule 16 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    USERS           reduce using rule 16 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BEFORE          reduce using rule 16 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BOD             reduce using rule 16 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SOD             reduce using rule 16 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SENIORITY       reduce using rule 16 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    AUTHORISED      reduce using rule 16 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    EXECUTION       reduce using rule 16 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)


state 130

    (25) user_list -> NODE COMMA user_list .

    RSQPAREN        reduce using rule 25 (user_list -> NODE COMMA user_list .)


state 131

    (22) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN . END rules
    (23) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN . COMMA authorised_pair
    (24) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN . END

    END             shift and go to state 142
    COMMA           shift and go to state 141


state 132

    (20) user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .

    $end            reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    USERS           reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    BEFORE          reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    BOD             reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    SOD             reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    SENIORITY       reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    AUTHORISED      reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    EXECUTION       reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)


state 133

    (19) user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .

    $end            reduce using rule 19 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    USERS           reduce using rule 19 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BEFORE          reduce using rule 19 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BOD             reduce using rule 19 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SOD             reduce using rule 19 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SENIORITY       reduce using rule 19 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    AUTHORISED      reduce using rule 19 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    EXECUTION       reduce using rule 19 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)


state 134

    (53) task_list -> NODE COMMA . task_list
    (53) task_list -> . NODE COMMA task_list
    (54) task_list -> . NODE

    NODE            shift and go to state 121

    task_list                      shift and go to state 143

state 135

    (50) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN . RPAREN END rules
    (51) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN . RPAREN COMMA fork
    (52) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN . RPAREN END

    RPAREN          shift and go to state 144


state 136

    (47) fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN . RPAREN END rules
    (48) fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN . RPAREN COMMA fork
    (49) fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN . RPAREN END

    RPAREN          shift and go to state 145


state 137

    (14) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .

    $end            reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    USERS           reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    BEFORE          reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    BOD             reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    SOD             reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    SENIORITY       reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    AUTHORISED      reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    EXECUTION       reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)


state 138

    (13) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .

    $end            reduce using rule 13 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    USERS           reduce using rule 13 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BEFORE          reduce using rule 13 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BOD             reduce using rule 13 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SOD             reduce using rule 13 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SENIORITY       reduce using rule 13 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    AUTHORISED      reduce using rule 13 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    EXECUTION       reduce using rule 13 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)


state 139

    (11) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .

    $end            reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    USERS           reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    BEFORE          reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    BOD             reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    SOD             reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    SENIORITY       reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    AUTHORISED      reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    EXECUTION       reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)


state 140

    (10) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .

    $end            reduce using rule 10 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    USERS           reduce using rule 10 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BEFORE          reduce using rule 10 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BOD             reduce using rule 10 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SOD             reduce using rule 10 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SENIORITY       reduce using rule 10 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    AUTHORISED      reduce using rule 10 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    EXECUTION       reduce using rule 10 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)


state 141

    (23) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA . authorised_pair
    (22) authorised_pair -> . LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules
    (23) authorised_pair -> . LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair
    (24) authorised_pair -> . LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END

    LPAREN          shift and go to state 72

    authorised_pair                shift and go to state 146

state 142

    (22) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END . rules
    (24) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . AUTHORISED COLON authorised_pair
    (9) rules -> . EXECUTION COLON fork

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
  ! shift/reduce conflict for EXECUTION resolved as shift
    $end            reduce using rule 24 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .)
    USERS           reduce using rule 24 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .)
    BEFORE          shift and go to state 46
    BOD             shift and go to state 45
    SOD             shift and go to state 41
    SENIORITY       shift and go to state 43
    AUTHORISED      shift and go to state 42
    EXECUTION       shift and go to state 44

  ! BEFORE          [ reduce using rule 24 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .) ]
  ! BOD             [ reduce using rule 24 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .) ]
  ! SOD             [ reduce using rule 24 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .) ]
  ! SENIORITY       [ reduce using rule 24 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .) ]
  ! AUTHORISED      [ reduce using rule 24 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .) ]
  ! EXECUTION       [ reduce using rule 24 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .) ]

    rules                          shift and go to state 147

state 143

    (53) task_list -> NODE COMMA task_list .

    RSQPAREN        reduce using rule 53 (task_list -> NODE COMMA task_list .)


state 144

    (50) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN . END rules
    (51) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN . COMMA fork
    (52) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN . END

    END             shift and go to state 149
    COMMA           shift and go to state 148


state 145

    (47) fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN . END rules
    (48) fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN . COMMA fork
    (49) fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN . END

    END             shift and go to state 151
    COMMA           shift and go to state 150


state 146

    (23) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .

    $end            reduce using rule 23 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)
    USERS           reduce using rule 23 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)
    BEFORE          reduce using rule 23 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)
    BOD             reduce using rule 23 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)
    SOD             reduce using rule 23 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)
    SENIORITY       reduce using rule 23 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)
    AUTHORISED      reduce using rule 23 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)
    EXECUTION       reduce using rule 23 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)


state 147

    (22) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .

    $end            reduce using rule 22 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)
    USERS           reduce using rule 22 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)
    BEFORE          reduce using rule 22 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)
    BOD             reduce using rule 22 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)
    SOD             reduce using rule 22 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)
    SENIORITY       reduce using rule 22 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)
    AUTHORISED      reduce using rule 22 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)
    EXECUTION       reduce using rule 22 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)


state 148

    (51) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA . fork
    (47) fork -> . OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (48) fork -> . OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (49) fork -> . OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END
    (50) fork -> . XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (51) fork -> . XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (52) fork -> . XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END

    OR              shift and go to state 77
    XOR             shift and go to state 76

    fork                           shift and go to state 152

state 149

    (50) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END . rules
    (52) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . AUTHORISED COLON authorised_pair
    (9) rules -> . EXECUTION COLON fork

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
  ! shift/reduce conflict for EXECUTION resolved as shift
    $end            reduce using rule 52 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .)
    USERS           reduce using rule 52 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .)
    BEFORE          shift and go to state 46
    BOD             shift and go to state 45
    SOD             shift and go to state 41
    SENIORITY       shift and go to state 43
    AUTHORISED      shift and go to state 42
    EXECUTION       shift and go to state 44

  ! BEFORE          [ reduce using rule 52 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]
  ! BOD             [ reduce using rule 52 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]
  ! SOD             [ reduce using rule 52 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]
  ! SENIORITY       [ reduce using rule 52 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]
  ! AUTHORISED      [ reduce using rule 52 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]
  ! EXECUTION       [ reduce using rule 52 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]

    rules                          shift and go to state 153

state 150

    (48) fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA . fork
    (47) fork -> . OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (48) fork -> . OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (49) fork -> . OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END
    (50) fork -> . XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (51) fork -> . XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (52) fork -> . XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END

    OR              shift and go to state 77
    XOR             shift and go to state 76

    fork                           shift and go to state 154

state 151

    (47) fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END . rules
    (49) fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . AUTHORISED COLON authorised_pair
    (9) rules -> . EXECUTION COLON fork

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
  ! shift/reduce conflict for EXECUTION resolved as shift
    $end            reduce using rule 49 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .)
    USERS           reduce using rule 49 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .)
    BEFORE          shift and go to state 46
    BOD             shift and go to state 45
    SOD             shift and go to state 41
    SENIORITY       shift and go to state 43
    AUTHORISED      shift and go to state 42
    EXECUTION       shift and go to state 44

  ! BEFORE          [ reduce using rule 49 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]
  ! BOD             [ reduce using rule 49 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]
  ! SOD             [ reduce using rule 49 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]
  ! SENIORITY       [ reduce using rule 49 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]
  ! AUTHORISED      [ reduce using rule 49 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]
  ! EXECUTION       [ reduce using rule 49 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]

    rules                          shift and go to state 155

state 152

    (51) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .

    $end            reduce using rule 51 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    USERS           reduce using rule 51 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    BEFORE          reduce using rule 51 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    BOD             reduce using rule 51 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    SOD             reduce using rule 51 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    SENIORITY       reduce using rule 51 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    AUTHORISED      reduce using rule 51 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    EXECUTION       reduce using rule 51 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)


state 153

    (50) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .

    $end            reduce using rule 50 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    USERS           reduce using rule 50 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    BEFORE          reduce using rule 50 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    BOD             reduce using rule 50 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    SOD             reduce using rule 50 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    SENIORITY       reduce using rule 50 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    AUTHORISED      reduce using rule 50 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    EXECUTION       reduce using rule 50 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)


state 154

    (48) fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .

    $end            reduce using rule 48 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    USERS           reduce using rule 48 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    BEFORE          reduce using rule 48 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    BOD             reduce using rule 48 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    SOD             reduce using rule 48 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    SENIORITY       reduce using rule 48 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    AUTHORISED      reduce using rule 48 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    EXECUTION       reduce using rule 48 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)


state 155

    (47) fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .

    $end            reduce using rule 47 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    USERS           reduce using rule 47 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    BEFORE          reduce using rule 47 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    BOD             reduce using rule 47 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    SOD             reduce using rule 47 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    SENIORITY       reduce using rule 47 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    AUTHORISED      reduce using rule 47 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    EXECUTION       reduce using rule 47 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for BEFORE in state 27 resolved as shift
WARNING: shift/reduce conflict for BOD in state 27 resolved as shift
WARNING: shift/reduce conflict for SOD in state 27 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 27 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 27 resolved as shift
WARNING: shift/reduce conflict for EXECUTION in state 27 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 39 resolved as shift
WARNING: shift/reduce conflict for BOD in state 39 resolved as shift
WARNING: shift/reduce conflict for SOD in state 39 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 39 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 39 resolved as shift
WARNING: shift/reduce conflict for EXECUTION in state 39 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 116 resolved as shift
WARNING: shift/reduce conflict for BOD in state 116 resolved as shift
WARNING: shift/reduce conflict for SOD in state 116 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 116 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 116 resolved as shift
WARNING: shift/reduce conflict for EXECUTION in state 116 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 120 resolved as shift
WARNING: shift/reduce conflict for BOD in state 120 resolved as shift
WARNING: shift/reduce conflict for SOD in state 120 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 120 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 120 resolved as shift
WARNING: shift/reduce conflict for EXECUTION in state 120 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 125 resolved as shift
WARNING: shift/reduce conflict for BOD in state 125 resolved as shift
WARNING: shift/reduce conflict for SOD in state 125 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 125 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 125 resolved as shift
WARNING: shift/reduce conflict for EXECUTION in state 125 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 127 resolved as shift
WARNING: shift/reduce conflict for BOD in state 127 resolved as shift
WARNING: shift/reduce conflict for SOD in state 127 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 127 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 127 resolved as shift
WARNING: shift/reduce conflict for EXECUTION in state 127 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 142 resolved as shift
WARNING: shift/reduce conflict for BOD in state 142 resolved as shift
WARNING: shift/reduce conflict for SOD in state 142 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 142 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 142 resolved as shift
WARNING: shift/reduce conflict for EXECUTION in state 142 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 149 resolved as shift
WARNING: shift/reduce conflict for BOD in state 149 resolved as shift
WARNING: shift/reduce conflict for SOD in state 149 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 149 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 149 resolved as shift
WARNING: shift/reduce conflict for EXECUTION in state 149 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 151 resolved as shift
WARNING: shift/reduce conflict for BOD in state 151 resolved as shift
WARNING: shift/reduce conflict for SOD in state 151 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 151 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 151 resolved as shift
WARNING: shift/reduce conflict for EXECUTION in state 151 resolved as shift
