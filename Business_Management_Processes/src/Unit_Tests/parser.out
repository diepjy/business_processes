Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> begin
Rule 2     begin -> TASKS COLON task_node USERS COLON user_node
Rule 3     begin -> TASKS COLON task_node USERS COLON user_node rules
Rule 4     rules -> BEFORE COLON before_task_node_pair
Rule 5     rules -> BOD COLON bod_task_node_pair
Rule 6     rules -> SOD COLON sod_task_node_pair
Rule 7     rules -> SENIORITY COLON user_node_pair
Rule 8     rules -> ALLOC COLON allocation_pair
Rule 9     rules -> AUTHORISED COLON authorised_pair
Rule 10    rules -> EXECUTION COLON fork
Rule 11    before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules
Rule 12    before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair
Rule 13    before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 14    bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules
Rule 15    bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair
Rule 16    bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 17    sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules
Rule 18    sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair
Rule 19    sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 20    user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules
Rule 21    user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair
Rule 22    user_node_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 23    allocation_pair -> LPAREN NODE COMMA NODE RPAREN END rules
Rule 24    allocation_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair
Rule 25    allocation_pair -> LPAREN NODE COMMA NODE RPAREN END
Rule 26    authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules
Rule 27    authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair
Rule 28    authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END
Rule 29    user_list -> NODE COMMA user_list
Rule 30    user_list -> NODE
Rule 31    task_node -> NODE end
Rule 32    task_node -> NODE COMMA task_node
Rule 33    task_node -> NODE variable_task_option
Rule 34    task_node -> NODE task_option
Rule 35    user_node -> NODE end
Rule 36    user_node -> NODE COMMA user_node
Rule 37    user_node -> NODE user_option
Rule 38    user_node -> NODE end_rule
Rule 39    variable_task_option -> OPTION variable_option_flag COLON op variable_task_option
Rule 40    variable_task_option -> OPTION variable_option_flag COLON op COMMA task_node
Rule 41    variable_task_option -> OPTION variable_option_flag COLON op end
Rule 42    task_option -> OPTION option_flag task_option
Rule 43    task_option -> OPTION option_flag COMMA task_node
Rule 44    task_option -> OPTION option_flag end
Rule 45    variable_option_flag -> MIN_SEC_LV
Rule 46    option_flag -> START
Rule 47    op -> EQ NODE
Rule 48    op -> GEQ NODE
Rule 49    op -> LEQ NODE
Rule 50    op -> NEQ NODE
Rule 51    fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
Rule 52    fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
Rule 53    fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END
Rule 54    fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
Rule 55    fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
Rule 56    fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END
Rule 57    task_list -> NODE COMMA task_list
Rule 58    task_list -> NODE
Rule 59    user_option -> OPTION USERS_OPTION user_option
Rule 60    user_option -> OPTION USERS_OPTION COMMA
Rule 61    user_option -> OPTION USERS_OPTION COLON users_global_option
Rule 62    user_option -> OPTION USERS_OPTION end
Rule 63    users_global_option -> ALLOCATE end_rule
Rule 64    end -> END
Rule 65    end -> END begin
Rule 66    end_rule -> END rules

Terminals, with rules where they appear

ALLOC                : 8
ALLOCATE             : 63
AUTHORISED           : 9
BEFORE               : 4
BOD                  : 5
COLON                : 2 2 3 3 4 5 6 7 8 9 10 39 40 41 61
COMMA                : 11 12 12 13 14 15 15 16 17 18 18 19 20 21 21 22 23 24 24 25 26 27 27 28 29 32 36 40 43 51 52 52 53 54 55 55 56 57 60
END                  : 11 13 14 16 17 19 20 22 23 25 26 28 51 53 54 56 64 65 66
EQ                   : 47
EXECUTION            : 10
GEQ                  : 48
LEQ                  : 49
LPAREN               : 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 51 52 53 54 55 56
LSQPAREN             : 26 27 28 51 52 53 54 55 56
MIN_SEC_LV           : 45
NEQ                  : 50
NODE                 : 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 27 28 29 30 31 32 33 34 35 36 37 38 47 48 49 50 51 52 53 54 55 56 57 58
OPTION               : 39 40 41 42 43 44 59 60 61 62
OR                   : 51 52 53
RPAREN               : 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 51 52 53 54 55 56
RSQPAREN             : 26 27 28 51 52 53 54 55 56
SENIORITY            : 7
SOD                  : 6
START                : 46
TASKS                : 2 3
USERS                : 2 3
USERS_OPTION         : 59 60 61 62
XOR                  : 54 55 56
error                : 

Nonterminals, with rules where they appear

allocation_pair      : 8
authorised_pair      : 9 27
before_task_node_pair : 4 12
begin                : 1 65
bod_task_node_pair   : 5 15
end                  : 31 35 41 44 62
end_rule             : 38 63
fork                 : 10 52 55
op                   : 39 40 41
option_flag          : 42 43 44
prog                 : 0
rules                : 3 11 14 17 20 23 26 51 54 66
sod_task_node_pair   : 6 18
task_list            : 51 52 53 54 55 56 57
task_node            : 2 3 32 40 43
task_option          : 34 42
user_list            : 26 27 28 29
user_node            : 2 3 36
user_node_pair       : 7 21 24
user_option          : 37 59
users_global_option  : 61
variable_option_flag : 39 40 41
variable_task_option : 33 39

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . begin
    (2) begin -> . TASKS COLON task_node USERS COLON user_node
    (3) begin -> . TASKS COLON task_node USERS COLON user_node rules

    TASKS           shift and go to state 2

    prog                           shift and go to state 3
    begin                          shift and go to state 1

state 1

    (1) prog -> begin .

    $end            reduce using rule 1 (prog -> begin .)


state 2

    (2) begin -> TASKS . COLON task_node USERS COLON user_node
    (3) begin -> TASKS . COLON task_node USERS COLON user_node rules

    COLON           shift and go to state 4


state 3

    (0) S' -> prog .



state 4

    (2) begin -> TASKS COLON . task_node USERS COLON user_node
    (3) begin -> TASKS COLON . task_node USERS COLON user_node rules
    (31) task_node -> . NODE end
    (32) task_node -> . NODE COMMA task_node
    (33) task_node -> . NODE variable_task_option
    (34) task_node -> . NODE task_option

    NODE            shift and go to state 5

    task_node                      shift and go to state 6

state 5

    (31) task_node -> NODE . end
    (32) task_node -> NODE . COMMA task_node
    (33) task_node -> NODE . variable_task_option
    (34) task_node -> NODE . task_option
    (64) end -> . END
    (65) end -> . END begin
    (39) variable_task_option -> . OPTION variable_option_flag COLON op variable_task_option
    (40) variable_task_option -> . OPTION variable_option_flag COLON op COMMA task_node
    (41) variable_task_option -> . OPTION variable_option_flag COLON op end
    (42) task_option -> . OPTION option_flag task_option
    (43) task_option -> . OPTION option_flag COMMA task_node
    (44) task_option -> . OPTION option_flag end

    COMMA           shift and go to state 9
    END             shift and go to state 12
    OPTION          shift and go to state 8

    variable_task_option           shift and go to state 10
    end                            shift and go to state 7
    task_option                    shift and go to state 11

state 6

    (2) begin -> TASKS COLON task_node . USERS COLON user_node
    (3) begin -> TASKS COLON task_node . USERS COLON user_node rules

    USERS           shift and go to state 13


state 7

    (31) task_node -> NODE end .

    USERS           reduce using rule 31 (task_node -> NODE end .)


state 8

    (39) variable_task_option -> OPTION . variable_option_flag COLON op variable_task_option
    (40) variable_task_option -> OPTION . variable_option_flag COLON op COMMA task_node
    (41) variable_task_option -> OPTION . variable_option_flag COLON op end
    (42) task_option -> OPTION . option_flag task_option
    (43) task_option -> OPTION . option_flag COMMA task_node
    (44) task_option -> OPTION . option_flag end
    (45) variable_option_flag -> . MIN_SEC_LV
    (46) option_flag -> . START

    MIN_SEC_LV      shift and go to state 17
    START           shift and go to state 15

    variable_option_flag           shift and go to state 16
    option_flag                    shift and go to state 14

state 9

    (32) task_node -> NODE COMMA . task_node
    (31) task_node -> . NODE end
    (32) task_node -> . NODE COMMA task_node
    (33) task_node -> . NODE variable_task_option
    (34) task_node -> . NODE task_option

    NODE            shift and go to state 5

    task_node                      shift and go to state 18

state 10

    (33) task_node -> NODE variable_task_option .

    USERS           reduce using rule 33 (task_node -> NODE variable_task_option .)


state 11

    (34) task_node -> NODE task_option .

    USERS           reduce using rule 34 (task_node -> NODE task_option .)


state 12

    (64) end -> END .
    (65) end -> END . begin
    (2) begin -> . TASKS COLON task_node USERS COLON user_node
    (3) begin -> . TASKS COLON task_node USERS COLON user_node rules

    USERS           reduce using rule 64 (end -> END .)
    BEFORE          reduce using rule 64 (end -> END .)
    BOD             reduce using rule 64 (end -> END .)
    SOD             reduce using rule 64 (end -> END .)
    SENIORITY       reduce using rule 64 (end -> END .)
    ALLOC           reduce using rule 64 (end -> END .)
    AUTHORISED      reduce using rule 64 (end -> END .)
    EXECUTION       reduce using rule 64 (end -> END .)
    $end            reduce using rule 64 (end -> END .)
    TASKS           shift and go to state 2

    begin                          shift and go to state 19

state 13

    (2) begin -> TASKS COLON task_node USERS . COLON user_node
    (3) begin -> TASKS COLON task_node USERS . COLON user_node rules

    COLON           shift and go to state 20


state 14

    (42) task_option -> OPTION option_flag . task_option
    (43) task_option -> OPTION option_flag . COMMA task_node
    (44) task_option -> OPTION option_flag . end
    (42) task_option -> . OPTION option_flag task_option
    (43) task_option -> . OPTION option_flag COMMA task_node
    (44) task_option -> . OPTION option_flag end
    (64) end -> . END
    (65) end -> . END begin

    COMMA           shift and go to state 23
    OPTION          shift and go to state 22
    END             shift and go to state 12

    task_option                    shift and go to state 24
    end                            shift and go to state 21

state 15

    (46) option_flag -> START .

    COMMA           reduce using rule 46 (option_flag -> START .)
    OPTION          reduce using rule 46 (option_flag -> START .)
    END             reduce using rule 46 (option_flag -> START .)


state 16

    (39) variable_task_option -> OPTION variable_option_flag . COLON op variable_task_option
    (40) variable_task_option -> OPTION variable_option_flag . COLON op COMMA task_node
    (41) variable_task_option -> OPTION variable_option_flag . COLON op end

    COLON           shift and go to state 25


state 17

    (45) variable_option_flag -> MIN_SEC_LV .

    COLON           reduce using rule 45 (variable_option_flag -> MIN_SEC_LV .)


state 18

    (32) task_node -> NODE COMMA task_node .

    USERS           reduce using rule 32 (task_node -> NODE COMMA task_node .)


state 19

    (65) end -> END begin .

    USERS           reduce using rule 65 (end -> END begin .)
    BEFORE          reduce using rule 65 (end -> END begin .)
    BOD             reduce using rule 65 (end -> END begin .)
    SOD             reduce using rule 65 (end -> END begin .)
    SENIORITY       reduce using rule 65 (end -> END begin .)
    ALLOC           reduce using rule 65 (end -> END begin .)
    AUTHORISED      reduce using rule 65 (end -> END begin .)
    EXECUTION       reduce using rule 65 (end -> END begin .)
    $end            reduce using rule 65 (end -> END begin .)


state 20

    (2) begin -> TASKS COLON task_node USERS COLON . user_node
    (3) begin -> TASKS COLON task_node USERS COLON . user_node rules
    (35) user_node -> . NODE end
    (36) user_node -> . NODE COMMA user_node
    (37) user_node -> . NODE user_option
    (38) user_node -> . NODE end_rule

    NODE            shift and go to state 26

    user_node                      shift and go to state 27

state 21

    (44) task_option -> OPTION option_flag end .

    USERS           reduce using rule 44 (task_option -> OPTION option_flag end .)


state 22

    (42) task_option -> OPTION . option_flag task_option
    (43) task_option -> OPTION . option_flag COMMA task_node
    (44) task_option -> OPTION . option_flag end
    (46) option_flag -> . START

    START           shift and go to state 15

    option_flag                    shift and go to state 14

state 23

    (43) task_option -> OPTION option_flag COMMA . task_node
    (31) task_node -> . NODE end
    (32) task_node -> . NODE COMMA task_node
    (33) task_node -> . NODE variable_task_option
    (34) task_node -> . NODE task_option

    NODE            shift and go to state 5

    task_node                      shift and go to state 28

state 24

    (42) task_option -> OPTION option_flag task_option .

    USERS           reduce using rule 42 (task_option -> OPTION option_flag task_option .)


state 25

    (39) variable_task_option -> OPTION variable_option_flag COLON . op variable_task_option
    (40) variable_task_option -> OPTION variable_option_flag COLON . op COMMA task_node
    (41) variable_task_option -> OPTION variable_option_flag COLON . op end
    (47) op -> . EQ NODE
    (48) op -> . GEQ NODE
    (49) op -> . LEQ NODE
    (50) op -> . NEQ NODE

    EQ              shift and go to state 32
    GEQ             shift and go to state 29
    LEQ             shift and go to state 30
    NEQ             shift and go to state 31

    op                             shift and go to state 33

state 26

    (35) user_node -> NODE . end
    (36) user_node -> NODE . COMMA user_node
    (37) user_node -> NODE . user_option
    (38) user_node -> NODE . end_rule
    (64) end -> . END
    (65) end -> . END begin
    (59) user_option -> . OPTION USERS_OPTION user_option
    (60) user_option -> . OPTION USERS_OPTION COMMA
    (61) user_option -> . OPTION USERS_OPTION COLON users_global_option
    (62) user_option -> . OPTION USERS_OPTION end
    (66) end_rule -> . END rules

    COMMA           shift and go to state 37
    END             shift and go to state 39
    OPTION          shift and go to state 35

    end                            shift and go to state 34
    end_rule                       shift and go to state 36
    user_option                    shift and go to state 38

state 27

    (2) begin -> TASKS COLON task_node USERS COLON user_node .
    (3) begin -> TASKS COLON task_node USERS COLON user_node . rules
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . ALLOC COLON allocation_pair
    (9) rules -> . AUTHORISED COLON authorised_pair
    (10) rules -> . EXECUTION COLON fork

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for ALLOC resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
  ! shift/reduce conflict for EXECUTION resolved as shift
    $end            reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .)
    USERS           reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .)
    BEFORE          shift and go to state 47
    BOD             shift and go to state 46
    SOD             shift and go to state 42
    SENIORITY       shift and go to state 44
    ALLOC           shift and go to state 40
    AUTHORISED      shift and go to state 43
    EXECUTION       shift and go to state 45

  ! BEFORE          [ reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .) ]
  ! BOD             [ reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .) ]
  ! SOD             [ reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .) ]
  ! SENIORITY       [ reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .) ]
  ! ALLOC           [ reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .) ]
  ! AUTHORISED      [ reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .) ]
  ! EXECUTION       [ reduce using rule 2 (begin -> TASKS COLON task_node USERS COLON user_node .) ]

    rules                          shift and go to state 41

state 28

    (43) task_option -> OPTION option_flag COMMA task_node .

    USERS           reduce using rule 43 (task_option -> OPTION option_flag COMMA task_node .)


state 29

    (48) op -> GEQ . NODE

    NODE            shift and go to state 48


state 30

    (49) op -> LEQ . NODE

    NODE            shift and go to state 49


state 31

    (50) op -> NEQ . NODE

    NODE            shift and go to state 50


state 32

    (47) op -> EQ . NODE

    NODE            shift and go to state 51


state 33

    (39) variable_task_option -> OPTION variable_option_flag COLON op . variable_task_option
    (40) variable_task_option -> OPTION variable_option_flag COLON op . COMMA task_node
    (41) variable_task_option -> OPTION variable_option_flag COLON op . end
    (39) variable_task_option -> . OPTION variable_option_flag COLON op variable_task_option
    (40) variable_task_option -> . OPTION variable_option_flag COLON op COMMA task_node
    (41) variable_task_option -> . OPTION variable_option_flag COLON op end
    (64) end -> . END
    (65) end -> . END begin

    COMMA           shift and go to state 55
    OPTION          shift and go to state 53
    END             shift and go to state 12

    end                            shift and go to state 54
    variable_task_option           shift and go to state 52

state 34

    (35) user_node -> NODE end .

    USERS           reduce using rule 35 (user_node -> NODE end .)
    BEFORE          reduce using rule 35 (user_node -> NODE end .)
    BOD             reduce using rule 35 (user_node -> NODE end .)
    SOD             reduce using rule 35 (user_node -> NODE end .)
    SENIORITY       reduce using rule 35 (user_node -> NODE end .)
    ALLOC           reduce using rule 35 (user_node -> NODE end .)
    AUTHORISED      reduce using rule 35 (user_node -> NODE end .)
    EXECUTION       reduce using rule 35 (user_node -> NODE end .)
    $end            reduce using rule 35 (user_node -> NODE end .)


state 35

    (59) user_option -> OPTION . USERS_OPTION user_option
    (60) user_option -> OPTION . USERS_OPTION COMMA
    (61) user_option -> OPTION . USERS_OPTION COLON users_global_option
    (62) user_option -> OPTION . USERS_OPTION end

    USERS_OPTION    shift and go to state 56


state 36

    (38) user_node -> NODE end_rule .

    USERS           reduce using rule 38 (user_node -> NODE end_rule .)
    BEFORE          reduce using rule 38 (user_node -> NODE end_rule .)
    BOD             reduce using rule 38 (user_node -> NODE end_rule .)
    SOD             reduce using rule 38 (user_node -> NODE end_rule .)
    SENIORITY       reduce using rule 38 (user_node -> NODE end_rule .)
    ALLOC           reduce using rule 38 (user_node -> NODE end_rule .)
    AUTHORISED      reduce using rule 38 (user_node -> NODE end_rule .)
    EXECUTION       reduce using rule 38 (user_node -> NODE end_rule .)
    $end            reduce using rule 38 (user_node -> NODE end_rule .)


state 37

    (36) user_node -> NODE COMMA . user_node
    (35) user_node -> . NODE end
    (36) user_node -> . NODE COMMA user_node
    (37) user_node -> . NODE user_option
    (38) user_node -> . NODE end_rule

    NODE            shift and go to state 26

    user_node                      shift and go to state 57

state 38

    (37) user_node -> NODE user_option .

    USERS           reduce using rule 37 (user_node -> NODE user_option .)
    BEFORE          reduce using rule 37 (user_node -> NODE user_option .)
    BOD             reduce using rule 37 (user_node -> NODE user_option .)
    SOD             reduce using rule 37 (user_node -> NODE user_option .)
    SENIORITY       reduce using rule 37 (user_node -> NODE user_option .)
    ALLOC           reduce using rule 37 (user_node -> NODE user_option .)
    AUTHORISED      reduce using rule 37 (user_node -> NODE user_option .)
    EXECUTION       reduce using rule 37 (user_node -> NODE user_option .)
    $end            reduce using rule 37 (user_node -> NODE user_option .)


state 39

    (64) end -> END .
    (65) end -> END . begin
    (66) end_rule -> END . rules
    (2) begin -> . TASKS COLON task_node USERS COLON user_node
    (3) begin -> . TASKS COLON task_node USERS COLON user_node rules
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . ALLOC COLON allocation_pair
    (9) rules -> . AUTHORISED COLON authorised_pair
    (10) rules -> . EXECUTION COLON fork

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for ALLOC resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
  ! shift/reduce conflict for EXECUTION resolved as shift
    USERS           reduce using rule 64 (end -> END .)
    $end            reduce using rule 64 (end -> END .)
    TASKS           shift and go to state 2
    BEFORE          shift and go to state 47
    BOD             shift and go to state 46
    SOD             shift and go to state 42
    SENIORITY       shift and go to state 44
    ALLOC           shift and go to state 40
    AUTHORISED      shift and go to state 43
    EXECUTION       shift and go to state 45

  ! BEFORE          [ reduce using rule 64 (end -> END .) ]
  ! BOD             [ reduce using rule 64 (end -> END .) ]
  ! SOD             [ reduce using rule 64 (end -> END .) ]
  ! SENIORITY       [ reduce using rule 64 (end -> END .) ]
  ! ALLOC           [ reduce using rule 64 (end -> END .) ]
  ! AUTHORISED      [ reduce using rule 64 (end -> END .) ]
  ! EXECUTION       [ reduce using rule 64 (end -> END .) ]

    begin                          shift and go to state 19
    rules                          shift and go to state 58

state 40

    (8) rules -> ALLOC . COLON allocation_pair

    COLON           shift and go to state 59


state 41

    (3) begin -> TASKS COLON task_node USERS COLON user_node rules .

    $end            reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    USERS           reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    BEFORE          reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    BOD             reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    SOD             reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    SENIORITY       reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    ALLOC           reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    AUTHORISED      reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)
    EXECUTION       reduce using rule 3 (begin -> TASKS COLON task_node USERS COLON user_node rules .)


state 42

    (6) rules -> SOD . COLON sod_task_node_pair

    COLON           shift and go to state 60


state 43

    (9) rules -> AUTHORISED . COLON authorised_pair

    COLON           shift and go to state 61


state 44

    (7) rules -> SENIORITY . COLON user_node_pair

    COLON           shift and go to state 62


state 45

    (10) rules -> EXECUTION . COLON fork

    COLON           shift and go to state 63


state 46

    (5) rules -> BOD . COLON bod_task_node_pair

    COLON           shift and go to state 64


state 47

    (4) rules -> BEFORE . COLON before_task_node_pair

    COLON           shift and go to state 65


state 48

    (48) op -> GEQ NODE .

    COMMA           reduce using rule 48 (op -> GEQ NODE .)
    OPTION          reduce using rule 48 (op -> GEQ NODE .)
    END             reduce using rule 48 (op -> GEQ NODE .)


state 49

    (49) op -> LEQ NODE .

    COMMA           reduce using rule 49 (op -> LEQ NODE .)
    OPTION          reduce using rule 49 (op -> LEQ NODE .)
    END             reduce using rule 49 (op -> LEQ NODE .)


state 50

    (50) op -> NEQ NODE .

    COMMA           reduce using rule 50 (op -> NEQ NODE .)
    OPTION          reduce using rule 50 (op -> NEQ NODE .)
    END             reduce using rule 50 (op -> NEQ NODE .)


state 51

    (47) op -> EQ NODE .

    COMMA           reduce using rule 47 (op -> EQ NODE .)
    OPTION          reduce using rule 47 (op -> EQ NODE .)
    END             reduce using rule 47 (op -> EQ NODE .)


state 52

    (39) variable_task_option -> OPTION variable_option_flag COLON op variable_task_option .

    USERS           reduce using rule 39 (variable_task_option -> OPTION variable_option_flag COLON op variable_task_option .)


state 53

    (39) variable_task_option -> OPTION . variable_option_flag COLON op variable_task_option
    (40) variable_task_option -> OPTION . variable_option_flag COLON op COMMA task_node
    (41) variable_task_option -> OPTION . variable_option_flag COLON op end
    (45) variable_option_flag -> . MIN_SEC_LV

    MIN_SEC_LV      shift and go to state 17

    variable_option_flag           shift and go to state 16

state 54

    (41) variable_task_option -> OPTION variable_option_flag COLON op end .

    USERS           reduce using rule 41 (variable_task_option -> OPTION variable_option_flag COLON op end .)


state 55

    (40) variable_task_option -> OPTION variable_option_flag COLON op COMMA . task_node
    (31) task_node -> . NODE end
    (32) task_node -> . NODE COMMA task_node
    (33) task_node -> . NODE variable_task_option
    (34) task_node -> . NODE task_option

    NODE            shift and go to state 5

    task_node                      shift and go to state 66

state 56

    (59) user_option -> OPTION USERS_OPTION . user_option
    (60) user_option -> OPTION USERS_OPTION . COMMA
    (61) user_option -> OPTION USERS_OPTION . COLON users_global_option
    (62) user_option -> OPTION USERS_OPTION . end
    (59) user_option -> . OPTION USERS_OPTION user_option
    (60) user_option -> . OPTION USERS_OPTION COMMA
    (61) user_option -> . OPTION USERS_OPTION COLON users_global_option
    (62) user_option -> . OPTION USERS_OPTION end
    (64) end -> . END
    (65) end -> . END begin

    COMMA           shift and go to state 69
    COLON           shift and go to state 70
    OPTION          shift and go to state 35
    END             shift and go to state 12

    end                            shift and go to state 67
    user_option                    shift and go to state 68

state 57

    (36) user_node -> NODE COMMA user_node .

    USERS           reduce using rule 36 (user_node -> NODE COMMA user_node .)
    BEFORE          reduce using rule 36 (user_node -> NODE COMMA user_node .)
    BOD             reduce using rule 36 (user_node -> NODE COMMA user_node .)
    SOD             reduce using rule 36 (user_node -> NODE COMMA user_node .)
    SENIORITY       reduce using rule 36 (user_node -> NODE COMMA user_node .)
    ALLOC           reduce using rule 36 (user_node -> NODE COMMA user_node .)
    AUTHORISED      reduce using rule 36 (user_node -> NODE COMMA user_node .)
    EXECUTION       reduce using rule 36 (user_node -> NODE COMMA user_node .)
    $end            reduce using rule 36 (user_node -> NODE COMMA user_node .)


state 58

    (66) end_rule -> END rules .

    USERS           reduce using rule 66 (end_rule -> END rules .)
    BEFORE          reduce using rule 66 (end_rule -> END rules .)
    BOD             reduce using rule 66 (end_rule -> END rules .)
    SOD             reduce using rule 66 (end_rule -> END rules .)
    SENIORITY       reduce using rule 66 (end_rule -> END rules .)
    ALLOC           reduce using rule 66 (end_rule -> END rules .)
    AUTHORISED      reduce using rule 66 (end_rule -> END rules .)
    EXECUTION       reduce using rule 66 (end_rule -> END rules .)
    $end            reduce using rule 66 (end_rule -> END rules .)


state 59

    (8) rules -> ALLOC COLON . allocation_pair
    (23) allocation_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (24) allocation_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair
    (25) allocation_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 72

    allocation_pair                shift and go to state 71

state 60

    (6) rules -> SOD COLON . sod_task_node_pair
    (17) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (18) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair
    (19) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 74

    sod_task_node_pair             shift and go to state 73

state 61

    (9) rules -> AUTHORISED COLON . authorised_pair
    (26) authorised_pair -> . LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules
    (27) authorised_pair -> . LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair
    (28) authorised_pair -> . LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END

    LPAREN          shift and go to state 76

    authorised_pair                shift and go to state 75

state 62

    (7) rules -> SENIORITY COLON . user_node_pair
    (20) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (21) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair
    (22) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 78

    user_node_pair                 shift and go to state 77

state 63

    (10) rules -> EXECUTION COLON . fork
    (51) fork -> . OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (52) fork -> . OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (53) fork -> . OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END
    (54) fork -> . XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (55) fork -> . XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (56) fork -> . XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END

    OR              shift and go to state 81
    XOR             shift and go to state 80

    fork                           shift and go to state 79

state 64

    (5) rules -> BOD COLON . bod_task_node_pair
    (14) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (15) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair
    (16) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 82

    bod_task_node_pair             shift and go to state 83

state 65

    (4) rules -> BEFORE COLON . before_task_node_pair
    (11) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (12) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair
    (13) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 85

    before_task_node_pair          shift and go to state 84

state 66

    (40) variable_task_option -> OPTION variable_option_flag COLON op COMMA task_node .

    USERS           reduce using rule 40 (variable_task_option -> OPTION variable_option_flag COLON op COMMA task_node .)


state 67

    (62) user_option -> OPTION USERS_OPTION end .

    USERS           reduce using rule 62 (user_option -> OPTION USERS_OPTION end .)
    BEFORE          reduce using rule 62 (user_option -> OPTION USERS_OPTION end .)
    BOD             reduce using rule 62 (user_option -> OPTION USERS_OPTION end .)
    SOD             reduce using rule 62 (user_option -> OPTION USERS_OPTION end .)
    SENIORITY       reduce using rule 62 (user_option -> OPTION USERS_OPTION end .)
    ALLOC           reduce using rule 62 (user_option -> OPTION USERS_OPTION end .)
    AUTHORISED      reduce using rule 62 (user_option -> OPTION USERS_OPTION end .)
    EXECUTION       reduce using rule 62 (user_option -> OPTION USERS_OPTION end .)
    $end            reduce using rule 62 (user_option -> OPTION USERS_OPTION end .)


state 68

    (59) user_option -> OPTION USERS_OPTION user_option .

    USERS           reduce using rule 59 (user_option -> OPTION USERS_OPTION user_option .)
    BEFORE          reduce using rule 59 (user_option -> OPTION USERS_OPTION user_option .)
    BOD             reduce using rule 59 (user_option -> OPTION USERS_OPTION user_option .)
    SOD             reduce using rule 59 (user_option -> OPTION USERS_OPTION user_option .)
    SENIORITY       reduce using rule 59 (user_option -> OPTION USERS_OPTION user_option .)
    ALLOC           reduce using rule 59 (user_option -> OPTION USERS_OPTION user_option .)
    AUTHORISED      reduce using rule 59 (user_option -> OPTION USERS_OPTION user_option .)
    EXECUTION       reduce using rule 59 (user_option -> OPTION USERS_OPTION user_option .)
    $end            reduce using rule 59 (user_option -> OPTION USERS_OPTION user_option .)


state 69

    (60) user_option -> OPTION USERS_OPTION COMMA .

    USERS           reduce using rule 60 (user_option -> OPTION USERS_OPTION COMMA .)
    BEFORE          reduce using rule 60 (user_option -> OPTION USERS_OPTION COMMA .)
    BOD             reduce using rule 60 (user_option -> OPTION USERS_OPTION COMMA .)
    SOD             reduce using rule 60 (user_option -> OPTION USERS_OPTION COMMA .)
    SENIORITY       reduce using rule 60 (user_option -> OPTION USERS_OPTION COMMA .)
    ALLOC           reduce using rule 60 (user_option -> OPTION USERS_OPTION COMMA .)
    AUTHORISED      reduce using rule 60 (user_option -> OPTION USERS_OPTION COMMA .)
    EXECUTION       reduce using rule 60 (user_option -> OPTION USERS_OPTION COMMA .)
    $end            reduce using rule 60 (user_option -> OPTION USERS_OPTION COMMA .)


state 70

    (61) user_option -> OPTION USERS_OPTION COLON . users_global_option
    (63) users_global_option -> . ALLOCATE end_rule

    ALLOCATE        shift and go to state 87

    users_global_option            shift and go to state 86

state 71

    (8) rules -> ALLOC COLON allocation_pair .

    USERS           reduce using rule 8 (rules -> ALLOC COLON allocation_pair .)
    BEFORE          reduce using rule 8 (rules -> ALLOC COLON allocation_pair .)
    BOD             reduce using rule 8 (rules -> ALLOC COLON allocation_pair .)
    SOD             reduce using rule 8 (rules -> ALLOC COLON allocation_pair .)
    SENIORITY       reduce using rule 8 (rules -> ALLOC COLON allocation_pair .)
    ALLOC           reduce using rule 8 (rules -> ALLOC COLON allocation_pair .)
    AUTHORISED      reduce using rule 8 (rules -> ALLOC COLON allocation_pair .)
    EXECUTION       reduce using rule 8 (rules -> ALLOC COLON allocation_pair .)
    $end            reduce using rule 8 (rules -> ALLOC COLON allocation_pair .)


state 72

    (23) allocation_pair -> LPAREN . NODE COMMA NODE RPAREN END rules
    (24) allocation_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA user_node_pair
    (25) allocation_pair -> LPAREN . NODE COMMA NODE RPAREN END

    NODE            shift and go to state 88


state 73

    (6) rules -> SOD COLON sod_task_node_pair .

    USERS           reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    BEFORE          reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    BOD             reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    SOD             reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    SENIORITY       reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    ALLOC           reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    AUTHORISED      reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    EXECUTION       reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)
    $end            reduce using rule 6 (rules -> SOD COLON sod_task_node_pair .)


state 74

    (17) sod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END rules
    (18) sod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA sod_task_node_pair
    (19) sod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END

    NODE            shift and go to state 89


state 75

    (9) rules -> AUTHORISED COLON authorised_pair .

    USERS           reduce using rule 9 (rules -> AUTHORISED COLON authorised_pair .)
    BEFORE          reduce using rule 9 (rules -> AUTHORISED COLON authorised_pair .)
    BOD             reduce using rule 9 (rules -> AUTHORISED COLON authorised_pair .)
    SOD             reduce using rule 9 (rules -> AUTHORISED COLON authorised_pair .)
    SENIORITY       reduce using rule 9 (rules -> AUTHORISED COLON authorised_pair .)
    ALLOC           reduce using rule 9 (rules -> AUTHORISED COLON authorised_pair .)
    AUTHORISED      reduce using rule 9 (rules -> AUTHORISED COLON authorised_pair .)
    EXECUTION       reduce using rule 9 (rules -> AUTHORISED COLON authorised_pair .)
    $end            reduce using rule 9 (rules -> AUTHORISED COLON authorised_pair .)


state 76

    (26) authorised_pair -> LPAREN . NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules
    (27) authorised_pair -> LPAREN . NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair
    (28) authorised_pair -> LPAREN . NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END

    NODE            shift and go to state 90


state 77

    (7) rules -> SENIORITY COLON user_node_pair .

    USERS           reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    BEFORE          reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    BOD             reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    SOD             reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    SENIORITY       reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    ALLOC           reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    AUTHORISED      reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    EXECUTION       reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)
    $end            reduce using rule 7 (rules -> SENIORITY COLON user_node_pair .)


state 78

    (20) user_node_pair -> LPAREN . NODE COMMA NODE RPAREN END rules
    (21) user_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA user_node_pair
    (22) user_node_pair -> LPAREN . NODE COMMA NODE RPAREN END

    NODE            shift and go to state 91


state 79

    (10) rules -> EXECUTION COLON fork .

    USERS           reduce using rule 10 (rules -> EXECUTION COLON fork .)
    BEFORE          reduce using rule 10 (rules -> EXECUTION COLON fork .)
    BOD             reduce using rule 10 (rules -> EXECUTION COLON fork .)
    SOD             reduce using rule 10 (rules -> EXECUTION COLON fork .)
    SENIORITY       reduce using rule 10 (rules -> EXECUTION COLON fork .)
    ALLOC           reduce using rule 10 (rules -> EXECUTION COLON fork .)
    AUTHORISED      reduce using rule 10 (rules -> EXECUTION COLON fork .)
    EXECUTION       reduce using rule 10 (rules -> EXECUTION COLON fork .)
    $end            reduce using rule 10 (rules -> EXECUTION COLON fork .)


state 80

    (54) fork -> XOR . LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (55) fork -> XOR . LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (56) fork -> XOR . LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END

    LPAREN          shift and go to state 92


state 81

    (51) fork -> OR . LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (52) fork -> OR . LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (53) fork -> OR . LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END

    LPAREN          shift and go to state 93


state 82

    (14) bod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END rules
    (15) bod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA bod_task_node_pair
    (16) bod_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END

    NODE            shift and go to state 94


state 83

    (5) rules -> BOD COLON bod_task_node_pair .

    USERS           reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    BEFORE          reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    BOD             reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    SOD             reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    SENIORITY       reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    ALLOC           reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    AUTHORISED      reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    EXECUTION       reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)
    $end            reduce using rule 5 (rules -> BOD COLON bod_task_node_pair .)


state 84

    (4) rules -> BEFORE COLON before_task_node_pair .

    USERS           reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    BEFORE          reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    BOD             reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    SOD             reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    SENIORITY       reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    ALLOC           reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    AUTHORISED      reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    EXECUTION       reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)
    $end            reduce using rule 4 (rules -> BEFORE COLON before_task_node_pair .)


state 85

    (11) before_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END rules
    (12) before_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN COMMA before_task_node_pair
    (13) before_task_node_pair -> LPAREN . NODE COMMA NODE RPAREN END

    NODE            shift and go to state 95


state 86

    (61) user_option -> OPTION USERS_OPTION COLON users_global_option .

    USERS           reduce using rule 61 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    BEFORE          reduce using rule 61 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    BOD             reduce using rule 61 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    SOD             reduce using rule 61 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    SENIORITY       reduce using rule 61 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    ALLOC           reduce using rule 61 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    AUTHORISED      reduce using rule 61 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    EXECUTION       reduce using rule 61 (user_option -> OPTION USERS_OPTION COLON users_global_option .)
    $end            reduce using rule 61 (user_option -> OPTION USERS_OPTION COLON users_global_option .)


state 87

    (63) users_global_option -> ALLOCATE . end_rule
    (66) end_rule -> . END rules

    END             shift and go to state 97

    end_rule                       shift and go to state 96

state 88

    (23) allocation_pair -> LPAREN NODE . COMMA NODE RPAREN END rules
    (24) allocation_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA user_node_pair
    (25) allocation_pair -> LPAREN NODE . COMMA NODE RPAREN END

    COMMA           shift and go to state 98


state 89

    (17) sod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END rules
    (18) sod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA sod_task_node_pair
    (19) sod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END

    COMMA           shift and go to state 99


state 90

    (26) authorised_pair -> LPAREN NODE . COMMA LSQPAREN user_list RSQPAREN RPAREN END rules
    (27) authorised_pair -> LPAREN NODE . COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair
    (28) authorised_pair -> LPAREN NODE . COMMA LSQPAREN user_list RSQPAREN RPAREN END

    COMMA           shift and go to state 100


state 91

    (20) user_node_pair -> LPAREN NODE . COMMA NODE RPAREN END rules
    (21) user_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA user_node_pair
    (22) user_node_pair -> LPAREN NODE . COMMA NODE RPAREN END

    COMMA           shift and go to state 101


state 92

    (54) fork -> XOR LPAREN . NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (55) fork -> XOR LPAREN . NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (56) fork -> XOR LPAREN . NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END

    NODE            shift and go to state 102


state 93

    (51) fork -> OR LPAREN . NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (52) fork -> OR LPAREN . NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (53) fork -> OR LPAREN . NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END

    NODE            shift and go to state 103


state 94

    (14) bod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END rules
    (15) bod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA bod_task_node_pair
    (16) bod_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END

    COMMA           shift and go to state 104


state 95

    (11) before_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END rules
    (12) before_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN COMMA before_task_node_pair
    (13) before_task_node_pair -> LPAREN NODE . COMMA NODE RPAREN END

    COMMA           shift and go to state 105


state 96

    (63) users_global_option -> ALLOCATE end_rule .

    USERS           reduce using rule 63 (users_global_option -> ALLOCATE end_rule .)
    BEFORE          reduce using rule 63 (users_global_option -> ALLOCATE end_rule .)
    BOD             reduce using rule 63 (users_global_option -> ALLOCATE end_rule .)
    SOD             reduce using rule 63 (users_global_option -> ALLOCATE end_rule .)
    SENIORITY       reduce using rule 63 (users_global_option -> ALLOCATE end_rule .)
    ALLOC           reduce using rule 63 (users_global_option -> ALLOCATE end_rule .)
    AUTHORISED      reduce using rule 63 (users_global_option -> ALLOCATE end_rule .)
    EXECUTION       reduce using rule 63 (users_global_option -> ALLOCATE end_rule .)
    $end            reduce using rule 63 (users_global_option -> ALLOCATE end_rule .)


state 97

    (66) end_rule -> END . rules
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . ALLOC COLON allocation_pair
    (9) rules -> . AUTHORISED COLON authorised_pair
    (10) rules -> . EXECUTION COLON fork

    BEFORE          shift and go to state 47
    BOD             shift and go to state 46
    SOD             shift and go to state 42
    SENIORITY       shift and go to state 44
    ALLOC           shift and go to state 40
    AUTHORISED      shift and go to state 43
    EXECUTION       shift and go to state 45

    rules                          shift and go to state 58

state 98

    (23) allocation_pair -> LPAREN NODE COMMA . NODE RPAREN END rules
    (24) allocation_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA user_node_pair
    (25) allocation_pair -> LPAREN NODE COMMA . NODE RPAREN END

    NODE            shift and go to state 106


state 99

    (17) sod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END rules
    (18) sod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA sod_task_node_pair
    (19) sod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END

    NODE            shift and go to state 107


state 100

    (26) authorised_pair -> LPAREN NODE COMMA . LSQPAREN user_list RSQPAREN RPAREN END rules
    (27) authorised_pair -> LPAREN NODE COMMA . LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair
    (28) authorised_pair -> LPAREN NODE COMMA . LSQPAREN user_list RSQPAREN RPAREN END

    LSQPAREN        shift and go to state 108


state 101

    (20) user_node_pair -> LPAREN NODE COMMA . NODE RPAREN END rules
    (21) user_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA user_node_pair
    (22) user_node_pair -> LPAREN NODE COMMA . NODE RPAREN END

    NODE            shift and go to state 109


state 102

    (54) fork -> XOR LPAREN NODE . COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (55) fork -> XOR LPAREN NODE . COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (56) fork -> XOR LPAREN NODE . COMMA LSQPAREN task_list RSQPAREN RPAREN END

    COMMA           shift and go to state 110


state 103

    (51) fork -> OR LPAREN NODE . COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (52) fork -> OR LPAREN NODE . COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (53) fork -> OR LPAREN NODE . COMMA LSQPAREN task_list RSQPAREN RPAREN END

    COMMA           shift and go to state 111


state 104

    (14) bod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END rules
    (15) bod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA bod_task_node_pair
    (16) bod_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END

    NODE            shift and go to state 112


state 105

    (11) before_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END rules
    (12) before_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN COMMA before_task_node_pair
    (13) before_task_node_pair -> LPAREN NODE COMMA . NODE RPAREN END

    NODE            shift and go to state 113


state 106

    (23) allocation_pair -> LPAREN NODE COMMA NODE . RPAREN END rules
    (24) allocation_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA user_node_pair
    (25) allocation_pair -> LPAREN NODE COMMA NODE . RPAREN END

    RPAREN          shift and go to state 114


state 107

    (17) sod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END rules
    (18) sod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA sod_task_node_pair
    (19) sod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END

    RPAREN          shift and go to state 115


state 108

    (26) authorised_pair -> LPAREN NODE COMMA LSQPAREN . user_list RSQPAREN RPAREN END rules
    (27) authorised_pair -> LPAREN NODE COMMA LSQPAREN . user_list RSQPAREN RPAREN COMMA authorised_pair
    (28) authorised_pair -> LPAREN NODE COMMA LSQPAREN . user_list RSQPAREN RPAREN END
    (29) user_list -> . NODE COMMA user_list
    (30) user_list -> . NODE

    NODE            shift and go to state 116

    user_list                      shift and go to state 117

state 109

    (20) user_node_pair -> LPAREN NODE COMMA NODE . RPAREN END rules
    (21) user_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA user_node_pair
    (22) user_node_pair -> LPAREN NODE COMMA NODE . RPAREN END

    RPAREN          shift and go to state 118


state 110

    (54) fork -> XOR LPAREN NODE COMMA . LSQPAREN task_list RSQPAREN RPAREN END rules
    (55) fork -> XOR LPAREN NODE COMMA . LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (56) fork -> XOR LPAREN NODE COMMA . LSQPAREN task_list RSQPAREN RPAREN END

    LSQPAREN        shift and go to state 119


state 111

    (51) fork -> OR LPAREN NODE COMMA . LSQPAREN task_list RSQPAREN RPAREN END rules
    (52) fork -> OR LPAREN NODE COMMA . LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (53) fork -> OR LPAREN NODE COMMA . LSQPAREN task_list RSQPAREN RPAREN END

    LSQPAREN        shift and go to state 120


state 112

    (14) bod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END rules
    (15) bod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA bod_task_node_pair
    (16) bod_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END

    RPAREN          shift and go to state 121


state 113

    (11) before_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END rules
    (12) before_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN COMMA before_task_node_pair
    (13) before_task_node_pair -> LPAREN NODE COMMA NODE . RPAREN END

    RPAREN          shift and go to state 122


state 114

    (23) allocation_pair -> LPAREN NODE COMMA NODE RPAREN . END rules
    (24) allocation_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA user_node_pair
    (25) allocation_pair -> LPAREN NODE COMMA NODE RPAREN . END

    END             shift and go to state 124
    COMMA           shift and go to state 123


state 115

    (17) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END rules
    (18) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA sod_task_node_pair
    (19) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END

    END             shift and go to state 126
    COMMA           shift and go to state 125


state 116

    (29) user_list -> NODE . COMMA user_list
    (30) user_list -> NODE .

    COMMA           shift and go to state 127
    RSQPAREN        reduce using rule 30 (user_list -> NODE .)


state 117

    (26) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list . RSQPAREN RPAREN END rules
    (27) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list . RSQPAREN RPAREN COMMA authorised_pair
    (28) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list . RSQPAREN RPAREN END

    RSQPAREN        shift and go to state 128


state 118

    (20) user_node_pair -> LPAREN NODE COMMA NODE RPAREN . END rules
    (21) user_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA user_node_pair
    (22) user_node_pair -> LPAREN NODE COMMA NODE RPAREN . END

    END             shift and go to state 130
    COMMA           shift and go to state 129


state 119

    (54) fork -> XOR LPAREN NODE COMMA LSQPAREN . task_list RSQPAREN RPAREN END rules
    (55) fork -> XOR LPAREN NODE COMMA LSQPAREN . task_list RSQPAREN RPAREN COMMA fork
    (56) fork -> XOR LPAREN NODE COMMA LSQPAREN . task_list RSQPAREN RPAREN END
    (57) task_list -> . NODE COMMA task_list
    (58) task_list -> . NODE

    NODE            shift and go to state 131

    task_list                      shift and go to state 132

state 120

    (51) fork -> OR LPAREN NODE COMMA LSQPAREN . task_list RSQPAREN RPAREN END rules
    (52) fork -> OR LPAREN NODE COMMA LSQPAREN . task_list RSQPAREN RPAREN COMMA fork
    (53) fork -> OR LPAREN NODE COMMA LSQPAREN . task_list RSQPAREN RPAREN END
    (57) task_list -> . NODE COMMA task_list
    (58) task_list -> . NODE

    NODE            shift and go to state 131

    task_list                      shift and go to state 133

state 121

    (14) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END rules
    (15) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA bod_task_node_pair
    (16) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END

    END             shift and go to state 135
    COMMA           shift and go to state 134


state 122

    (11) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END rules
    (12) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . COMMA before_task_node_pair
    (13) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN . END

    END             shift and go to state 137
    COMMA           shift and go to state 136


state 123

    (24) allocation_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . user_node_pair
    (20) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (21) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair
    (22) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 78

    user_node_pair                 shift and go to state 138

state 124

    (23) allocation_pair -> LPAREN NODE COMMA NODE RPAREN END . rules
    (25) allocation_pair -> LPAREN NODE COMMA NODE RPAREN END .
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . ALLOC COLON allocation_pair
    (9) rules -> . AUTHORISED COLON authorised_pair
    (10) rules -> . EXECUTION COLON fork

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for ALLOC resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
  ! shift/reduce conflict for EXECUTION resolved as shift
    $end            reduce using rule 25 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    USERS           reduce using rule 25 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BEFORE          shift and go to state 47
    BOD             shift and go to state 46
    SOD             shift and go to state 42
    SENIORITY       shift and go to state 44
    ALLOC           shift and go to state 40
    AUTHORISED      shift and go to state 43
    EXECUTION       shift and go to state 45

  ! BEFORE          [ reduce using rule 25 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! BOD             [ reduce using rule 25 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SOD             [ reduce using rule 25 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SENIORITY       [ reduce using rule 25 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! ALLOC           [ reduce using rule 25 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! AUTHORISED      [ reduce using rule 25 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! EXECUTION       [ reduce using rule 25 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]

    rules                          shift and go to state 139

state 125

    (18) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . sod_task_node_pair
    (17) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (18) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair
    (19) sod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 74

    sod_task_node_pair             shift and go to state 140

state 126

    (17) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END . rules
    (19) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . ALLOC COLON allocation_pair
    (9) rules -> . AUTHORISED COLON authorised_pair
    (10) rules -> . EXECUTION COLON fork

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for ALLOC resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
  ! shift/reduce conflict for EXECUTION resolved as shift
    $end            reduce using rule 19 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    USERS           reduce using rule 19 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BEFORE          shift and go to state 47
    BOD             shift and go to state 46
    SOD             shift and go to state 42
    SENIORITY       shift and go to state 44
    ALLOC           shift and go to state 40
    AUTHORISED      shift and go to state 43
    EXECUTION       shift and go to state 45

  ! BEFORE          [ reduce using rule 19 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! BOD             [ reduce using rule 19 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SOD             [ reduce using rule 19 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SENIORITY       [ reduce using rule 19 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! ALLOC           [ reduce using rule 19 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! AUTHORISED      [ reduce using rule 19 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! EXECUTION       [ reduce using rule 19 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]

    rules                          shift and go to state 141

state 127

    (29) user_list -> NODE COMMA . user_list
    (29) user_list -> . NODE COMMA user_list
    (30) user_list -> . NODE

    NODE            shift and go to state 116

    user_list                      shift and go to state 142

state 128

    (26) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN . RPAREN END rules
    (27) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN . RPAREN COMMA authorised_pair
    (28) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN . RPAREN END

    RPAREN          shift and go to state 143


state 129

    (21) user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . user_node_pair
    (20) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (21) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair
    (22) user_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 78

    user_node_pair                 shift and go to state 144

state 130

    (20) user_node_pair -> LPAREN NODE COMMA NODE RPAREN END . rules
    (22) user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . ALLOC COLON allocation_pair
    (9) rules -> . AUTHORISED COLON authorised_pair
    (10) rules -> . EXECUTION COLON fork

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for ALLOC resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
  ! shift/reduce conflict for EXECUTION resolved as shift
    $end            reduce using rule 22 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    USERS           reduce using rule 22 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BEFORE          shift and go to state 47
    BOD             shift and go to state 46
    SOD             shift and go to state 42
    SENIORITY       shift and go to state 44
    ALLOC           shift and go to state 40
    AUTHORISED      shift and go to state 43
    EXECUTION       shift and go to state 45

  ! BEFORE          [ reduce using rule 22 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! BOD             [ reduce using rule 22 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SOD             [ reduce using rule 22 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SENIORITY       [ reduce using rule 22 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! ALLOC           [ reduce using rule 22 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! AUTHORISED      [ reduce using rule 22 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! EXECUTION       [ reduce using rule 22 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]

    rules                          shift and go to state 145

state 131

    (57) task_list -> NODE . COMMA task_list
    (58) task_list -> NODE .

    COMMA           shift and go to state 146
    RSQPAREN        reduce using rule 58 (task_list -> NODE .)


state 132

    (54) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list . RSQPAREN RPAREN END rules
    (55) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list . RSQPAREN RPAREN COMMA fork
    (56) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list . RSQPAREN RPAREN END

    RSQPAREN        shift and go to state 147


state 133

    (51) fork -> OR LPAREN NODE COMMA LSQPAREN task_list . RSQPAREN RPAREN END rules
    (52) fork -> OR LPAREN NODE COMMA LSQPAREN task_list . RSQPAREN RPAREN COMMA fork
    (53) fork -> OR LPAREN NODE COMMA LSQPAREN task_list . RSQPAREN RPAREN END

    RSQPAREN        shift and go to state 148


state 134

    (15) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . bod_task_node_pair
    (14) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (15) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair
    (16) bod_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 82

    bod_task_node_pair             shift and go to state 149

state 135

    (14) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END . rules
    (16) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . ALLOC COLON allocation_pair
    (9) rules -> . AUTHORISED COLON authorised_pair
    (10) rules -> . EXECUTION COLON fork

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for ALLOC resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
  ! shift/reduce conflict for EXECUTION resolved as shift
    $end            reduce using rule 16 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    USERS           reduce using rule 16 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BEFORE          shift and go to state 47
    BOD             shift and go to state 46
    SOD             shift and go to state 42
    SENIORITY       shift and go to state 44
    ALLOC           shift and go to state 40
    AUTHORISED      shift and go to state 43
    EXECUTION       shift and go to state 45

  ! BEFORE          [ reduce using rule 16 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! BOD             [ reduce using rule 16 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SOD             [ reduce using rule 16 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SENIORITY       [ reduce using rule 16 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! ALLOC           [ reduce using rule 16 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! AUTHORISED      [ reduce using rule 16 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! EXECUTION       [ reduce using rule 16 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]

    rules                          shift and go to state 150

state 136

    (12) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA . before_task_node_pair
    (11) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END rules
    (12) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair
    (13) before_task_node_pair -> . LPAREN NODE COMMA NODE RPAREN END

    LPAREN          shift and go to state 85

    before_task_node_pair          shift and go to state 151

state 137

    (11) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END . rules
    (13) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . ALLOC COLON allocation_pair
    (9) rules -> . AUTHORISED COLON authorised_pair
    (10) rules -> . EXECUTION COLON fork

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for ALLOC resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
  ! shift/reduce conflict for EXECUTION resolved as shift
    $end            reduce using rule 13 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    USERS           reduce using rule 13 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .)
    BEFORE          shift and go to state 47
    BOD             shift and go to state 46
    SOD             shift and go to state 42
    SENIORITY       shift and go to state 44
    ALLOC           shift and go to state 40
    AUTHORISED      shift and go to state 43
    EXECUTION       shift and go to state 45

  ! BEFORE          [ reduce using rule 13 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! BOD             [ reduce using rule 13 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SOD             [ reduce using rule 13 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! SENIORITY       [ reduce using rule 13 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! ALLOC           [ reduce using rule 13 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! AUTHORISED      [ reduce using rule 13 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]
  ! EXECUTION       [ reduce using rule 13 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END .) ]

    rules                          shift and go to state 152

state 138

    (24) allocation_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .

    $end            reduce using rule 24 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    USERS           reduce using rule 24 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    BEFORE          reduce using rule 24 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    BOD             reduce using rule 24 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    SOD             reduce using rule 24 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    SENIORITY       reduce using rule 24 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    ALLOC           reduce using rule 24 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    AUTHORISED      reduce using rule 24 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    EXECUTION       reduce using rule 24 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)


state 139

    (23) allocation_pair -> LPAREN NODE COMMA NODE RPAREN END rules .

    $end            reduce using rule 23 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    USERS           reduce using rule 23 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BEFORE          reduce using rule 23 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BOD             reduce using rule 23 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SOD             reduce using rule 23 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SENIORITY       reduce using rule 23 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    ALLOC           reduce using rule 23 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    AUTHORISED      reduce using rule 23 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    EXECUTION       reduce using rule 23 (allocation_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)


state 140

    (18) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .

    $end            reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    USERS           reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    BEFORE          reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    BOD             reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    SOD             reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    SENIORITY       reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    ALLOC           reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    AUTHORISED      reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)
    EXECUTION       reduce using rule 18 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA sod_task_node_pair .)


state 141

    (17) sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .

    $end            reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    USERS           reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BEFORE          reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BOD             reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SOD             reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SENIORITY       reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    ALLOC           reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    AUTHORISED      reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    EXECUTION       reduce using rule 17 (sod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)


state 142

    (29) user_list -> NODE COMMA user_list .

    RSQPAREN        reduce using rule 29 (user_list -> NODE COMMA user_list .)


state 143

    (26) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN . END rules
    (27) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN . COMMA authorised_pair
    (28) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN . END

    END             shift and go to state 154
    COMMA           shift and go to state 153


state 144

    (21) user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .

    $end            reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    USERS           reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    BEFORE          reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    BOD             reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    SOD             reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    SENIORITY       reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    ALLOC           reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    AUTHORISED      reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)
    EXECUTION       reduce using rule 21 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA user_node_pair .)


state 145

    (20) user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .

    $end            reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    USERS           reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BEFORE          reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BOD             reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SOD             reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SENIORITY       reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    ALLOC           reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    AUTHORISED      reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    EXECUTION       reduce using rule 20 (user_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)


state 146

    (57) task_list -> NODE COMMA . task_list
    (57) task_list -> . NODE COMMA task_list
    (58) task_list -> . NODE

    NODE            shift and go to state 131

    task_list                      shift and go to state 155

state 147

    (54) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN . RPAREN END rules
    (55) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN . RPAREN COMMA fork
    (56) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN . RPAREN END

    RPAREN          shift and go to state 156


state 148

    (51) fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN . RPAREN END rules
    (52) fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN . RPAREN COMMA fork
    (53) fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN . RPAREN END

    RPAREN          shift and go to state 157


state 149

    (15) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .

    $end            reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    USERS           reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    BEFORE          reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    BOD             reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    SOD             reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    SENIORITY       reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    ALLOC           reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    AUTHORISED      reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)
    EXECUTION       reduce using rule 15 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA bod_task_node_pair .)


state 150

    (14) bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .

    $end            reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    USERS           reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BEFORE          reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BOD             reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SOD             reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SENIORITY       reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    ALLOC           reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    AUTHORISED      reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    EXECUTION       reduce using rule 14 (bod_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)


state 151

    (12) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .

    $end            reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    USERS           reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    BEFORE          reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    BOD             reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    SOD             reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    SENIORITY       reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    ALLOC           reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    AUTHORISED      reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)
    EXECUTION       reduce using rule 12 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN COMMA before_task_node_pair .)


state 152

    (11) before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .

    $end            reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    USERS           reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BEFORE          reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    BOD             reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SOD             reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    SENIORITY       reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    ALLOC           reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    AUTHORISED      reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)
    EXECUTION       reduce using rule 11 (before_task_node_pair -> LPAREN NODE COMMA NODE RPAREN END rules .)


state 153

    (27) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA . authorised_pair
    (26) authorised_pair -> . LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules
    (27) authorised_pair -> . LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair
    (28) authorised_pair -> . LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END

    LPAREN          shift and go to state 76

    authorised_pair                shift and go to state 158

state 154

    (26) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END . rules
    (28) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . ALLOC COLON allocation_pair
    (9) rules -> . AUTHORISED COLON authorised_pair
    (10) rules -> . EXECUTION COLON fork

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for ALLOC resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
  ! shift/reduce conflict for EXECUTION resolved as shift
    $end            reduce using rule 28 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .)
    USERS           reduce using rule 28 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .)
    BEFORE          shift and go to state 47
    BOD             shift and go to state 46
    SOD             shift and go to state 42
    SENIORITY       shift and go to state 44
    ALLOC           shift and go to state 40
    AUTHORISED      shift and go to state 43
    EXECUTION       shift and go to state 45

  ! BEFORE          [ reduce using rule 28 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .) ]
  ! BOD             [ reduce using rule 28 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .) ]
  ! SOD             [ reduce using rule 28 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .) ]
  ! SENIORITY       [ reduce using rule 28 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .) ]
  ! ALLOC           [ reduce using rule 28 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .) ]
  ! AUTHORISED      [ reduce using rule 28 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .) ]
  ! EXECUTION       [ reduce using rule 28 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END .) ]

    rules                          shift and go to state 159

state 155

    (57) task_list -> NODE COMMA task_list .

    RSQPAREN        reduce using rule 57 (task_list -> NODE COMMA task_list .)


state 156

    (54) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN . END rules
    (55) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN . COMMA fork
    (56) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN . END

    END             shift and go to state 161
    COMMA           shift and go to state 160


state 157

    (51) fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN . END rules
    (52) fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN . COMMA fork
    (53) fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN . END

    END             shift and go to state 163
    COMMA           shift and go to state 162


state 158

    (27) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .

    $end            reduce using rule 27 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)
    USERS           reduce using rule 27 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)
    BEFORE          reduce using rule 27 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)
    BOD             reduce using rule 27 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)
    SOD             reduce using rule 27 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)
    SENIORITY       reduce using rule 27 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)
    ALLOC           reduce using rule 27 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)
    AUTHORISED      reduce using rule 27 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)
    EXECUTION       reduce using rule 27 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN COMMA authorised_pair .)


state 159

    (26) authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .

    $end            reduce using rule 26 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)
    USERS           reduce using rule 26 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)
    BEFORE          reduce using rule 26 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)
    BOD             reduce using rule 26 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)
    SOD             reduce using rule 26 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)
    SENIORITY       reduce using rule 26 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)
    ALLOC           reduce using rule 26 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)
    AUTHORISED      reduce using rule 26 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)
    EXECUTION       reduce using rule 26 (authorised_pair -> LPAREN NODE COMMA LSQPAREN user_list RSQPAREN RPAREN END rules .)


state 160

    (55) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA . fork
    (51) fork -> . OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (52) fork -> . OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (53) fork -> . OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END
    (54) fork -> . XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (55) fork -> . XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (56) fork -> . XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END

    OR              shift and go to state 81
    XOR             shift and go to state 80

    fork                           shift and go to state 164

state 161

    (54) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END . rules
    (56) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . ALLOC COLON allocation_pair
    (9) rules -> . AUTHORISED COLON authorised_pair
    (10) rules -> . EXECUTION COLON fork

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for ALLOC resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
  ! shift/reduce conflict for EXECUTION resolved as shift
    $end            reduce using rule 56 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .)
    USERS           reduce using rule 56 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .)
    BEFORE          shift and go to state 47
    BOD             shift and go to state 46
    SOD             shift and go to state 42
    SENIORITY       shift and go to state 44
    ALLOC           shift and go to state 40
    AUTHORISED      shift and go to state 43
    EXECUTION       shift and go to state 45

  ! BEFORE          [ reduce using rule 56 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]
  ! BOD             [ reduce using rule 56 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]
  ! SOD             [ reduce using rule 56 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]
  ! SENIORITY       [ reduce using rule 56 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]
  ! ALLOC           [ reduce using rule 56 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]
  ! AUTHORISED      [ reduce using rule 56 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]
  ! EXECUTION       [ reduce using rule 56 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]

    rules                          shift and go to state 165

state 162

    (52) fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA . fork
    (51) fork -> . OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (52) fork -> . OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (53) fork -> . OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END
    (54) fork -> . XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules
    (55) fork -> . XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork
    (56) fork -> . XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END

    OR              shift and go to state 81
    XOR             shift and go to state 80

    fork                           shift and go to state 166

state 163

    (51) fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END . rules
    (53) fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .
    (4) rules -> . BEFORE COLON before_task_node_pair
    (5) rules -> . BOD COLON bod_task_node_pair
    (6) rules -> . SOD COLON sod_task_node_pair
    (7) rules -> . SENIORITY COLON user_node_pair
    (8) rules -> . ALLOC COLON allocation_pair
    (9) rules -> . AUTHORISED COLON authorised_pair
    (10) rules -> . EXECUTION COLON fork

  ! shift/reduce conflict for BEFORE resolved as shift
  ! shift/reduce conflict for BOD resolved as shift
  ! shift/reduce conflict for SOD resolved as shift
  ! shift/reduce conflict for SENIORITY resolved as shift
  ! shift/reduce conflict for ALLOC resolved as shift
  ! shift/reduce conflict for AUTHORISED resolved as shift
  ! shift/reduce conflict for EXECUTION resolved as shift
    $end            reduce using rule 53 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .)
    USERS           reduce using rule 53 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .)
    BEFORE          shift and go to state 47
    BOD             shift and go to state 46
    SOD             shift and go to state 42
    SENIORITY       shift and go to state 44
    ALLOC           shift and go to state 40
    AUTHORISED      shift and go to state 43
    EXECUTION       shift and go to state 45

  ! BEFORE          [ reduce using rule 53 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]
  ! BOD             [ reduce using rule 53 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]
  ! SOD             [ reduce using rule 53 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]
  ! SENIORITY       [ reduce using rule 53 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]
  ! ALLOC           [ reduce using rule 53 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]
  ! AUTHORISED      [ reduce using rule 53 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]
  ! EXECUTION       [ reduce using rule 53 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END .) ]

    rules                          shift and go to state 167

state 164

    (55) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .

    $end            reduce using rule 55 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    USERS           reduce using rule 55 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    BEFORE          reduce using rule 55 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    BOD             reduce using rule 55 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    SOD             reduce using rule 55 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    SENIORITY       reduce using rule 55 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    ALLOC           reduce using rule 55 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    AUTHORISED      reduce using rule 55 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    EXECUTION       reduce using rule 55 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)


state 165

    (54) fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .

    $end            reduce using rule 54 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    USERS           reduce using rule 54 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    BEFORE          reduce using rule 54 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    BOD             reduce using rule 54 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    SOD             reduce using rule 54 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    SENIORITY       reduce using rule 54 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    ALLOC           reduce using rule 54 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    AUTHORISED      reduce using rule 54 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    EXECUTION       reduce using rule 54 (fork -> XOR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)


state 166

    (52) fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .

    $end            reduce using rule 52 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    USERS           reduce using rule 52 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    BEFORE          reduce using rule 52 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    BOD             reduce using rule 52 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    SOD             reduce using rule 52 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    SENIORITY       reduce using rule 52 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    ALLOC           reduce using rule 52 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    AUTHORISED      reduce using rule 52 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)
    EXECUTION       reduce using rule 52 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN COMMA fork .)


state 167

    (51) fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .

    $end            reduce using rule 51 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    USERS           reduce using rule 51 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    BEFORE          reduce using rule 51 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    BOD             reduce using rule 51 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    SOD             reduce using rule 51 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    SENIORITY       reduce using rule 51 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    ALLOC           reduce using rule 51 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    AUTHORISED      reduce using rule 51 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)
    EXECUTION       reduce using rule 51 (fork -> OR LPAREN NODE COMMA LSQPAREN task_list RSQPAREN RPAREN END rules .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for BEFORE in state 27 resolved as shift
WARNING: shift/reduce conflict for BOD in state 27 resolved as shift
WARNING: shift/reduce conflict for SOD in state 27 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 27 resolved as shift
WARNING: shift/reduce conflict for ALLOC in state 27 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 27 resolved as shift
WARNING: shift/reduce conflict for EXECUTION in state 27 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 39 resolved as shift
WARNING: shift/reduce conflict for BOD in state 39 resolved as shift
WARNING: shift/reduce conflict for SOD in state 39 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 39 resolved as shift
WARNING: shift/reduce conflict for ALLOC in state 39 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 39 resolved as shift
WARNING: shift/reduce conflict for EXECUTION in state 39 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 124 resolved as shift
WARNING: shift/reduce conflict for BOD in state 124 resolved as shift
WARNING: shift/reduce conflict for SOD in state 124 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 124 resolved as shift
WARNING: shift/reduce conflict for ALLOC in state 124 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 124 resolved as shift
WARNING: shift/reduce conflict for EXECUTION in state 124 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 126 resolved as shift
WARNING: shift/reduce conflict for BOD in state 126 resolved as shift
WARNING: shift/reduce conflict for SOD in state 126 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 126 resolved as shift
WARNING: shift/reduce conflict for ALLOC in state 126 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 126 resolved as shift
WARNING: shift/reduce conflict for EXECUTION in state 126 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 130 resolved as shift
WARNING: shift/reduce conflict for BOD in state 130 resolved as shift
WARNING: shift/reduce conflict for SOD in state 130 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 130 resolved as shift
WARNING: shift/reduce conflict for ALLOC in state 130 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 130 resolved as shift
WARNING: shift/reduce conflict for EXECUTION in state 130 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 135 resolved as shift
WARNING: shift/reduce conflict for BOD in state 135 resolved as shift
WARNING: shift/reduce conflict for SOD in state 135 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 135 resolved as shift
WARNING: shift/reduce conflict for ALLOC in state 135 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 135 resolved as shift
WARNING: shift/reduce conflict for EXECUTION in state 135 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 137 resolved as shift
WARNING: shift/reduce conflict for BOD in state 137 resolved as shift
WARNING: shift/reduce conflict for SOD in state 137 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 137 resolved as shift
WARNING: shift/reduce conflict for ALLOC in state 137 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 137 resolved as shift
WARNING: shift/reduce conflict for EXECUTION in state 137 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 154 resolved as shift
WARNING: shift/reduce conflict for BOD in state 154 resolved as shift
WARNING: shift/reduce conflict for SOD in state 154 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 154 resolved as shift
WARNING: shift/reduce conflict for ALLOC in state 154 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 154 resolved as shift
WARNING: shift/reduce conflict for EXECUTION in state 154 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 161 resolved as shift
WARNING: shift/reduce conflict for BOD in state 161 resolved as shift
WARNING: shift/reduce conflict for SOD in state 161 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 161 resolved as shift
WARNING: shift/reduce conflict for ALLOC in state 161 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 161 resolved as shift
WARNING: shift/reduce conflict for EXECUTION in state 161 resolved as shift
WARNING: shift/reduce conflict for BEFORE in state 163 resolved as shift
WARNING: shift/reduce conflict for BOD in state 163 resolved as shift
WARNING: shift/reduce conflict for SOD in state 163 resolved as shift
WARNING: shift/reduce conflict for SENIORITY in state 163 resolved as shift
WARNING: shift/reduce conflict for ALLOC in state 163 resolved as shift
WARNING: shift/reduce conflict for AUTHORISED in state 163 resolved as shift
WARNING: shift/reduce conflict for EXECUTION in state 163 resolved as shift
